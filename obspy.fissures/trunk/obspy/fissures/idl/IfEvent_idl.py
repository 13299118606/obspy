# Python stubs generated by omniidl from IfEvent.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "Fissures.idl"
import Fissures_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
# #include "IfNetwork.idl"
import IfNetwork_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfNetwork = omniORB.openModule("Fissures.IfNetwork")
_0_Fissures__POA.IfNetwork = omniORB.openModule("Fissures__POA.IfNetwork")
# #include "IfTimeSeries.idl"
import IfTimeSeries_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfTimeSeries = omniORB.openModule("Fissures.IfTimeSeries")
_0_Fissures__POA.IfTimeSeries = omniORB.openModule("Fissures__POA.IfTimeSeries")
# #include "IfParameterMgr.idl"
import IfParameterMgr_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfParameterMgr = omniORB.openModule("Fissures.IfParameterMgr")
_0_Fissures__POA.IfParameterMgr = omniORB.openModule("Fissures__POA.IfParameterMgr")
# #include "IfSeismogramDC.idl"
import IfSeismogramDC_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfSeismogramDC = omniORB.openModule("Fissures.IfSeismogramDC")
_0_Fissures__POA.IfSeismogramDC = omniORB.openModule("Fissures__POA.IfSeismogramDC")
# #include "IfSeismogramMgr.idl"
import IfSeismogramMgr_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfSeismogramMgr = omniORB.openModule("Fissures.IfSeismogramMgr")
_0_Fissures__POA.IfSeismogramMgr = omniORB.openModule("Fissures__POA.IfSeismogramMgr")
# #include "IfDataSetMgr.idl"
import IfDataSetMgr_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfDataSetMgr = omniORB.openModule("Fissures.IfDataSetMgr")
_0_Fissures__POA.IfDataSetMgr = omniORB.openModule("Fissures__POA.IfDataSetMgr")
# #include "IfPickMgr.idl"
import IfPickMgr_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfPickMgr = omniORB.openModule("Fissures.IfPickMgr")
_0_Fissures__POA.IfPickMgr = omniORB.openModule("Fissures__POA.IfPickMgr")
# #include "CosEventComm.idl"
import CosEventComm_idl
_0_CosEventComm = omniORB.openModule("CosEventComm")
_0_CosEventComm__POA = omniORB.openModule("CosEventComm__POA")
# #include "CosEventChannelAdmin.idl"
import CosEventChannelAdmin_idl
_0_CosEventChannelAdmin = omniORB.openModule("CosEventChannelAdmin")
_0_CosEventChannelAdmin__POA = omniORB.openModule("CosEventChannelAdmin__POA")

#
# Start of module "Fissures"
#
__name__ = "Fissures"
_0_Fissures = omniORB.openModule("Fissures", r"IfEvent.idl")
_0_Fissures__POA = omniORB.openModule("Fissures__POA", r"IfEvent.idl")


#
# Start of module "Fissures.IfEvent"
#
__name__ = "Fissures.IfEvent"
_0_Fissures.IfEvent = omniORB.openModule("Fissures.IfEvent", r"IfEvent.idl")
_0_Fissures__POA.IfEvent = omniORB.openModule("Fissures__POA.IfEvent", r"IfEvent.idl")

_0_Fissures.IfEvent.VERSION = "1.0"

# typedef ... Pick
class Pick (_0_Fissures.IfPickMgr.Pick):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/Pick:1.0"

_0_Fissures.IfEvent.Pick = Pick
_0_Fissures.IfEvent._d_Pick  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/Pick:1.0"]
_0_Fissures.IfEvent._ad_Pick = (omniORB.tcInternal.tv_alias, Pick._NP_RepositoryId, "Pick", omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/Pick:1.0"])
_0_Fissures.IfEvent._tc_Pick = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_Pick)
omniORB.registerType(Pick._NP_RepositoryId, _0_Fissures.IfEvent._ad_Pick, _0_Fissures.IfEvent._tc_Pick)
del Pick

# typedef ... SiteId
class SiteId (_0_Fissures.IfNetwork.SiteId):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/SiteId:1.0"

_0_Fissures.IfEvent.SiteId = SiteId
_0_Fissures.IfEvent._d_SiteId  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfNetwork/SiteId:1.0"]
_0_Fissures.IfEvent._ad_SiteId = (omniORB.tcInternal.tv_alias, SiteId._NP_RepositoryId, "SiteId", omniORB.typeMapping["IDL:iris.edu/Fissures/IfNetwork/SiteId:1.0"])
_0_Fissures.IfEvent._tc_SiteId = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_SiteId)
omniORB.registerType(SiteId._NP_RepositoryId, _0_Fissures.IfEvent._ad_SiteId, _0_Fissures.IfEvent._tc_SiteId)
del SiteId

# typedef ... ParameterRef
class ParameterRef (_0_Fissures.IfParameterMgr.ParameterRef):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/ParameterRef:1.0"

_0_Fissures.IfEvent.ParameterRef = ParameterRef
_0_Fissures.IfEvent._d_ParameterRef  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfParameterMgr/ParameterRef:1.0"]
_0_Fissures.IfEvent._ad_ParameterRef = (omniORB.tcInternal.tv_alias, ParameterRef._NP_RepositoryId, "ParameterRef", omniORB.typeMapping["IDL:iris.edu/Fissures/IfParameterMgr/ParameterRef:1.0"])
_0_Fissures.IfEvent._tc_ParameterRef = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_ParameterRef)
omniORB.registerType(ParameterRef._NP_RepositoryId, _0_Fissures.IfEvent._ad_ParameterRef, _0_Fissures.IfEvent._tc_ParameterRef)
del ParameterRef

# interface EventFinder;
_0_Fissures.IfEvent._d_EventFinder = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfEvent/EventFinder:1.0", "EventFinder")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventFinder:1.0"] = _0_Fissures.IfEvent._d_EventFinder

# interface EventFactory;
_0_Fissures.IfEvent._d_EventFactory = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfEvent/EventFactory:1.0", "EventFactory")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventFactory:1.0"] = _0_Fissures.IfEvent._d_EventFactory

# interface EventAccess;
_0_Fissures.IfEvent._d_EventAccess = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfEvent/EventAccess:1.0", "EventAccess")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventAccess:1.0"] = _0_Fissures.IfEvent._d_EventAccess

# typedef ... EventAccessSeq
class EventAccessSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/EventAccessSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfEvent.EventAccessSeq = EventAccessSeq
_0_Fissures.IfEvent._d_EventAccessSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventAccess:1.0"], 0)
_0_Fissures.IfEvent._ad_EventAccessSeq = (omniORB.tcInternal.tv_alias, EventAccessSeq._NP_RepositoryId, "EventAccessSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventAccess:1.0"], 0))
_0_Fissures.IfEvent._tc_EventAccessSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_EventAccessSeq)
omniORB.registerType(EventAccessSeq._NP_RepositoryId, _0_Fissures.IfEvent._ad_EventAccessSeq, _0_Fissures.IfEvent._tc_EventAccessSeq)
del EventAccessSeq

# interface Event;
_0_Fissures.IfEvent._d_Event = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfEvent/Event:1.0", "Event")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Event:1.0"] = _0_Fissures.IfEvent._d_Event

# typedef ... EventSeq
class EventSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/EventSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfEvent.EventSeq = EventSeq
_0_Fissures.IfEvent._d_EventSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Event:1.0"], 0)
_0_Fissures.IfEvent._ad_EventSeq = (omniORB.tcInternal.tv_alias, EventSeq._NP_RepositoryId, "EventSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Event:1.0"], 0))
_0_Fissures.IfEvent._tc_EventSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_EventSeq)
omniORB.registerType(EventSeq._NP_RepositoryId, _0_Fissures.IfEvent._ad_EventSeq, _0_Fissures.IfEvent._tc_EventSeq)
del EventSeq

# interface EventChannelFinder;
_0_Fissures.IfEvent._d_EventChannelFinder = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfEvent/EventChannelFinder:1.0", "EventChannelFinder")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventChannelFinder:1.0"] = _0_Fissures.IfEvent._d_EventChannelFinder

# typedef ... EventId
class EventId:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/EventId:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfEvent.EventId = EventId
_0_Fissures.IfEvent._d_EventId  = (omniORB.tcInternal.tv_string,0)
_0_Fissures.IfEvent._ad_EventId = (omniORB.tcInternal.tv_alias, EventId._NP_RepositoryId, "EventId", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfEvent._tc_EventId = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_EventId)
omniORB.registerType(EventId._NP_RepositoryId, _0_Fissures.IfEvent._ad_EventId, _0_Fissures.IfEvent._tc_EventId)
del EventId

# typedef ... OriginId
class OriginId:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/OriginId:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfEvent.OriginId = OriginId
_0_Fissures.IfEvent._d_OriginId  = (omniORB.tcInternal.tv_string,0)
_0_Fissures.IfEvent._ad_OriginId = (omniORB.tcInternal.tv_alias, OriginId._NP_RepositoryId, "OriginId", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfEvent._tc_OriginId = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_OriginId)
omniORB.registerType(OriginId._NP_RepositoryId, _0_Fissures.IfEvent._ad_OriginId, _0_Fissures.IfEvent._tc_OriginId)
del OriginId

# typedef ... PredictedArrivalId
class PredictedArrivalId:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/PredictedArrivalId:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfEvent.PredictedArrivalId = PredictedArrivalId
_0_Fissures.IfEvent._d_PredictedArrivalId  = (omniORB.tcInternal.tv_string,0)
_0_Fissures.IfEvent._ad_PredictedArrivalId = (omniORB.tcInternal.tv_alias, PredictedArrivalId._NP_RepositoryId, "PredictedArrivalId", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfEvent._tc_PredictedArrivalId = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_PredictedArrivalId)
omniORB.registerType(PredictedArrivalId._NP_RepositoryId, _0_Fissures.IfEvent._ad_PredictedArrivalId, _0_Fissures.IfEvent._tc_PredictedArrivalId)
del PredictedArrivalId

# typedef ... VelocityModelId
class VelocityModelId:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/VelocityModelId:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfEvent.VelocityModelId = VelocityModelId
_0_Fissures.IfEvent._d_VelocityModelId  = (omniORB.tcInternal.tv_string,0)
_0_Fissures.IfEvent._ad_VelocityModelId = (omniORB.tcInternal.tv_alias, VelocityModelId._NP_RepositoryId, "VelocityModelId", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfEvent._tc_VelocityModelId = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_VelocityModelId)
omniORB.registerType(VelocityModelId._NP_RepositoryId, _0_Fissures.IfEvent._ad_VelocityModelId, _0_Fissures.IfEvent._tc_VelocityModelId)
del VelocityModelId

# typedef ... PickId
class PickId:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/PickId:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfEvent.PickId = PickId
_0_Fissures.IfEvent._d_PickId  = (omniORB.tcInternal.tv_string,0)
_0_Fissures.IfEvent._ad_PickId = (omniORB.tcInternal.tv_alias, PickId._NP_RepositoryId, "PickId", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfEvent._tc_PickId = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_PickId)
omniORB.registerType(PickId._NP_RepositoryId, _0_Fissures.IfEvent._ad_PickId, _0_Fissures.IfEvent._tc_PickId)
del PickId

# typedef ... Phase
class Phase:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/Phase:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfEvent.Phase = Phase
_0_Fissures.IfEvent._d_Phase  = (omniORB.tcInternal.tv_string,0)
_0_Fissures.IfEvent._ad_Phase = (omniORB.tcInternal.tv_alias, Phase._NP_RepositoryId, "Phase", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfEvent._tc_Phase = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_Phase)
omniORB.registerType(Phase._NP_RepositoryId, _0_Fissures.IfEvent._ad_Phase, _0_Fissures.IfEvent._tc_Phase)
del Phase

# typedef ... Catalog
class Catalog:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/Catalog:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfEvent.Catalog = Catalog
_0_Fissures.IfEvent._d_Catalog  = (omniORB.tcInternal.tv_string,0)
_0_Fissures.IfEvent._ad_Catalog = (omniORB.tcInternal.tv_alias, Catalog._NP_RepositoryId, "Catalog", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfEvent._tc_Catalog = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_Catalog)
omniORB.registerType(Catalog._NP_RepositoryId, _0_Fissures.IfEvent._ad_Catalog, _0_Fissures.IfEvent._tc_Catalog)
del Catalog

# typedef ... CatalogSeq
class CatalogSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/CatalogSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfEvent.CatalogSeq = CatalogSeq
_0_Fissures.IfEvent._d_CatalogSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Catalog:1.0"], 0)
_0_Fissures.IfEvent._ad_CatalogSeq = (omniORB.tcInternal.tv_alias, CatalogSeq._NP_RepositoryId, "CatalogSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Catalog:1.0"], 0))
_0_Fissures.IfEvent._tc_CatalogSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_CatalogSeq)
omniORB.registerType(CatalogSeq._NP_RepositoryId, _0_Fissures.IfEvent._ad_CatalogSeq, _0_Fissures.IfEvent._tc_CatalogSeq)
del CatalogSeq

# typedef ... Contributor
class Contributor:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/Contributor:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfEvent.Contributor = Contributor
_0_Fissures.IfEvent._d_Contributor  = (omniORB.tcInternal.tv_string,0)
_0_Fissures.IfEvent._ad_Contributor = (omniORB.tcInternal.tv_alias, Contributor._NP_RepositoryId, "Contributor", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfEvent._tc_Contributor = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_Contributor)
omniORB.registerType(Contributor._NP_RepositoryId, _0_Fissures.IfEvent._ad_Contributor, _0_Fissures.IfEvent._tc_Contributor)
del Contributor

# typedef ... ContributorSeq
class ContributorSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/ContributorSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfEvent.ContributorSeq = ContributorSeq
_0_Fissures.IfEvent._d_ContributorSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Contributor:1.0"], 0)
_0_Fissures.IfEvent._ad_ContributorSeq = (omniORB.tcInternal.tv_alias, ContributorSeq._NP_RepositoryId, "ContributorSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Contributor:1.0"], 0))
_0_Fissures.IfEvent._tc_ContributorSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_ContributorSeq)
omniORB.registerType(ContributorSeq._NP_RepositoryId, _0_Fissures.IfEvent._ad_ContributorSeq, _0_Fissures.IfEvent._tc_ContributorSeq)
del ContributorSeq

# valuetype EventAttr
_0_Fissures.IfEvent._d_EventAttr = (omniORB.tcInternal.tv__indirect, ["IDL:iris.edu/Fissures/IfEvent/EventAttr:1.0"])
omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventAttr:1.0"] = _0_Fissures.IfEvent._d_EventAttr
_0_Fissures.IfEvent.EventAttr = omniORB.newEmptyClass()

class EventAttr (_0_CORBA.ValueBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/EventAttr:1.0"

    def __init__(self, *args, **kwargs):
        if args:
            if len(args) != 3:
                raise TypeError("EventAttr() takes 3 arguments "
                                "(%d given)" % len(args))
            self.name = args[0]
            self.region = args[1]
            self.parm_ids = args[2]
        if kwargs:
            self.__dict__.update(kwargs)

omniORB.registerValueFactory(EventAttr._NP_RepositoryId, EventAttr)

_0_Fissures.IfEvent.EventAttr = EventAttr
_0_Fissures.IfEvent._d_EventAttr  = (omniORB.tcInternal.tv_value, EventAttr, EventAttr._NP_RepositoryId, "EventAttr", _0_CORBA.VM_NONE, None, _0_CORBA.tcInternal.tv_null, "name", (omniORB.tcInternal.tv_string,0), _0_CORBA.PUBLIC_MEMBER, "region", omniORB.typeMapping["IDL:iris.edu/Fissures/FlinnEngdahlRegion:1.0"], _0_CORBA.PUBLIC_MEMBER, "parm_ids", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/ParameterRef:1.0"], 0), _0_CORBA.PUBLIC_MEMBER)
_0_Fissures.IfEvent._tc_EventAttr = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._d_EventAttr)
omniORB.registerType(EventAttr._NP_RepositoryId, _0_Fissures.IfEvent._d_EventAttr, _0_Fissures.IfEvent._tc_EventAttr)
del EventAttr


# valuetype PredictedArrival
_0_Fissures.IfEvent._d_PredictedArrival = (omniORB.tcInternal.tv__indirect, ["IDL:iris.edu/Fissures/IfEvent/PredictedArrival:1.0"])
omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/PredictedArrival:1.0"] = _0_Fissures.IfEvent._d_PredictedArrival
_0_Fissures.IfEvent.PredictedArrival = omniORB.newEmptyClass()

class PredictedArrival (_0_CORBA.ValueBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/PredictedArrival:1.0"

    def __init__(self, *args, **kwargs):
        if args:
            if len(args) != 7:
                raise TypeError("PredictedArrival() takes 7 arguments "
                                "(%d given)" % len(args))
            self.id = args[0]
            self.name = args[1]
            self.travel_time = args[2]
            self.ray_parameter = args[3]
            self.dtdh = args[4]
            self.model_id = args[5]
            self.parm_ids = args[6]
        if kwargs:
            self.__dict__.update(kwargs)

omniORB.registerValueFactory(PredictedArrival._NP_RepositoryId, PredictedArrival)

_0_Fissures.IfEvent.PredictedArrival = PredictedArrival
_0_Fissures.IfEvent._d_PredictedArrival  = (omniORB.tcInternal.tv_value, PredictedArrival, PredictedArrival._NP_RepositoryId, "PredictedArrival", _0_CORBA.VM_NONE, None, _0_CORBA.tcInternal.tv_null, "id", omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/PredictedArrivalId:1.0"], _0_CORBA.PRIVATE_MEMBER, "name", (omniORB.tcInternal.tv_string,0), _0_CORBA.PUBLIC_MEMBER, "travel_time", omniORB.typeMapping["IDL:iris.edu/Fissures/TimeInterval:1.0"], _0_CORBA.PUBLIC_MEMBER, "ray_parameter", omniORB.typeMapping["IDL:iris.edu/Fissures/Quantity:1.0"], _0_CORBA.PUBLIC_MEMBER, "dtdh", omniORB.typeMapping["IDL:iris.edu/Fissures/Quantity:1.0"], _0_CORBA.PUBLIC_MEMBER, "model_id", omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/VelocityModelId:1.0"], _0_CORBA.PUBLIC_MEMBER, "parm_ids", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/ParameterRef:1.0"], 0), _0_CORBA.PUBLIC_MEMBER)
_0_Fissures.IfEvent._tc_PredictedArrival = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._d_PredictedArrival)
omniORB.registerType(PredictedArrival._NP_RepositoryId, _0_Fissures.IfEvent._d_PredictedArrival, _0_Fissures.IfEvent._tc_PredictedArrival)
del PredictedArrival


# typedef ... PredictedArrivalSeq
class PredictedArrivalSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/PredictedArrivalSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfEvent.PredictedArrivalSeq = PredictedArrivalSeq
_0_Fissures.IfEvent._d_PredictedArrivalSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/PredictedArrival:1.0"], 0)
_0_Fissures.IfEvent._ad_PredictedArrivalSeq = (omniORB.tcInternal.tv_alias, PredictedArrivalSeq._NP_RepositoryId, "PredictedArrivalSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/PredictedArrival:1.0"], 0))
_0_Fissures.IfEvent._tc_PredictedArrivalSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_PredictedArrivalSeq)
omniORB.registerType(PredictedArrivalSeq._NP_RepositoryId, _0_Fissures.IfEvent._ad_PredictedArrivalSeq, _0_Fissures.IfEvent._tc_PredictedArrivalSeq)
del PredictedArrivalSeq

# struct Locator
_0_Fissures.IfEvent.Locator = omniORB.newEmptyClass()
class Locator (omniORB.StructBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/Locator:1.0"

    def __init__(self, a_pick, predicted_arrival):
        self.a_pick = a_pick
        self.predicted_arrival = predicted_arrival

_0_Fissures.IfEvent.Locator = Locator
_0_Fissures.IfEvent._d_Locator  = (omniORB.tcInternal.tv_struct, Locator, Locator._NP_RepositoryId, "Locator", "a_pick", omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Pick:1.0"], "predicted_arrival", omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/PredictedArrival:1.0"])
_0_Fissures.IfEvent._tc_Locator = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._d_Locator)
omniORB.registerType(Locator._NP_RepositoryId, _0_Fissures.IfEvent._d_Locator, _0_Fissures.IfEvent._tc_Locator)
del Locator

# typedef ... LocatorSeq
class LocatorSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/LocatorSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfEvent.LocatorSeq = LocatorSeq
_0_Fissures.IfEvent._d_LocatorSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Locator:1.0"], 0)
_0_Fissures.IfEvent._ad_LocatorSeq = (omniORB.tcInternal.tv_alias, LocatorSeq._NP_RepositoryId, "LocatorSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Locator:1.0"], 0))
_0_Fissures.IfEvent._tc_LocatorSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_LocatorSeq)
omniORB.registerType(LocatorSeq._NP_RepositoryId, _0_Fissures.IfEvent._ad_LocatorSeq, _0_Fissures.IfEvent._tc_LocatorSeq)
del LocatorSeq

# typedef ... MagType
class MagType:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/MagType:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfEvent.MagType = MagType
_0_Fissures.IfEvent._d_MagType  = (omniORB.tcInternal.tv_string,0)
_0_Fissures.IfEvent._ad_MagType = (omniORB.tcInternal.tv_alias, MagType._NP_RepositoryId, "MagType", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfEvent._tc_MagType = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_MagType)
omniORB.registerType(MagType._NP_RepositoryId, _0_Fissures.IfEvent._ad_MagType, _0_Fissures.IfEvent._tc_MagType)
del MagType

# typedef ... MagTypeSeq
class MagTypeSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/MagTypeSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfEvent.MagTypeSeq = MagTypeSeq
_0_Fissures.IfEvent._d_MagTypeSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/MagType:1.0"], 0)
_0_Fissures.IfEvent._ad_MagTypeSeq = (omniORB.tcInternal.tv_alias, MagTypeSeq._NP_RepositoryId, "MagTypeSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/MagType:1.0"], 0))
_0_Fissures.IfEvent._tc_MagTypeSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_MagTypeSeq)
omniORB.registerType(MagTypeSeq._NP_RepositoryId, _0_Fissures.IfEvent._ad_MagTypeSeq, _0_Fissures.IfEvent._tc_MagTypeSeq)
del MagTypeSeq

# struct Magnitude
_0_Fissures.IfEvent.Magnitude = omniORB.newEmptyClass()
class Magnitude (omniORB.StructBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/Magnitude:1.0"

    def __init__(self, type, value, contributor):
        self.type = type
        self.value = value
        self.contributor = contributor

_0_Fissures.IfEvent.Magnitude = Magnitude
_0_Fissures.IfEvent._d_Magnitude  = (omniORB.tcInternal.tv_struct, Magnitude, Magnitude._NP_RepositoryId, "Magnitude", "type", omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/MagType:1.0"], "value", omniORB.tcInternal.tv_float, "contributor", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfEvent._tc_Magnitude = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._d_Magnitude)
omniORB.registerType(Magnitude._NP_RepositoryId, _0_Fissures.IfEvent._d_Magnitude, _0_Fissures.IfEvent._tc_Magnitude)
del Magnitude

# typedef ... MagnitudeSeq
class MagnitudeSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/MagnitudeSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfEvent.MagnitudeSeq = MagnitudeSeq
_0_Fissures.IfEvent._d_MagnitudeSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Magnitude:1.0"], 0)
_0_Fissures.IfEvent._ad_MagnitudeSeq = (omniORB.tcInternal.tv_alias, MagnitudeSeq._NP_RepositoryId, "MagnitudeSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Magnitude:1.0"], 0))
_0_Fissures.IfEvent._tc_MagnitudeSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_MagnitudeSeq)
omniORB.registerType(MagnitudeSeq._NP_RepositoryId, _0_Fissures.IfEvent._ad_MagnitudeSeq, _0_Fissures.IfEvent._tc_MagnitudeSeq)
del MagnitudeSeq

# valuetype Origin
_0_Fissures.IfEvent._d_Origin = (omniORB.tcInternal.tv__indirect, ["IDL:iris.edu/Fissures/IfEvent/Origin:1.0"])
omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Origin:1.0"] = _0_Fissures.IfEvent._d_Origin
_0_Fissures.IfEvent.Origin = omniORB.newEmptyClass()

class Origin (_0_CORBA.ValueBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/Origin:1.0"

    def __init__(self, *args, **kwargs):
        if args:
            if len(args) != 7:
                raise TypeError("Origin() takes 7 arguments "
                                "(%d given)" % len(args))
            self.id = args[0]
            self.catalog = args[1]
            self.contributor = args[2]
            self.origin_time = args[3]
            self.my_location = args[4]
            self.magnitudes = args[5]
            self.parm_ids = args[6]
        if kwargs:
            self.__dict__.update(kwargs)

_0_Fissures.IfEvent.Origin = Origin
_0_Fissures.IfEvent._d_Origin  = (omniORB.tcInternal.tv_value, Origin, Origin._NP_RepositoryId, "Origin", _0_CORBA.VM_NONE, None, _0_CORBA.tcInternal.tv_null, "id", omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/OriginId:1.0"], _0_CORBA.PRIVATE_MEMBER, "catalog", (omniORB.tcInternal.tv_string,0), _0_CORBA.PUBLIC_MEMBER, "contributor", (omniORB.tcInternal.tv_string,0), _0_CORBA.PUBLIC_MEMBER, "origin_time", omniORB.typeMapping["IDL:iris.edu/Fissures/Time:1.0"], _0_CORBA.PUBLIC_MEMBER, "my_location", omniORB.typeMapping["IDL:iris.edu/Fissures/Location:1.0"], _0_CORBA.PUBLIC_MEMBER, "magnitudes", omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/MagnitudeSeq:1.0"], _0_CORBA.PUBLIC_MEMBER, "parm_ids", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/ParameterRef:1.0"], 0), _0_CORBA.PUBLIC_MEMBER)
_0_Fissures.IfEvent._tc_Origin = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._d_Origin)
omniORB.registerType(Origin._NP_RepositoryId, _0_Fissures.IfEvent._d_Origin, _0_Fissures.IfEvent._tc_Origin)
del Origin


# typedef ... OriginSeq
class OriginSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/OriginSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfEvent.OriginSeq = OriginSeq
_0_Fissures.IfEvent._d_OriginSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Origin:1.0"], 0)
_0_Fissures.IfEvent._ad_OriginSeq = (omniORB.tcInternal.tv_alias, OriginSeq._NP_RepositoryId, "OriginSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Origin:1.0"], 0))
_0_Fissures.IfEvent._tc_OriginSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_OriginSeq)
omniORB.registerType(OriginSeq._NP_RepositoryId, _0_Fissures.IfEvent._ad_OriginSeq, _0_Fissures.IfEvent._tc_OriginSeq)
del OriginSeq

# typedef ... EventChannelName
class EventChannelName:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/EventChannelName:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfEvent.EventChannelName = EventChannelName
_0_Fissures.IfEvent._d_EventChannelName  = (omniORB.tcInternal.tv_string,0)
_0_Fissures.IfEvent._ad_EventChannelName = (omniORB.tcInternal.tv_alias, EventChannelName._NP_RepositoryId, "EventChannelName", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfEvent._tc_EventChannelName = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_EventChannelName)
omniORB.registerType(EventChannelName._NP_RepositoryId, _0_Fissures.IfEvent._ad_EventChannelName, _0_Fissures.IfEvent._tc_EventChannelName)
del EventChannelName

# struct EventChannelDefinition
_0_Fissures.IfEvent.EventChannelDefinition = omniORB.newEmptyClass()
class EventChannelDefinition (omniORB.StructBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/EventChannelDefinition:1.0"

    def __init__(self, name, the_area, min_depth, max_depth, search_types, min_magnitude, max_magnitude, catalogs, contributors):
        self.name = name
        self.the_area = the_area
        self.min_depth = min_depth
        self.max_depth = max_depth
        self.search_types = search_types
        self.min_magnitude = min_magnitude
        self.max_magnitude = max_magnitude
        self.catalogs = catalogs
        self.contributors = contributors

_0_Fissures.IfEvent.EventChannelDefinition = EventChannelDefinition
_0_Fissures.IfEvent._d_EventChannelDefinition  = (omniORB.tcInternal.tv_struct, EventChannelDefinition, EventChannelDefinition._NP_RepositoryId, "EventChannelDefinition", "name", omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventChannelName:1.0"], "the_area", omniORB.typeMapping["IDL:iris.edu/Fissures/Area:1.0"], "min_depth", omniORB.typeMapping["IDL:iris.edu/Fissures/Length:1.0"], "max_depth", omniORB.typeMapping["IDL:iris.edu/Fissures/Length:1.0"], "search_types", omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/MagType:1.0"], "min_magnitude", omniORB.tcInternal.tv_float, "max_magnitude", omniORB.tcInternal.tv_float, "catalogs", omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/CatalogSeq:1.0"], "contributors", omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/ContributorSeq:1.0"])
_0_Fissures.IfEvent._tc_EventChannelDefinition = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._d_EventChannelDefinition)
omniORB.registerType(EventChannelDefinition._NP_RepositoryId, _0_Fissures.IfEvent._d_EventChannelDefinition, _0_Fissures.IfEvent._tc_EventChannelDefinition)
del EventChannelDefinition

# typedef ... EventChannelDefinitionSeq
class EventChannelDefinitionSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/EventChannelDefinitionSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfEvent.EventChannelDefinitionSeq = EventChannelDefinitionSeq
_0_Fissures.IfEvent._d_EventChannelDefinitionSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventChannelDefinition:1.0"], 0)
_0_Fissures.IfEvent._ad_EventChannelDefinitionSeq = (omniORB.tcInternal.tv_alias, EventChannelDefinitionSeq._NP_RepositoryId, "EventChannelDefinitionSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventChannelDefinition:1.0"], 0))
_0_Fissures.IfEvent._tc_EventChannelDefinitionSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._ad_EventChannelDefinitionSeq)
omniORB.registerType(EventChannelDefinitionSeq._NP_RepositoryId, _0_Fissures.IfEvent._ad_EventChannelDefinitionSeq, _0_Fissures.IfEvent._tc_EventChannelDefinitionSeq)
del EventChannelDefinitionSeq

# struct EventNotify
_0_Fissures.IfEvent.EventNotify = omniORB.newEmptyClass()
class EventNotify (omniORB.StructBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/EventNotify:1.0"

    def __init__(self, the_event, new_origin, new_event):
        self.the_event = the_event
        self.new_origin = new_origin
        self.new_event = new_event

_0_Fissures.IfEvent.EventNotify = EventNotify
_0_Fissures.IfEvent._d_EventNotify  = (omniORB.tcInternal.tv_struct, EventNotify, EventNotify._NP_RepositoryId, "EventNotify", "the_event", omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventAccess:1.0"], "new_origin", omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Origin:1.0"], "new_event", omniORB.tcInternal.tv_boolean)
_0_Fissures.IfEvent._tc_EventNotify = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._d_EventNotify)
omniORB.registerType(EventNotify._NP_RepositoryId, _0_Fissures.IfEvent._d_EventNotify, _0_Fissures.IfEvent._tc_EventNotify)
del EventNotify

# exception EventNotFound
_0_Fissures.IfEvent.EventNotFound = omniORB.newEmptyClass()
class EventNotFound (CORBA.UserException):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/EventNotFound:1.0"

    def __init__(self, event):
        CORBA.UserException.__init__(self, event)
        self.event = event

_0_Fissures.IfEvent.EventNotFound = EventNotFound
_0_Fissures.IfEvent._d_EventNotFound  = (omniORB.tcInternal.tv_except, EventNotFound, EventNotFound._NP_RepositoryId, "EventNotFound", "event", omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventId:1.0"])
_0_Fissures.IfEvent._tc_EventNotFound = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._d_EventNotFound)
omniORB.registerType(EventNotFound._NP_RepositoryId, _0_Fissures.IfEvent._d_EventNotFound, _0_Fissures.IfEvent._tc_EventNotFound)
del EventNotFound

# exception OriginNotFound
_0_Fissures.IfEvent.OriginNotFound = omniORB.newEmptyClass()
class OriginNotFound (CORBA.UserException):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/OriginNotFound:1.0"

    def __init__(self, origin):
        CORBA.UserException.__init__(self, origin)
        self.origin = origin

_0_Fissures.IfEvent.OriginNotFound = OriginNotFound
_0_Fissures.IfEvent._d_OriginNotFound  = (omniORB.tcInternal.tv_except, OriginNotFound, OriginNotFound._NP_RepositoryId, "OriginNotFound", "origin", omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/OriginId:1.0"])
_0_Fissures.IfEvent._tc_OriginNotFound = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._d_OriginNotFound)
omniORB.registerType(OriginNotFound._NP_RepositoryId, _0_Fissures.IfEvent._d_OriginNotFound, _0_Fissures.IfEvent._tc_OriginNotFound)
del OriginNotFound

# exception NoPreferredOrigin
_0_Fissures.IfEvent.NoPreferredOrigin = omniORB.newEmptyClass()
class NoPreferredOrigin (CORBA.UserException):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/NoPreferredOrigin:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_Fissures.IfEvent.NoPreferredOrigin = NoPreferredOrigin
_0_Fissures.IfEvent._d_NoPreferredOrigin  = (omniORB.tcInternal.tv_except, NoPreferredOrigin, NoPreferredOrigin._NP_RepositoryId, "NoPreferredOrigin")
_0_Fissures.IfEvent._tc_NoPreferredOrigin = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._d_NoPreferredOrigin)
omniORB.registerType(NoPreferredOrigin._NP_RepositoryId, _0_Fissures.IfEvent._d_NoPreferredOrigin, _0_Fissures.IfEvent._tc_NoPreferredOrigin)
del NoPreferredOrigin

# exception DuplicatePick
_0_Fissures.IfEvent.DuplicatePick = omniORB.newEmptyClass()
class DuplicatePick (CORBA.UserException):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/DuplicatePick:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_Fissures.IfEvent.DuplicatePick = DuplicatePick
_0_Fissures.IfEvent._d_DuplicatePick  = (omniORB.tcInternal.tv_except, DuplicatePick, DuplicatePick._NP_RepositoryId, "DuplicatePick")
_0_Fissures.IfEvent._tc_DuplicatePick = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._d_DuplicatePick)
omniORB.registerType(DuplicatePick._NP_RepositoryId, _0_Fissures.IfEvent._d_DuplicatePick, _0_Fissures.IfEvent._tc_DuplicatePick)
del DuplicatePick

# exception NotFound
_0_Fissures.IfEvent.NotFound = omniORB.newEmptyClass()
class NotFound (CORBA.UserException):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfEvent/NotFound:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_Fissures.IfEvent.NotFound = NotFound
_0_Fissures.IfEvent._d_NotFound  = (omniORB.tcInternal.tv_except, NotFound, NotFound._NP_RepositoryId, "NotFound")
_0_Fissures.IfEvent._tc_NotFound = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._d_NotFound)
omniORB.registerType(NotFound._NP_RepositoryId, _0_Fissures.IfEvent._d_NotFound, _0_Fissures.IfEvent._tc_NotFound)
del NotFound

# interface EventSeqIter
_0_Fissures.IfEvent._d_EventSeqIter = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfEvent/EventSeqIter:1.0", "EventSeqIter")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventSeqIter:1.0"] = _0_Fissures.IfEvent._d_EventSeqIter
_0_Fissures.IfEvent.EventSeqIter = omniORB.newEmptyClass()
class EventSeqIter :
    _NP_RepositoryId = _0_Fissures.IfEvent._d_EventSeqIter[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfEvent.EventSeqIter = EventSeqIter
_0_Fissures.IfEvent._tc_EventSeqIter = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._d_EventSeqIter)
omniORB.registerType(EventSeqIter._NP_RepositoryId, _0_Fissures.IfEvent._d_EventSeqIter, _0_Fissures.IfEvent._tc_EventSeqIter)

# EventSeqIter operations and attributes
EventSeqIter._d_how_many_remain = ((), (omniORB.tcInternal.tv_long, ), None)
EventSeqIter._d_next_n = ((omniORB.tcInternal.tv_long, ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventAccessSeq:1.0"]), None)
EventSeqIter._d_destroy = ((), (), None)

# EventSeqIter object reference
class _objref_EventSeqIter (CORBA.Object):
    _NP_RepositoryId = EventSeqIter._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def how_many_remain(self, *args):
        return _omnipy.invoke(self, "how_many_remain", _0_Fissures.IfEvent.EventSeqIter._d_how_many_remain, args)

    def next_n(self, *args):
        return _omnipy.invoke(self, "next_n", _0_Fissures.IfEvent.EventSeqIter._d_next_n, args)

    def destroy(self, *args):
        return _omnipy.invoke(self, "destroy", _0_Fissures.IfEvent.EventSeqIter._d_destroy, args)

    __methods__ = ["how_many_remain", "next_n", "destroy"] + CORBA.Object.__methods__

omniORB.registerObjref(EventSeqIter._NP_RepositoryId, _objref_EventSeqIter)
_0_Fissures.IfEvent._objref_EventSeqIter = _objref_EventSeqIter
del EventSeqIter, _objref_EventSeqIter

# EventSeqIter skeleton
__name__ = "Fissures__POA.IfEvent"
class EventSeqIter (PortableServer.Servant):
    _NP_RepositoryId = _0_Fissures.IfEvent.EventSeqIter._NP_RepositoryId


    _omni_op_d = {"how_many_remain": _0_Fissures.IfEvent.EventSeqIter._d_how_many_remain, "next_n": _0_Fissures.IfEvent.EventSeqIter._d_next_n, "destroy": _0_Fissures.IfEvent.EventSeqIter._d_destroy}

EventSeqIter._omni_skeleton = EventSeqIter
_0_Fissures__POA.IfEvent.EventSeqIter = EventSeqIter
omniORB.registerSkeleton(EventSeqIter._NP_RepositoryId, EventSeqIter)
del EventSeqIter
__name__ = "Fissures.IfEvent"

# interface EventDC
_0_Fissures.IfEvent._d_EventDC = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfEvent/EventDC:1.0", "EventDC")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventDC:1.0"] = _0_Fissures.IfEvent._d_EventDC
_0_Fissures.IfEvent.EventDC = omniORB.newEmptyClass()
class EventDC :
    _NP_RepositoryId = _0_Fissures.IfEvent._d_EventDC[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfEvent.EventDC = EventDC
_0_Fissures.IfEvent._tc_EventDC = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._d_EventDC)
omniORB.registerType(EventDC._NP_RepositoryId, _0_Fissures.IfEvent._d_EventDC, _0_Fissures.IfEvent._tc_EventDC)

# EventDC operations and attributes
EventDC._d__get_a_finder = ((),(omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventFinder:1.0"],),None)
EventDC._d__get_a_channel_finder = ((),(omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventChannelFinder:1.0"],),None)

# EventDC object reference
class _objref_EventDC (CORBA.Object):
    _NP_RepositoryId = EventDC._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def _get_a_finder(self, *args):
        return _omnipy.invoke(self, "_get_a_finder", _0_Fissures.IfEvent.EventDC._d__get_a_finder, args)

    def _get_a_channel_finder(self, *args):
        return _omnipy.invoke(self, "_get_a_channel_finder", _0_Fissures.IfEvent.EventDC._d__get_a_channel_finder, args)

    __methods__ = ["_get_a_finder", "_get_a_channel_finder"] + CORBA.Object.__methods__

omniORB.registerObjref(EventDC._NP_RepositoryId, _objref_EventDC)
_0_Fissures.IfEvent._objref_EventDC = _objref_EventDC
del EventDC, _objref_EventDC

# EventDC skeleton
__name__ = "Fissures__POA.IfEvent"
class EventDC (PortableServer.Servant):
    _NP_RepositoryId = _0_Fissures.IfEvent.EventDC._NP_RepositoryId


    _omni_op_d = {"_get_a_finder": _0_Fissures.IfEvent.EventDC._d__get_a_finder, "_get_a_channel_finder": _0_Fissures.IfEvent.EventDC._d__get_a_channel_finder}

EventDC._omni_skeleton = EventDC
_0_Fissures__POA.IfEvent.EventDC = EventDC
omniORB.registerSkeleton(EventDC._NP_RepositoryId, EventDC)
del EventDC
__name__ = "Fissures.IfEvent"

# interface EventMgr
_0_Fissures.IfEvent._d_EventMgr = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfEvent/EventMgr:1.0", "EventMgr")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventMgr:1.0"] = _0_Fissures.IfEvent._d_EventMgr
_0_Fissures.IfEvent.EventMgr = omniORB.newEmptyClass()
class EventMgr (_0_Fissures.IfEvent.EventDC):
    _NP_RepositoryId = _0_Fissures.IfEvent._d_EventMgr[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfEvent.EventMgr = EventMgr
_0_Fissures.IfEvent._tc_EventMgr = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._d_EventMgr)
omniORB.registerType(EventMgr._NP_RepositoryId, _0_Fissures.IfEvent._d_EventMgr, _0_Fissures.IfEvent._tc_EventMgr)

# EventMgr operations and attributes
EventMgr._d__get_a_factory = ((),(omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventFactory:1.0"],),None)

# EventMgr object reference
class _objref_EventMgr (_0_Fissures.IfEvent._objref_EventDC):
    _NP_RepositoryId = EventMgr._NP_RepositoryId

    def __init__(self):
        _0_Fissures.IfEvent._objref_EventDC.__init__(self)

    def _get_a_factory(self, *args):
        return _omnipy.invoke(self, "_get_a_factory", _0_Fissures.IfEvent.EventMgr._d__get_a_factory, args)

    __methods__ = ["_get_a_factory"] + _0_Fissures.IfEvent._objref_EventDC.__methods__

omniORB.registerObjref(EventMgr._NP_RepositoryId, _objref_EventMgr)
_0_Fissures.IfEvent._objref_EventMgr = _objref_EventMgr
del EventMgr, _objref_EventMgr

# EventMgr skeleton
__name__ = "Fissures__POA.IfEvent"
class EventMgr (_0_Fissures__POA.IfEvent.EventDC):
    _NP_RepositoryId = _0_Fissures.IfEvent.EventMgr._NP_RepositoryId


    _omni_op_d = {"_get_a_factory": _0_Fissures.IfEvent.EventMgr._d__get_a_factory}
    _omni_op_d.update(_0_Fissures__POA.IfEvent.EventDC._omni_op_d)

EventMgr._omni_skeleton = EventMgr
_0_Fissures__POA.IfEvent.EventMgr = EventMgr
omniORB.registerSkeleton(EventMgr._NP_RepositoryId, EventMgr)
del EventMgr
__name__ = "Fissures.IfEvent"

# interface EventFinder
_0_Fissures.IfEvent._d_EventFinder = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfEvent/EventFinder:1.0", "EventFinder")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventFinder:1.0"] = _0_Fissures.IfEvent._d_EventFinder
_0_Fissures.IfEvent.EventFinder = omniORB.newEmptyClass()
class EventFinder (_0_Fissures.IfEvent.EventMgr):
    _NP_RepositoryId = _0_Fissures.IfEvent._d_EventFinder[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfEvent.EventFinder = EventFinder
_0_Fissures.IfEvent._tc_EventFinder = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._d_EventFinder)
omniORB.registerType(EventFinder._NP_RepositoryId, _0_Fissures.IfEvent._d_EventFinder, _0_Fissures.IfEvent._tc_EventFinder)

# EventFinder operations and attributes
EventFinder._d_query_events = ((omniORB.typeMapping["IDL:iris.edu/Fissures/Area:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/Length:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/Length:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/TimeRange:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/MagTypeSeq:1.0"], omniORB.tcInternal.tv_float, omniORB.tcInternal.tv_float, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/CatalogSeq:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/ContributorSeq:1.0"], omniORB.tcInternal.tv_long), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventAccessSeq:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventSeqIter:1.0"]), None, None, 1)
EventFinder._d_get_by_name = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventAccessSeq:1.0"], ), None)
EventFinder._d_known_catalogs = ((), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/CatalogSeq:1.0"], ), None)
EventFinder._d_known_contributors = ((), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/ContributorSeq:1.0"], ), None)
EventFinder._d_catalogs_from = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Contributor:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/CatalogSeq:1.0"], ), None)

# EventFinder object reference
class _objref_EventFinder (_0_Fissures.IfEvent._objref_EventMgr):
    _NP_RepositoryId = EventFinder._NP_RepositoryId

    def __init__(self):
        _0_Fissures.IfEvent._objref_EventMgr.__init__(self)

    def query_events(self, *args):
        return _omnipy.invoke(self, "query_events", _0_Fissures.IfEvent.EventFinder._d_query_events, args)

    def get_by_name(self, *args):
        return _omnipy.invoke(self, "get_by_name", _0_Fissures.IfEvent.EventFinder._d_get_by_name, args)

    def known_catalogs(self, *args):
        return _omnipy.invoke(self, "known_catalogs", _0_Fissures.IfEvent.EventFinder._d_known_catalogs, args)

    def known_contributors(self, *args):
        return _omnipy.invoke(self, "known_contributors", _0_Fissures.IfEvent.EventFinder._d_known_contributors, args)

    def catalogs_from(self, *args):
        return _omnipy.invoke(self, "catalogs_from", _0_Fissures.IfEvent.EventFinder._d_catalogs_from, args)

    __methods__ = ["query_events", "get_by_name", "known_catalogs", "known_contributors", "catalogs_from"] + _0_Fissures.IfEvent._objref_EventMgr.__methods__

omniORB.registerObjref(EventFinder._NP_RepositoryId, _objref_EventFinder)
_0_Fissures.IfEvent._objref_EventFinder = _objref_EventFinder
del EventFinder, _objref_EventFinder

# EventFinder skeleton
__name__ = "Fissures__POA.IfEvent"
class EventFinder (_0_Fissures__POA.IfEvent.EventMgr):
    _NP_RepositoryId = _0_Fissures.IfEvent.EventFinder._NP_RepositoryId


    _omni_op_d = {"query_events": _0_Fissures.IfEvent.EventFinder._d_query_events, "get_by_name": _0_Fissures.IfEvent.EventFinder._d_get_by_name, "known_catalogs": _0_Fissures.IfEvent.EventFinder._d_known_catalogs, "known_contributors": _0_Fissures.IfEvent.EventFinder._d_known_contributors, "catalogs_from": _0_Fissures.IfEvent.EventFinder._d_catalogs_from}
    _omni_op_d.update(_0_Fissures__POA.IfEvent.EventMgr._omni_op_d)

EventFinder._omni_skeleton = EventFinder
_0_Fissures__POA.IfEvent.EventFinder = EventFinder
omniORB.registerSkeleton(EventFinder._NP_RepositoryId, EventFinder)
del EventFinder
__name__ = "Fissures.IfEvent"

# interface EventFactory
_0_Fissures.IfEvent._d_EventFactory = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfEvent/EventFactory:1.0", "EventFactory")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventFactory:1.0"] = _0_Fissures.IfEvent._d_EventFactory
_0_Fissures.IfEvent.EventFactory = omniORB.newEmptyClass()
class EventFactory (_0_Fissures.IfEvent.EventMgr):
    _NP_RepositoryId = _0_Fissures.IfEvent._d_EventFactory[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfEvent.EventFactory = EventFactory
_0_Fissures.IfEvent._tc_EventFactory = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._d_EventFactory)
omniORB.registerType(EventFactory._NP_RepositoryId, _0_Fissures.IfEvent._d_EventFactory, _0_Fissures.IfEvent._tc_EventFactory)

# EventFactory operations and attributes
EventFactory._d_create = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventAttr:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Event:1.0"], ), None, None, 1)

# EventFactory object reference
class _objref_EventFactory (_0_Fissures.IfEvent._objref_EventMgr):
    _NP_RepositoryId = EventFactory._NP_RepositoryId

    def __init__(self):
        _0_Fissures.IfEvent._objref_EventMgr.__init__(self)

    def create(self, *args):
        return _omnipy.invoke(self, "create", _0_Fissures.IfEvent.EventFactory._d_create, args)

    __methods__ = ["create"] + _0_Fissures.IfEvent._objref_EventMgr.__methods__

omniORB.registerObjref(EventFactory._NP_RepositoryId, _objref_EventFactory)
_0_Fissures.IfEvent._objref_EventFactory = _objref_EventFactory
del EventFactory, _objref_EventFactory

# EventFactory skeleton
__name__ = "Fissures__POA.IfEvent"
class EventFactory (_0_Fissures__POA.IfEvent.EventMgr):
    _NP_RepositoryId = _0_Fissures.IfEvent.EventFactory._NP_RepositoryId


    _omni_op_d = {"create": _0_Fissures.IfEvent.EventFactory._d_create}
    _omni_op_d.update(_0_Fissures__POA.IfEvent.EventMgr._omni_op_d)

EventFactory._omni_skeleton = EventFactory
_0_Fissures__POA.IfEvent.EventFactory = EventFactory
omniORB.registerSkeleton(EventFactory._NP_RepositoryId, EventFactory)
del EventFactory
__name__ = "Fissures.IfEvent"

# interface EventAccess
_0_Fissures.IfEvent._d_EventAccess = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfEvent/EventAccess:1.0", "EventAccess")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventAccess:1.0"] = _0_Fissures.IfEvent._d_EventAccess
_0_Fissures.IfEvent.EventAccess = omniORB.newEmptyClass()
class EventAccess (_0_Fissures.AuditSystemAccess, _0_Fissures.IfEvent.EventMgr):
    _NP_RepositoryId = _0_Fissures.IfEvent._d_EventAccess[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfEvent.EventAccess = EventAccess
_0_Fissures.IfEvent._tc_EventAccess = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._d_EventAccess)
omniORB.registerType(EventAccess._NP_RepositoryId, _0_Fissures.IfEvent._d_EventAccess, _0_Fissures.IfEvent._tc_EventAccess)

# EventAccess operations and attributes
EventAccess._d__get_a_writeable = ((),(omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Event:1.0"],),None)
EventAccess._d__get_parm_svc = ((),(omniORB.typeMapping["IDL:iris.edu/Fissures/IfParameterMgr/ParameterComponent:1.0"],),None)
EventAccess._d_get_attributes = ((), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventAttr:1.0"], ), None, None, 1)
EventAccess._d_get_origins = ((), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/OriginSeq:1.0"], ), None, None, 1)
EventAccess._d_get_origin = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/OriginId:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Origin:1.0"], ), {_0_Fissures.IfEvent.OriginNotFound._NP_RepositoryId: _0_Fissures.IfEvent._d_OriginNotFound}, None, 1)
EventAccess._d_get_preferred_origin = ((), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Origin:1.0"], ), {_0_Fissures.IfEvent.NoPreferredOrigin._NP_RepositoryId: _0_Fissures.IfEvent._d_NoPreferredOrigin}, None, 1)
EventAccess._d_get_locators = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/OriginId:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/LocatorSeq:1.0"], ), {_0_Fissures.IfEvent.OriginNotFound._NP_RepositoryId: _0_Fissures.IfEvent._d_OriginNotFound, _0_Fissures.NotImplemented._NP_RepositoryId: _0_Fissures._d_NotImplemented}, None, 1)
EventAccess._d_get_audit_trail_for_origin = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/OriginId:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/AuditTrail:1.0"], ), {_0_Fissures.IfEvent.OriginNotFound._NP_RepositoryId: _0_Fissures.IfEvent._d_OriginNotFound, _0_Fissures.NotImplemented._NP_RepositoryId: _0_Fissures._d_NotImplemented})

# EventAccess object reference
class _objref_EventAccess (_0_Fissures._objref_AuditSystemAccess, _0_Fissures.IfEvent._objref_EventMgr):
    _NP_RepositoryId = EventAccess._NP_RepositoryId

    def __init__(self):
        _0_Fissures._objref_AuditSystemAccess.__init__(self)
        _0_Fissures.IfEvent._objref_EventMgr.__init__(self)

    def _get_a_writeable(self, *args):
        return _omnipy.invoke(self, "_get_a_writeable", _0_Fissures.IfEvent.EventAccess._d__get_a_writeable, args)

    def _get_parm_svc(self, *args):
        return _omnipy.invoke(self, "_get_parm_svc", _0_Fissures.IfEvent.EventAccess._d__get_parm_svc, args)

    def get_attributes(self, *args):
        return _omnipy.invoke(self, "get_attributes", _0_Fissures.IfEvent.EventAccess._d_get_attributes, args)

    def get_origins(self, *args):
        return _omnipy.invoke(self, "get_origins", _0_Fissures.IfEvent.EventAccess._d_get_origins, args)

    def get_origin(self, *args):
        return _omnipy.invoke(self, "get_origin", _0_Fissures.IfEvent.EventAccess._d_get_origin, args)

    def get_preferred_origin(self, *args):
        return _omnipy.invoke(self, "get_preferred_origin", _0_Fissures.IfEvent.EventAccess._d_get_preferred_origin, args)

    def get_locators(self, *args):
        return _omnipy.invoke(self, "get_locators", _0_Fissures.IfEvent.EventAccess._d_get_locators, args)

    def get_audit_trail_for_origin(self, *args):
        return _omnipy.invoke(self, "get_audit_trail_for_origin", _0_Fissures.IfEvent.EventAccess._d_get_audit_trail_for_origin, args)

    __methods__ = ["_get_a_writeable", "_get_parm_svc", "get_attributes", "get_origins", "get_origin", "get_preferred_origin", "get_locators", "get_audit_trail_for_origin"] + _0_Fissures._objref_AuditSystemAccess.__methods__ + _0_Fissures.IfEvent._objref_EventMgr.__methods__

omniORB.registerObjref(EventAccess._NP_RepositoryId, _objref_EventAccess)
_0_Fissures.IfEvent._objref_EventAccess = _objref_EventAccess
del EventAccess, _objref_EventAccess

# EventAccess skeleton
__name__ = "Fissures__POA.IfEvent"
class EventAccess (_0_Fissures__POA.AuditSystemAccess, _0_Fissures__POA.IfEvent.EventMgr):
    _NP_RepositoryId = _0_Fissures.IfEvent.EventAccess._NP_RepositoryId


    _omni_op_d = {"_get_a_writeable": _0_Fissures.IfEvent.EventAccess._d__get_a_writeable, "_get_parm_svc": _0_Fissures.IfEvent.EventAccess._d__get_parm_svc, "get_attributes": _0_Fissures.IfEvent.EventAccess._d_get_attributes, "get_origins": _0_Fissures.IfEvent.EventAccess._d_get_origins, "get_origin": _0_Fissures.IfEvent.EventAccess._d_get_origin, "get_preferred_origin": _0_Fissures.IfEvent.EventAccess._d_get_preferred_origin, "get_locators": _0_Fissures.IfEvent.EventAccess._d_get_locators, "get_audit_trail_for_origin": _0_Fissures.IfEvent.EventAccess._d_get_audit_trail_for_origin}
    _omni_op_d.update(_0_Fissures__POA.AuditSystemAccess._omni_op_d)
    _omni_op_d.update(_0_Fissures__POA.IfEvent.EventMgr._omni_op_d)

EventAccess._omni_skeleton = EventAccess
_0_Fissures__POA.IfEvent.EventAccess = EventAccess
omniORB.registerSkeleton(EventAccess._NP_RepositoryId, EventAccess)
del EventAccess
__name__ = "Fissures.IfEvent"

# interface Event
_0_Fissures.IfEvent._d_Event = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfEvent/Event:1.0", "Event")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Event:1.0"] = _0_Fissures.IfEvent._d_Event
_0_Fissures.IfEvent.Event = omniORB.newEmptyClass()
class Event (_0_Fissures.IfEvent.EventAccess):
    _NP_RepositoryId = _0_Fissures.IfEvent._d_Event[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfEvent.Event = Event
_0_Fissures.IfEvent._tc_Event = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._d_Event)
omniORB.registerType(Event._NP_RepositoryId, _0_Fissures.IfEvent._d_Event, _0_Fissures.IfEvent._tc_Event)

# Event operations and attributes
Event._d_update_region = ((omniORB.typeMapping["IDL:iris.edu/Fissures/FlinnEngdahlRegion:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (), None, None, 1)
Event._d_destroy = ((), (), None)
Event._d_add_origin = ((omniORB.typeMapping["IDL:iris.edu/Fissures/Time:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/Location:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/MagnitudeSeq:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/LocatorSeq:1.0"], omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Catalog:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Contributor:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/OriginId:1.0"], ), None, None, 1)
Event._d_add_locators = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/OriginId:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/LocatorSeq:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (), {_0_Fissures.IfEvent.OriginNotFound._NP_RepositoryId: _0_Fissures.IfEvent._d_OriginNotFound}, None, 1)
Event._d_add_magnitude = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/OriginId:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/Magnitude:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (), {_0_Fissures.IfEvent.OriginNotFound._NP_RepositoryId: _0_Fissures.IfEvent._d_OriginNotFound})
Event._d_delete_origin = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/OriginId:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (), {_0_Fissures.IfEvent.OriginNotFound._NP_RepositoryId: _0_Fissures.IfEvent._d_OriginNotFound})
Event._d_set_preferred_origin = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/OriginId:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (), {_0_Fissures.IfEvent.OriginNotFound._NP_RepositoryId: _0_Fissures.IfEvent._d_OriginNotFound})

# Event object reference
class _objref_Event (_0_Fissures.IfEvent._objref_EventAccess):
    _NP_RepositoryId = Event._NP_RepositoryId

    def __init__(self):
        _0_Fissures.IfEvent._objref_EventAccess.__init__(self)

    def update_region(self, *args):
        return _omnipy.invoke(self, "update_region", _0_Fissures.IfEvent.Event._d_update_region, args)

    def destroy(self, *args):
        return _omnipy.invoke(self, "destroy", _0_Fissures.IfEvent.Event._d_destroy, args)

    def add_origin(self, *args):
        return _omnipy.invoke(self, "add_origin", _0_Fissures.IfEvent.Event._d_add_origin, args)

    def add_locators(self, *args):
        return _omnipy.invoke(self, "add_locators", _0_Fissures.IfEvent.Event._d_add_locators, args)

    def add_magnitude(self, *args):
        return _omnipy.invoke(self, "add_magnitude", _0_Fissures.IfEvent.Event._d_add_magnitude, args)

    def delete_origin(self, *args):
        return _omnipy.invoke(self, "delete_origin", _0_Fissures.IfEvent.Event._d_delete_origin, args)

    def set_preferred_origin(self, *args):
        return _omnipy.invoke(self, "set_preferred_origin", _0_Fissures.IfEvent.Event._d_set_preferred_origin, args)

    __methods__ = ["update_region", "destroy", "add_origin", "add_locators", "add_magnitude", "delete_origin", "set_preferred_origin"] + _0_Fissures.IfEvent._objref_EventAccess.__methods__

omniORB.registerObjref(Event._NP_RepositoryId, _objref_Event)
_0_Fissures.IfEvent._objref_Event = _objref_Event
del Event, _objref_Event

# Event skeleton
__name__ = "Fissures__POA.IfEvent"
class Event (_0_Fissures__POA.IfEvent.EventAccess):
    _NP_RepositoryId = _0_Fissures.IfEvent.Event._NP_RepositoryId


    _omni_op_d = {"update_region": _0_Fissures.IfEvent.Event._d_update_region, "destroy": _0_Fissures.IfEvent.Event._d_destroy, "add_origin": _0_Fissures.IfEvent.Event._d_add_origin, "add_locators": _0_Fissures.IfEvent.Event._d_add_locators, "add_magnitude": _0_Fissures.IfEvent.Event._d_add_magnitude, "delete_origin": _0_Fissures.IfEvent.Event._d_delete_origin, "set_preferred_origin": _0_Fissures.IfEvent.Event._d_set_preferred_origin}
    _omni_op_d.update(_0_Fissures__POA.IfEvent.EventAccess._omni_op_d)

Event._omni_skeleton = Event
_0_Fissures__POA.IfEvent.Event = Event
omniORB.registerSkeleton(Event._NP_RepositoryId, Event)
del Event
__name__ = "Fissures.IfEvent"

# interface EventChannelFinder
_0_Fissures.IfEvent._d_EventChannelFinder = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfEvent/EventChannelFinder:1.0", "EventChannelFinder")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventChannelFinder:1.0"] = _0_Fissures.IfEvent._d_EventChannelFinder
_0_Fissures.IfEvent.EventChannelFinder = omniORB.newEmptyClass()
class EventChannelFinder :
    _NP_RepositoryId = _0_Fissures.IfEvent._d_EventChannelFinder[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfEvent.EventChannelFinder = EventChannelFinder
_0_Fissures.IfEvent._tc_EventChannelFinder = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._d_EventChannelFinder)
omniORB.registerType(EventChannelFinder._NP_RepositoryId, _0_Fissures.IfEvent._d_EventChannelFinder, _0_Fissures.IfEvent._tc_EventChannelFinder)

# EventChannelFinder operations and attributes
EventChannelFinder._d_list_channels = ((), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventChannelDefinitionSeq:1.0"], ), None, None, 1)
EventChannelFinder._d_retrieve_channel = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventChannelName:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CosEventChannelAdmin/ConsumerAdmin:1.0"], ), {_0_Fissures.IfEvent.NotFound._NP_RepositoryId: _0_Fissures.IfEvent._d_NotFound})

# EventChannelFinder object reference
class _objref_EventChannelFinder (CORBA.Object):
    _NP_RepositoryId = EventChannelFinder._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def list_channels(self, *args):
        return _omnipy.invoke(self, "list_channels", _0_Fissures.IfEvent.EventChannelFinder._d_list_channels, args)

    def retrieve_channel(self, *args):
        return _omnipy.invoke(self, "retrieve_channel", _0_Fissures.IfEvent.EventChannelFinder._d_retrieve_channel, args)

    __methods__ = ["list_channels", "retrieve_channel"] + CORBA.Object.__methods__

omniORB.registerObjref(EventChannelFinder._NP_RepositoryId, _objref_EventChannelFinder)
_0_Fissures.IfEvent._objref_EventChannelFinder = _objref_EventChannelFinder
del EventChannelFinder, _objref_EventChannelFinder

# EventChannelFinder skeleton
__name__ = "Fissures__POA.IfEvent"
class EventChannelFinder (PortableServer.Servant):
    _NP_RepositoryId = _0_Fissures.IfEvent.EventChannelFinder._NP_RepositoryId


    _omni_op_d = {"list_channels": _0_Fissures.IfEvent.EventChannelFinder._d_list_channels, "retrieve_channel": _0_Fissures.IfEvent.EventChannelFinder._d_retrieve_channel}

EventChannelFinder._omni_skeleton = EventChannelFinder
_0_Fissures__POA.IfEvent.EventChannelFinder = EventChannelFinder
omniORB.registerSkeleton(EventChannelFinder._NP_RepositoryId, EventChannelFinder)
del EventChannelFinder
__name__ = "Fissures.IfEvent"

# interface EventChannelAdmin
_0_Fissures.IfEvent._d_EventChannelAdmin = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfEvent/EventChannelAdmin:1.0", "EventChannelAdmin")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventChannelAdmin:1.0"] = _0_Fissures.IfEvent._d_EventChannelAdmin
_0_Fissures.IfEvent.EventChannelAdmin = omniORB.newEmptyClass()
class EventChannelAdmin :
    _NP_RepositoryId = _0_Fissures.IfEvent._d_EventChannelAdmin[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfEvent.EventChannelAdmin = EventChannelAdmin
_0_Fissures.IfEvent._tc_EventChannelAdmin = omniORB.tcInternal.createTypeCode(_0_Fissures.IfEvent._d_EventChannelAdmin)
omniORB.registerType(EventChannelAdmin._NP_RepositoryId, _0_Fissures.IfEvent._d_EventChannelAdmin, _0_Fissures.IfEvent._tc_EventChannelAdmin)

# EventChannelAdmin operations and attributes
EventChannelAdmin._d_create_channel = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventChannelName:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/Area:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/Length:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/Length:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/MagType:1.0"], omniORB.tcInternal.tv_float, omniORB.tcInternal.tv_float), (), None, None, 1)
EventChannelAdmin._d_delete_channel = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventChannelName:1.0"], ), (), {_0_Fissures.IfEvent.NotFound._NP_RepositoryId: _0_Fissures.IfEvent._d_NotFound})

# EventChannelAdmin object reference
class _objref_EventChannelAdmin (CORBA.Object):
    _NP_RepositoryId = EventChannelAdmin._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def create_channel(self, *args):
        return _omnipy.invoke(self, "create_channel", _0_Fissures.IfEvent.EventChannelAdmin._d_create_channel, args)

    def delete_channel(self, *args):
        return _omnipy.invoke(self, "delete_channel", _0_Fissures.IfEvent.EventChannelAdmin._d_delete_channel, args)

    __methods__ = ["create_channel", "delete_channel"] + CORBA.Object.__methods__

omniORB.registerObjref(EventChannelAdmin._NP_RepositoryId, _objref_EventChannelAdmin)
_0_Fissures.IfEvent._objref_EventChannelAdmin = _objref_EventChannelAdmin
del EventChannelAdmin, _objref_EventChannelAdmin

# EventChannelAdmin skeleton
__name__ = "Fissures__POA.IfEvent"
class EventChannelAdmin (PortableServer.Servant):
    _NP_RepositoryId = _0_Fissures.IfEvent.EventChannelAdmin._NP_RepositoryId


    _omni_op_d = {"create_channel": _0_Fissures.IfEvent.EventChannelAdmin._d_create_channel, "delete_channel": _0_Fissures.IfEvent.EventChannelAdmin._d_delete_channel}

EventChannelAdmin._omni_skeleton = EventChannelAdmin
_0_Fissures__POA.IfEvent.EventChannelAdmin = EventChannelAdmin
omniORB.registerSkeleton(EventChannelAdmin._NP_RepositoryId, EventChannelAdmin)
del EventChannelAdmin
__name__ = "Fissures.IfEvent"

#
# End of module "Fissures.IfEvent"
#
__name__ = "Fissures"


#
# End of module "Fissures"
#
__name__ = "IfEvent_idl"

_exported_modules = ( "Fissures", "Fissures.IfEvent")

# The end.
