# Python stubs generated by omniidl from IfFilter.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "Fissures.idl"
import Fissures_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
# #include "IfTimeSeries.idl"
import IfTimeSeries_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfTimeSeries = omniORB.openModule("Fissures.IfTimeSeries")
_0_Fissures__POA.IfTimeSeries = omniORB.openModule("Fissures__POA.IfTimeSeries")
# #include "IfNetwork.idl"
import IfNetwork_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfNetwork = omniORB.openModule("Fissures.IfNetwork")
_0_Fissures__POA.IfNetwork = omniORB.openModule("Fissures__POA.IfNetwork")
# #include "IfParameterMgr.idl"
import IfParameterMgr_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfParameterMgr = omniORB.openModule("Fissures.IfParameterMgr")
_0_Fissures__POA.IfParameterMgr = omniORB.openModule("Fissures__POA.IfParameterMgr")
# #include "IfSeismogramDC.idl"
import IfSeismogramDC_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfSeismogramDC = omniORB.openModule("Fissures.IfSeismogramDC")
_0_Fissures__POA.IfSeismogramDC = omniORB.openModule("Fissures__POA.IfSeismogramDC")
# #include "IfSeismogramMgr.idl"
import IfSeismogramMgr_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfSeismogramMgr = omniORB.openModule("Fissures.IfSeismogramMgr")
_0_Fissures__POA.IfSeismogramMgr = omniORB.openModule("Fissures__POA.IfSeismogramMgr")
# #include "IfService.idl"
import IfService_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfService = omniORB.openModule("Fissures.IfService")
_0_Fissures__POA.IfService = omniORB.openModule("Fissures__POA.IfService")

#
# Start of module "Fissures"
#
__name__ = "Fissures"
_0_Fissures = omniORB.openModule("Fissures", r"IfFilter.idl")
_0_Fissures__POA = omniORB.openModule("Fissures__POA", r"IfFilter.idl")


#
# Start of module "Fissures.IfFilter"
#
__name__ = "Fissures.IfFilter"
_0_Fissures.IfFilter = omniORB.openModule("Fissures.IfFilter", r"IfFilter.idl")
_0_Fissures__POA.IfFilter = omniORB.openModule("Fissures__POA.IfFilter", r"IfFilter.idl")

_0_Fissures.IfFilter.VERSION = "1.0"

# typedef ... ConfigurationId
class ConfigurationId:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfFilter/ConfigurationId:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfFilter.ConfigurationId = ConfigurationId
_0_Fissures.IfFilter._d_ConfigurationId  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfService/ConfigurationId:1.0"]
_0_Fissures.IfFilter._ad_ConfigurationId = (omniORB.tcInternal.tv_alias, ConfigurationId._NP_RepositoryId, "ConfigurationId", omniORB.typeCodeMapping["IDL:iris.edu/Fissures/IfService/ConfigurationId:1.0"]._d)
_0_Fissures.IfFilter._tc_ConfigurationId = omniORB.tcInternal.createTypeCode(_0_Fissures.IfFilter._ad_ConfigurationId)
omniORB.registerType(ConfigurationId._NP_RepositoryId, _0_Fissures.IfFilter._ad_ConfigurationId, _0_Fissures.IfFilter._tc_ConfigurationId)
del ConfigurationId

# enum Cropping
_0_Fissures.IfFilter.HIGH_PASS = omniORB.EnumItem("HIGH_PASS", 0)
_0_Fissures.IfFilter.LOW_PASS = omniORB.EnumItem("LOW_PASS", 1)
_0_Fissures.IfFilter.BAND_PASS = omniORB.EnumItem("BAND_PASS", 2)
_0_Fissures.IfFilter.BAND_STOP = omniORB.EnumItem("BAND_STOP", 3)
_0_Fissures.IfFilter.Cropping = omniORB.Enum("IDL:iris.edu/Fissures/IfFilter/Cropping:1.0", (_0_Fissures.IfFilter.HIGH_PASS, _0_Fissures.IfFilter.LOW_PASS, _0_Fissures.IfFilter.BAND_PASS, _0_Fissures.IfFilter.BAND_STOP,))

_0_Fissures.IfFilter._d_Cropping  = (omniORB.tcInternal.tv_enum, _0_Fissures.IfFilter.Cropping._NP_RepositoryId, "Cropping", _0_Fissures.IfFilter.Cropping._items)
_0_Fissures.IfFilter._tc_Cropping = omniORB.tcInternal.createTypeCode(_0_Fissures.IfFilter._d_Cropping)
omniORB.registerType(_0_Fissures.IfFilter.Cropping._NP_RepositoryId, _0_Fissures.IfFilter._d_Cropping, _0_Fissures.IfFilter._tc_Cropping)

# typedef ... CroppingSeq
class CroppingSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfFilter/CroppingSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfFilter.CroppingSeq = CroppingSeq
_0_Fissures.IfFilter._d_CroppingSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfFilter/Cropping:1.0"], 0)
_0_Fissures.IfFilter._ad_CroppingSeq = (omniORB.tcInternal.tv_alias, CroppingSeq._NP_RepositoryId, "CroppingSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfFilter/Cropping:1.0"], 0))
_0_Fissures.IfFilter._tc_CroppingSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfFilter._ad_CroppingSeq)
omniORB.registerType(CroppingSeq._NP_RepositoryId, _0_Fissures.IfFilter._ad_CroppingSeq, _0_Fissures.IfFilter._tc_CroppingSeq)
del CroppingSeq

# typedef ... Algorithm
class Algorithm:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfFilter/Algorithm:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfFilter.Algorithm = Algorithm
_0_Fissures.IfFilter._d_Algorithm  = (omniORB.tcInternal.tv_string,0)
_0_Fissures.IfFilter._ad_Algorithm = (omniORB.tcInternal.tv_alias, Algorithm._NP_RepositoryId, "Algorithm", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfFilter._tc_Algorithm = omniORB.tcInternal.createTypeCode(_0_Fissures.IfFilter._ad_Algorithm)
omniORB.registerType(Algorithm._NP_RepositoryId, _0_Fissures.IfFilter._ad_Algorithm, _0_Fissures.IfFilter._tc_Algorithm)
del Algorithm

# typedef ... AlgorithmSeq
class AlgorithmSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfFilter/AlgorithmSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfFilter.AlgorithmSeq = AlgorithmSeq
_0_Fissures.IfFilter._d_AlgorithmSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfFilter/Algorithm:1.0"], 0)
_0_Fissures.IfFilter._ad_AlgorithmSeq = (omniORB.tcInternal.tv_alias, AlgorithmSeq._NP_RepositoryId, "AlgorithmSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfFilter/Algorithm:1.0"], 0))
_0_Fissures.IfFilter._tc_AlgorithmSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfFilter._ad_AlgorithmSeq)
omniORB.registerType(AlgorithmSeq._NP_RepositoryId, _0_Fissures.IfFilter._ad_AlgorithmSeq, _0_Fissures.IfFilter._tc_AlgorithmSeq)
del AlgorithmSeq

# struct FilterInfo
_0_Fissures.IfFilter.FilterInfo = omniORB.newEmptyClass()
class FilterInfo (omniORB.StructBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfFilter/FilterInfo:1.0"

    def __init__(self, supported_algorithms, supported_croppings, supports_two_way):
        self.supported_algorithms = supported_algorithms
        self.supported_croppings = supported_croppings
        self.supports_two_way = supports_two_way

_0_Fissures.IfFilter.FilterInfo = FilterInfo
_0_Fissures.IfFilter._d_FilterInfo  = (omniORB.tcInternal.tv_struct, FilterInfo, FilterInfo._NP_RepositoryId, "FilterInfo", "supported_algorithms", omniORB.typeMapping["IDL:iris.edu/Fissures/IfFilter/AlgorithmSeq:1.0"], "supported_croppings", omniORB.typeMapping["IDL:iris.edu/Fissures/IfFilter/CroppingSeq:1.0"], "supports_two_way", omniORB.tcInternal.tv_boolean)
_0_Fissures.IfFilter._tc_FilterInfo = omniORB.tcInternal.createTypeCode(_0_Fissures.IfFilter._d_FilterInfo)
omniORB.registerType(FilterInfo._NP_RepositoryId, _0_Fissures.IfFilter._d_FilterInfo, _0_Fissures.IfFilter._tc_FilterInfo)
del FilterInfo

# typedef ... FloatSeq
class FloatSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfFilter/FloatSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfFilter.FloatSeq = FloatSeq
_0_Fissures.IfFilter._d_FloatSeq  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_float, 0)
_0_Fissures.IfFilter._ad_FloatSeq = (omniORB.tcInternal.tv_alias, FloatSeq._NP_RepositoryId, "FloatSeq", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_float, 0))
_0_Fissures.IfFilter._tc_FloatSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfFilter._ad_FloatSeq)
omniORB.registerType(FloatSeq._NP_RepositoryId, _0_Fissures.IfFilter._ad_FloatSeq, _0_Fissures.IfFilter._tc_FloatSeq)
del FloatSeq

# typedef ... ShortSeq
class ShortSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfFilter/ShortSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfFilter.ShortSeq = ShortSeq
_0_Fissures.IfFilter._d_ShortSeq  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_short, 0)
_0_Fissures.IfFilter._ad_ShortSeq = (omniORB.tcInternal.tv_alias, ShortSeq._NP_RepositoryId, "ShortSeq", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_short, 0))
_0_Fissures.IfFilter._tc_ShortSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfFilter._ad_ShortSeq)
omniORB.registerType(ShortSeq._NP_RepositoryId, _0_Fissures.IfFilter._ad_ShortSeq, _0_Fissures.IfFilter._tc_ShortSeq)
del ShortSeq

# struct FilterStyle
_0_Fissures.IfFilter.FilterStyle = omniORB.newEmptyClass()
class FilterStyle (omniORB.StructBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfFilter/FilterStyle:1.0"

    def __init__(self, selection, formula, two_way, corner_freqs, nPoles):
        self.selection = selection
        self.formula = formula
        self.two_way = two_way
        self.corner_freqs = corner_freqs
        self.nPoles = nPoles

_0_Fissures.IfFilter.FilterStyle = FilterStyle
_0_Fissures.IfFilter._d_FilterStyle  = (omniORB.tcInternal.tv_struct, FilterStyle, FilterStyle._NP_RepositoryId, "FilterStyle", "selection", omniORB.typeMapping["IDL:iris.edu/Fissures/IfFilter/Cropping:1.0"], "formula", omniORB.typeMapping["IDL:iris.edu/Fissures/IfFilter/Algorithm:1.0"], "two_way", omniORB.tcInternal.tv_boolean, "corner_freqs", omniORB.typeMapping["IDL:iris.edu/Fissures/IfFilter/FloatSeq:1.0"], "nPoles", omniORB.typeMapping["IDL:iris.edu/Fissures/IfFilter/ShortSeq:1.0"])
_0_Fissures.IfFilter._tc_FilterStyle = omniORB.tcInternal.createTypeCode(_0_Fissures.IfFilter._d_FilterStyle)
omniORB.registerType(FilterStyle._NP_RepositoryId, _0_Fissures.IfFilter._d_FilterStyle, _0_Fissures.IfFilter._tc_FilterStyle)
del FilterStyle

# struct FilterError
_0_Fissures.IfFilter.FilterError = omniORB.newEmptyClass()
class FilterError (omniORB.StructBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfFilter/FilterError:1.0"

    def __init__(self, index, error_msg):
        self.index = index
        self.error_msg = error_msg

_0_Fissures.IfFilter.FilterError = FilterError
_0_Fissures.IfFilter._d_FilterError  = (omniORB.tcInternal.tv_struct, FilterError, FilterError._NP_RepositoryId, "FilterError", "index", omniORB.tcInternal.tv_long, "error_msg", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfFilter._tc_FilterError = omniORB.tcInternal.createTypeCode(_0_Fissures.IfFilter._d_FilterError)
omniORB.registerType(FilterError._NP_RepositoryId, _0_Fissures.IfFilter._d_FilterError, _0_Fissures.IfFilter._tc_FilterError)
del FilterError

# typedef ... FilterErrorSeq
class FilterErrorSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfFilter/FilterErrorSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfFilter.FilterErrorSeq = FilterErrorSeq
_0_Fissures.IfFilter._d_FilterErrorSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfFilter/FilterError:1.0"], 0)
_0_Fissures.IfFilter._ad_FilterErrorSeq = (omniORB.tcInternal.tv_alias, FilterErrorSeq._NP_RepositoryId, "FilterErrorSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfFilter/FilterError:1.0"], 0))
_0_Fissures.IfFilter._tc_FilterErrorSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfFilter._ad_FilterErrorSeq)
omniORB.registerType(FilterErrorSeq._NP_RepositoryId, _0_Fissures.IfFilter._ad_FilterErrorSeq, _0_Fissures.IfFilter._tc_FilterErrorSeq)
del FilterErrorSeq

# interface Filter
_0_Fissures.IfFilter._d_Filter = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfFilter/Filter:1.0", "Filter")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfFilter/Filter:1.0"] = _0_Fissures.IfFilter._d_Filter
_0_Fissures.IfFilter.Filter = omniORB.newEmptyClass()
class Filter (_0_Fissures.IfService.Service):
    _NP_RepositoryId = _0_Fissures.IfFilter._d_Filter[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfFilter.Filter = Filter
_0_Fissures.IfFilter._tc_Filter = omniORB.tcInternal.createTypeCode(_0_Fissures.IfFilter._d_Filter)
omniORB.registerType(Filter._NP_RepositoryId, _0_Fissures.IfFilter._d_Filter, _0_Fissures.IfFilter._tc_Filter)

# Filter operations and attributes
Filter._d_possible_options = ((), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfFilter/FilterInfo:1.0"], ), None)
Filter._d_filter_seismograms = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfFilter/ConfigurationId:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfFilter/FilterStyle:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramSeq:1.0"]), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:iris.edu/Fissures/IfFilter/FilterErrorSeq:1.0"]), {_0_Fissures.IfService.UnknownConfiguration._NP_RepositoryId: _0_Fissures.IfService._d_UnknownConfiguration})

# Filter object reference
class _objref_Filter (_0_Fissures.IfService._objref_Service):
    _NP_RepositoryId = Filter._NP_RepositoryId

    def __init__(self):
        _0_Fissures.IfService._objref_Service.__init__(self)

    def possible_options(self, *args):
        return _omnipy.invoke(self, "possible_options", _0_Fissures.IfFilter.Filter._d_possible_options, args)

    def filter_seismograms(self, *args):
        return _omnipy.invoke(self, "filter_seismograms", _0_Fissures.IfFilter.Filter._d_filter_seismograms, args)

    __methods__ = ["possible_options", "filter_seismograms"] + _0_Fissures.IfService._objref_Service.__methods__

omniORB.registerObjref(Filter._NP_RepositoryId, _objref_Filter)
_0_Fissures.IfFilter._objref_Filter = _objref_Filter
del Filter, _objref_Filter

# Filter skeleton
__name__ = "Fissures__POA.IfFilter"
class Filter (_0_Fissures__POA.IfService.Service):
    _NP_RepositoryId = _0_Fissures.IfFilter.Filter._NP_RepositoryId


    _omni_op_d = {"possible_options": _0_Fissures.IfFilter.Filter._d_possible_options, "filter_seismograms": _0_Fissures.IfFilter.Filter._d_filter_seismograms}
    _omni_op_d.update(_0_Fissures__POA.IfService.Service._omni_op_d)

Filter._omni_skeleton = Filter
_0_Fissures__POA.IfFilter.Filter = Filter
omniORB.registerSkeleton(Filter._NP_RepositoryId, Filter)
del Filter
__name__ = "Fissures.IfFilter"

#
# End of module "Fissures.IfFilter"
#
__name__ = "Fissures"


#
# End of module "Fissures"
#
__name__ = "IfFilter_idl"

_exported_modules = ( "Fissures", "Fissures.IfFilter")

# The end.
