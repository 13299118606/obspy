# Python stubs generated by omniidl from idl_old/IfService.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "Fissures"
#
__name__ = "idl.Fissures"
_0_Fissures = omniORB.openModule("idl.Fissures", r"idl_old/IfService.idl")
_0_Fissures__POA = omniORB.openModule("idl.Fissures__POA", r"idl_old/IfService.idl")


#
# Start of module "Fissures.IfService"
#
__name__ = "idl.Fissures.IfService"
_0_Fissures.IfService = omniORB.openModule("idl.Fissures.IfService", r"idl_old/IfService.idl")
_0_Fissures__POA.IfService = omniORB.openModule("idl.Fissures__POA.IfService", r"idl_old/IfService.idl")

_0_Fissures.IfService.VERSION = "1.0"

# struct ServiceOption
_0_Fissures.IfService.ServiceOption = omniORB.newEmptyClass()
class ServiceOption (omniORB.StructBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfService/ServiceOption:1.0"

    def __init__(self, name, description, type, allowed_values):
        self.name = name
        self.description = description
        self.type = type
        self.allowed_values = allowed_values

_0_Fissures.IfService.ServiceOption = ServiceOption
_0_Fissures.IfService._d_ServiceOption  = (omniORB.tcInternal.tv_struct, ServiceOption, ServiceOption._NP_RepositoryId, "ServiceOption", "name", (omniORB.tcInternal.tv_string,0), "description", (omniORB.tcInternal.tv_string,0), "type", (omniORB.tcInternal.tv_string,0), "allowed_values", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_Fissures.IfService._tc_ServiceOption = omniORB.tcInternal.createTypeCode(_0_Fissures.IfService._d_ServiceOption)
omniORB.registerType(ServiceOption._NP_RepositoryId, _0_Fissures.IfService._d_ServiceOption, _0_Fissures.IfService._tc_ServiceOption)
del ServiceOption

# typedef ... ServiceOptionSeq
class ServiceOptionSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfService/ServiceOptionSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfService.ServiceOptionSeq = ServiceOptionSeq
_0_Fissures.IfService._d_ServiceOptionSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfService/ServiceOption:1.0"], 0)
_0_Fissures.IfService._ad_ServiceOptionSeq = (omniORB.tcInternal.tv_alias, ServiceOptionSeq._NP_RepositoryId, "ServiceOptionSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfService/ServiceOption:1.0"], 0))
_0_Fissures.IfService._tc_ServiceOptionSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfService._ad_ServiceOptionSeq)
omniORB.registerType(ServiceOptionSeq._NP_RepositoryId, _0_Fissures.IfService._ad_ServiceOptionSeq, _0_Fissures.IfService._tc_ServiceOptionSeq)
del ServiceOptionSeq

# struct ServiceSetting
_0_Fissures.IfService.ServiceSetting = omniORB.newEmptyClass()
class ServiceSetting (omniORB.StructBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfService/ServiceSetting:1.0"

    def __init__(self, name, value):
        self.name = name
        self.value = value

_0_Fissures.IfService.ServiceSetting = ServiceSetting
_0_Fissures.IfService._d_ServiceSetting  = (omniORB.tcInternal.tv_struct, ServiceSetting, ServiceSetting._NP_RepositoryId, "ServiceSetting", "name", (omniORB.tcInternal.tv_string,0), "value", omniORB.tcInternal.tv_any)
_0_Fissures.IfService._tc_ServiceSetting = omniORB.tcInternal.createTypeCode(_0_Fissures.IfService._d_ServiceSetting)
omniORB.registerType(ServiceSetting._NP_RepositoryId, _0_Fissures.IfService._d_ServiceSetting, _0_Fissures.IfService._tc_ServiceSetting)
del ServiceSetting

# typedef ... ServiceConfiguration
class ServiceConfiguration:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfService/ServiceConfiguration:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfService.ServiceConfiguration = ServiceConfiguration
_0_Fissures.IfService._d_ServiceConfiguration  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfService/ServiceSetting:1.0"], 0)
_0_Fissures.IfService._ad_ServiceConfiguration = (omniORB.tcInternal.tv_alias, ServiceConfiguration._NP_RepositoryId, "ServiceConfiguration", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfService/ServiceSetting:1.0"], 0))
_0_Fissures.IfService._tc_ServiceConfiguration = omniORB.tcInternal.createTypeCode(_0_Fissures.IfService._ad_ServiceConfiguration)
omniORB.registerType(ServiceConfiguration._NP_RepositoryId, _0_Fissures.IfService._ad_ServiceConfiguration, _0_Fissures.IfService._tc_ServiceConfiguration)
del ServiceConfiguration

# typedef ... ConfigurationId
class ConfigurationId:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfService/ConfigurationId:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfService.ConfigurationId = ConfigurationId
_0_Fissures.IfService._d_ConfigurationId  = (omniORB.tcInternal.tv_string,0)
_0_Fissures.IfService._ad_ConfigurationId = (omniORB.tcInternal.tv_alias, ConfigurationId._NP_RepositoryId, "ConfigurationId", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfService._tc_ConfigurationId = omniORB.tcInternal.createTypeCode(_0_Fissures.IfService._ad_ConfigurationId)
omniORB.registerType(ConfigurationId._NP_RepositoryId, _0_Fissures.IfService._ad_ConfigurationId, _0_Fissures.IfService._tc_ConfigurationId)
del ConfigurationId
_0_Fissures.IfService.DEFAULT_CONFIG = "DEFAULT"

# exception UnknownOption
_0_Fissures.IfService.UnknownOption = omniORB.newEmptyClass()
class UnknownOption (CORBA.UserException):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfService/UnknownOption:1.0"

    def __init__(self, option_name):
        CORBA.UserException.__init__(self, option_name)
        self.option_name = option_name

_0_Fissures.IfService.UnknownOption = UnknownOption
_0_Fissures.IfService._d_UnknownOption  = (omniORB.tcInternal.tv_except, UnknownOption, UnknownOption._NP_RepositoryId, "UnknownOption", "option_name", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_Fissures.IfService._tc_UnknownOption = omniORB.tcInternal.createTypeCode(_0_Fissures.IfService._d_UnknownOption)
omniORB.registerType(UnknownOption._NP_RepositoryId, _0_Fissures.IfService._d_UnknownOption, _0_Fissures.IfService._tc_UnknownOption)
del UnknownOption

# exception InvalidValue
_0_Fissures.IfService.InvalidValue = omniORB.newEmptyClass()
class InvalidValue (CORBA.UserException):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfService/InvalidValue:1.0"

    def __init__(self, bad_values):
        CORBA.UserException.__init__(self, bad_values)
        self.bad_values = bad_values

_0_Fissures.IfService.InvalidValue = InvalidValue
_0_Fissures.IfService._d_InvalidValue  = (omniORB.tcInternal.tv_except, InvalidValue, InvalidValue._NP_RepositoryId, "InvalidValue", "bad_values", omniORB.typeMapping["IDL:iris.edu/Fissures/IfService/ServiceConfiguration:1.0"])
_0_Fissures.IfService._tc_InvalidValue = omniORB.tcInternal.createTypeCode(_0_Fissures.IfService._d_InvalidValue)
omniORB.registerType(InvalidValue._NP_RepositoryId, _0_Fissures.IfService._d_InvalidValue, _0_Fissures.IfService._tc_InvalidValue)
del InvalidValue

# exception UnknownConfiguration
_0_Fissures.IfService.UnknownConfiguration = omniORB.newEmptyClass()
class UnknownConfiguration (CORBA.UserException):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfService/UnknownConfiguration:1.0"

    def __init__(self, config_id):
        CORBA.UserException.__init__(self, config_id)
        self.config_id = config_id

_0_Fissures.IfService.UnknownConfiguration = UnknownConfiguration
_0_Fissures.IfService._d_UnknownConfiguration  = (omniORB.tcInternal.tv_except, UnknownConfiguration, UnknownConfiguration._NP_RepositoryId, "UnknownConfiguration", "config_id", omniORB.typeMapping["IDL:iris.edu/Fissures/IfService/ConfigurationId:1.0"])
_0_Fissures.IfService._tc_UnknownConfiguration = omniORB.tcInternal.createTypeCode(_0_Fissures.IfService._d_UnknownConfiguration)
omniORB.registerType(UnknownConfiguration._NP_RepositoryId, _0_Fissures.IfService._d_UnknownConfiguration, _0_Fissures.IfService._tc_UnknownConfiguration)
del UnknownConfiguration

# abstract interface Service
_0_Fissures.IfService._d_Service = (omniORB.tcInternal.tv_abstract_interface, "IDL:iris.edu/Fissures/IfService/Service:1.0", "Service")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfService/Service:1.0"] = _0_Fissures.IfService._d_Service
_0_Fissures.IfService.Service = omniORB.newEmptyClass()
class Service :
    _NP_RepositoryId = _0_Fissures.IfService._d_Service[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfService.Service = Service
_0_Fissures.IfService._tc_Service = omniORB.tcInternal.createTypeCode(_0_Fissures.IfService._d_Service)
omniORB.registerType(Service._NP_RepositoryId, _0_Fissures.IfService._d_Service, _0_Fissures.IfService._tc_Service)

# Service operations and attributes
Service._d_get_configuration_options = ((), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfService/ServiceOptionSeq:1.0"], ), None)
Service._d_get_default_configuration = ((), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfService/ServiceConfiguration:1.0"], ), None)
Service._d_get_configuration = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfService/ConfigurationId:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfService/ServiceConfiguration:1.0"], ), {_0_Fissures.IfService.UnknownConfiguration._NP_RepositoryId: _0_Fissures.IfService._d_UnknownConfiguration})
Service._d_get_setting_for = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfService/ServiceSetting:1.0"], ), {_0_Fissures.IfService.UnknownOption._NP_RepositoryId: _0_Fissures.IfService._d_UnknownOption})
Service._d_set_configuration = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfService/ServiceConfiguration:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfService/ConfigurationId:1.0"], ), {_0_Fissures.IfService.UnknownOption._NP_RepositoryId: _0_Fissures.IfService._d_UnknownOption, _0_Fissures.IfService.InvalidValue._NP_RepositoryId: _0_Fissures.IfService._d_InvalidValue})
Service._d_reset_to_default = ((), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfService/ConfigurationId:1.0"], ), None)

# Service object reference
class _objref_Service (CORBA.Object):
    _NP_RepositoryId = Service._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def get_configuration_options(self, *args):
        return _omnipy.invoke(self, "get_configuration_options", _0_Fissures.IfService.Service._d_get_configuration_options, args)

    def get_default_configuration(self, *args):
        return _omnipy.invoke(self, "get_default_configuration", _0_Fissures.IfService.Service._d_get_default_configuration, args)

    def get_configuration(self, *args):
        return _omnipy.invoke(self, "get_configuration", _0_Fissures.IfService.Service._d_get_configuration, args)

    def get_setting_for(self, *args):
        return _omnipy.invoke(self, "get_setting_for", _0_Fissures.IfService.Service._d_get_setting_for, args)

    def set_configuration(self, *args):
        return _omnipy.invoke(self, "set_configuration", _0_Fissures.IfService.Service._d_set_configuration, args)

    def reset_to_default(self, *args):
        return _omnipy.invoke(self, "reset_to_default", _0_Fissures.IfService.Service._d_reset_to_default, args)

    __methods__ = ["get_configuration_options", "get_default_configuration", "get_configuration", "get_setting_for", "set_configuration", "reset_to_default"] + CORBA.Object.__methods__

omniORB.registerObjref(Service._NP_RepositoryId, _objref_Service)
_0_Fissures.IfService._objref_Service = _objref_Service
del Service, _objref_Service

# Service skeleton
__name__ = "idl.Fissures__POA.IfService"
class Service (PortableServer.Servant):
    _NP_RepositoryId = _0_Fissures.IfService.Service._NP_RepositoryId


    _omni_op_d = {"get_configuration_options": _0_Fissures.IfService.Service._d_get_configuration_options, "get_default_configuration": _0_Fissures.IfService.Service._d_get_default_configuration, "get_configuration": _0_Fissures.IfService.Service._d_get_configuration, "get_setting_for": _0_Fissures.IfService.Service._d_get_setting_for, "set_configuration": _0_Fissures.IfService.Service._d_set_configuration, "reset_to_default": _0_Fissures.IfService.Service._d_reset_to_default}

Service._omni_skeleton = Service
_0_Fissures__POA.IfService.Service = Service
omniORB.registerSkeleton(Service._NP_RepositoryId, Service)
del Service
__name__ = "idl.Fissures.IfService"

#
# End of module "Fissures.IfService"
#
__name__ = "idl.Fissures"


#
# End of module "Fissures"
#
__name__ = "idl.idl.IfService_idl"

_exported_modules = ( "idl.Fissures", "idl.Fissures.IfService")

# The end.
