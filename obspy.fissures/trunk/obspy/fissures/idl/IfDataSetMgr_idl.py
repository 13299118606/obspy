# Python stubs generated by omniidl from IfDataSetMgr.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "Fissures.idl"
import Fissures_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
# #include "IfTimeSeries.idl"
import IfTimeSeries_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfTimeSeries = omniORB.openModule("Fissures.IfTimeSeries")
_0_Fissures__POA.IfTimeSeries = omniORB.openModule("Fissures__POA.IfTimeSeries")
# #include "IfNetwork.idl"
import IfNetwork_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfNetwork = omniORB.openModule("Fissures.IfNetwork")
_0_Fissures__POA.IfNetwork = omniORB.openModule("Fissures__POA.IfNetwork")
# #include "IfParameterMgr.idl"
import IfParameterMgr_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfParameterMgr = omniORB.openModule("Fissures.IfParameterMgr")
_0_Fissures__POA.IfParameterMgr = omniORB.openModule("Fissures__POA.IfParameterMgr")
# #include "IfSeismogramDC.idl"
import IfSeismogramDC_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfSeismogramDC = omniORB.openModule("Fissures.IfSeismogramDC")
_0_Fissures__POA.IfSeismogramDC = omniORB.openModule("Fissures__POA.IfSeismogramDC")
# #include "IfSeismogramMgr.idl"
import IfSeismogramMgr_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfSeismogramMgr = omniORB.openModule("Fissures.IfSeismogramMgr")
_0_Fissures__POA.IfSeismogramMgr = omniORB.openModule("Fissures__POA.IfSeismogramMgr")

#
# Start of module "Fissures"
#
__name__ = "Fissures"
_0_Fissures = omniORB.openModule("Fissures", r"IfDataSetMgr.idl")
_0_Fissures__POA = omniORB.openModule("Fissures__POA", r"IfDataSetMgr.idl")


#
# Start of module "Fissures.IfDataSetMgr"
#
__name__ = "Fissures.IfDataSetMgr"
_0_Fissures.IfDataSetMgr = omniORB.openModule("Fissures.IfDataSetMgr", r"IfDataSetMgr.idl")
_0_Fissures__POA.IfDataSetMgr = omniORB.openModule("Fissures__POA.IfDataSetMgr", r"IfDataSetMgr.idl")

_0_Fissures.IfDataSetMgr.VERSION = "1.0"

# typedef ... ParameterRef
class ParameterRef (_0_Fissures.IfParameterMgr.ParameterRef):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfDataSetMgr/ParameterRef:1.0"

_0_Fissures.IfDataSetMgr.ParameterRef = ParameterRef
_0_Fissures.IfDataSetMgr._d_ParameterRef  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfParameterMgr/ParameterRef:1.0"]
_0_Fissures.IfDataSetMgr._ad_ParameterRef = (omniORB.tcInternal.tv_alias, ParameterRef._NP_RepositoryId, "ParameterRef", omniORB.typeMapping["IDL:iris.edu/Fissures/IfParameterMgr/ParameterRef:1.0"])
_0_Fissures.IfDataSetMgr._tc_ParameterRef = omniORB.tcInternal.createTypeCode(_0_Fissures.IfDataSetMgr._ad_ParameterRef)
omniORB.registerType(ParameterRef._NP_RepositoryId, _0_Fissures.IfDataSetMgr._ad_ParameterRef, _0_Fissures.IfDataSetMgr._tc_ParameterRef)
del ParameterRef

# abstract interface DataSet;
_0_Fissures.IfDataSetMgr._d_DataSet = (omniORB.tcInternal.tv_abstract_interface, "IDL:iris.edu/Fissures/IfDataSetMgr/DataSet:1.0", "DataSet")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSet:1.0"] = _0_Fissures.IfDataSetMgr._d_DataSet

# abstract interface DataSetAccess;
_0_Fissures.IfDataSetMgr._d_DataSetAccess = (omniORB.tcInternal.tv_abstract_interface, "IDL:iris.edu/Fissures/IfDataSetMgr/DataSetAccess:1.0", "DataSetAccess")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetAccess:1.0"] = _0_Fissures.IfDataSetMgr._d_DataSetAccess

# typedef ... DataSetSeq
class DataSetSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfDataSetMgr/DataSetSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfDataSetMgr.DataSetSeq = DataSetSeq
_0_Fissures.IfDataSetMgr._d_DataSetSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSet:1.0"], 0)
_0_Fissures.IfDataSetMgr._ad_DataSetSeq = (omniORB.tcInternal.tv_alias, DataSetSeq._NP_RepositoryId, "DataSetSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSet:1.0"], 0))
_0_Fissures.IfDataSetMgr._tc_DataSetSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfDataSetMgr._ad_DataSetSeq)
omniORB.registerType(DataSetSeq._NP_RepositoryId, _0_Fissures.IfDataSetMgr._ad_DataSetSeq, _0_Fissures.IfDataSetMgr._tc_DataSetSeq)
del DataSetSeq

# typedef ... DataSetAccessSeq
class DataSetAccessSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfDataSetMgr/DataSetAccessSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfDataSetMgr.DataSetAccessSeq = DataSetAccessSeq
_0_Fissures.IfDataSetMgr._d_DataSetAccessSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetAccess:1.0"], 0)
_0_Fissures.IfDataSetMgr._ad_DataSetAccessSeq = (omniORB.tcInternal.tv_alias, DataSetAccessSeq._NP_RepositoryId, "DataSetAccessSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetAccess:1.0"], 0))
_0_Fissures.IfDataSetMgr._tc_DataSetAccessSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfDataSetMgr._ad_DataSetAccessSeq)
omniORB.registerType(DataSetAccessSeq._NP_RepositoryId, _0_Fissures.IfDataSetMgr._ad_DataSetAccessSeq, _0_Fissures.IfDataSetMgr._tc_DataSetAccessSeq)
del DataSetAccessSeq

# interface DataSetFinder;
_0_Fissures.IfDataSetMgr._d_DataSetFinder = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfDataSetMgr/DataSetFinder:1.0", "DataSetFinder")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetFinder:1.0"] = _0_Fissures.IfDataSetMgr._d_DataSetFinder

# interface DataSetFactory;
_0_Fissures.IfDataSetMgr._d_DataSetFactory = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfDataSetMgr/DataSetFactory:1.0", "DataSetFactory")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetFactory:1.0"] = _0_Fissures.IfDataSetMgr._d_DataSetFactory

# interface RemoteDataSet;
_0_Fissures.IfDataSetMgr._d_RemoteDataSet = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfDataSetMgr/RemoteDataSet:1.0", "RemoteDataSet")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/RemoteDataSet:1.0"] = _0_Fissures.IfDataSetMgr._d_RemoteDataSet

# interface RemoteDataSetAccess;
_0_Fissures.IfDataSetMgr._d_RemoteDataSetAccess = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfDataSetMgr/RemoteDataSetAccess:1.0", "RemoteDataSetAccess")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/RemoteDataSetAccess:1.0"] = _0_Fissures.IfDataSetMgr._d_RemoteDataSetAccess
# forward valuetype LocalDataSet
_0_Fissures.IfDataSetMgr._d_LocalDataSet = (omniORB.tcInternal.tv__indirect, ["IDL:iris.edu/Fissures/IfDataSetMgr/LocalDataSet:1.0"])
omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/LocalDataSet:1.0"] = _0_Fissures.IfDataSetMgr._d_LocalDataSet


# typedef ... NodeId
class NodeId:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfDataSetMgr/NodeId:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfDataSetMgr.NodeId = NodeId
_0_Fissures.IfDataSetMgr._d_NodeId  = (omniORB.tcInternal.tv_string,0)
_0_Fissures.IfDataSetMgr._ad_NodeId = (omniORB.tcInternal.tv_alias, NodeId._NP_RepositoryId, "NodeId", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfDataSetMgr._tc_NodeId = omniORB.tcInternal.createTypeCode(_0_Fissures.IfDataSetMgr._ad_NodeId)
omniORB.registerType(NodeId._NP_RepositoryId, _0_Fissures.IfDataSetMgr._ad_NodeId, _0_Fissures.IfDataSetMgr._tc_NodeId)
del NodeId

# struct DataSetAttr
_0_Fissures.IfDataSetMgr.DataSetAttr = omniORB.newEmptyClass()
class DataSetAttr (omniORB.StructBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfDataSetMgr/DataSetAttr:1.0"

    def __init__(self, id, name, owner, parm_ids):
        self.id = id
        self.name = name
        self.owner = owner
        self.parm_ids = parm_ids

_0_Fissures.IfDataSetMgr.DataSetAttr = DataSetAttr
_0_Fissures.IfDataSetMgr._d_DataSetAttr  = (omniORB.tcInternal.tv_struct, DataSetAttr, DataSetAttr._NP_RepositoryId, "DataSetAttr", "id", omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/NodeId:1.0"], "name", (omniORB.tcInternal.tv_string,0), "owner", (omniORB.tcInternal.tv_string,0), "parm_ids", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/ParameterRef:1.0"], 0))
_0_Fissures.IfDataSetMgr._tc_DataSetAttr = omniORB.tcInternal.createTypeCode(_0_Fissures.IfDataSetMgr._d_DataSetAttr)
omniORB.registerType(DataSetAttr._NP_RepositoryId, _0_Fissures.IfDataSetMgr._d_DataSetAttr, _0_Fissures.IfDataSetMgr._tc_DataSetAttr)
del DataSetAttr

# valuetype MotionVectorNode
_0_Fissures.IfDataSetMgr._d_MotionVectorNode = (omniORB.tcInternal.tv__indirect, ["IDL:iris.edu/Fissures/IfDataSetMgr/MotionVectorNode:1.0"])
omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/MotionVectorNode:1.0"] = _0_Fissures.IfDataSetMgr._d_MotionVectorNode
_0_Fissures.IfDataSetMgr.MotionVectorNode = omniORB.newEmptyClass()

class MotionVectorNode (_0_CORBA.ValueBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfDataSetMgr/MotionVectorNode:1.0"

    def __init__(self, *args, **kwargs):
        if args:
            if len(args) != 3:
                raise TypeError("MotionVectorNode() takes 3 arguments "
                                "(%d given)" % len(args))
            self.id = args[0]
            self.seismograms = args[1]
            self.parm_ids = args[2]
        if kwargs:
            self.__dict__.update(kwargs)

_0_Fissures.IfDataSetMgr.MotionVectorNode = MotionVectorNode
_0_Fissures.IfDataSetMgr._d_MotionVectorNode  = (omniORB.tcInternal.tv_value, MotionVectorNode, MotionVectorNode._NP_RepositoryId, "MotionVectorNode", _0_CORBA.VM_NONE, None, _0_CORBA.tcInternal.tv_null, "id", omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/NodeId:1.0"], _0_CORBA.PRIVATE_MEMBER, "seismograms", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramAccess:1.0"], 3), _0_CORBA.PUBLIC_MEMBER, "parm_ids", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/ParameterRef:1.0"], 0), _0_CORBA.PUBLIC_MEMBER)
_0_Fissures.IfDataSetMgr._tc_MotionVectorNode = omniORB.tcInternal.createTypeCode(_0_Fissures.IfDataSetMgr._d_MotionVectorNode)
omniORB.registerType(MotionVectorNode._NP_RepositoryId, _0_Fissures.IfDataSetMgr._d_MotionVectorNode, _0_Fissures.IfDataSetMgr._tc_MotionVectorNode)
del MotionVectorNode


# typedef ... MotionVectorNodeSeq
class MotionVectorNodeSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfDataSetMgr/MotionVectorNodeSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfDataSetMgr.MotionVectorNodeSeq = MotionVectorNodeSeq
_0_Fissures.IfDataSetMgr._d_MotionVectorNodeSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/MotionVectorNode:1.0"], 0)
_0_Fissures.IfDataSetMgr._ad_MotionVectorNodeSeq = (omniORB.tcInternal.tv_alias, MotionVectorNodeSeq._NP_RepositoryId, "MotionVectorNodeSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/MotionVectorNode:1.0"], 0))
_0_Fissures.IfDataSetMgr._tc_MotionVectorNodeSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfDataSetMgr._ad_MotionVectorNodeSeq)
omniORB.registerType(MotionVectorNodeSeq._NP_RepositoryId, _0_Fissures.IfDataSetMgr._ad_MotionVectorNodeSeq, _0_Fissures.IfDataSetMgr._tc_MotionVectorNodeSeq)
del MotionVectorNodeSeq

# valuetype SeismogramNode
_0_Fissures.IfDataSetMgr._d_SeismogramNode = (omniORB.tcInternal.tv__indirect, ["IDL:iris.edu/Fissures/IfDataSetMgr/SeismogramNode:1.0"])
omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/SeismogramNode:1.0"] = _0_Fissures.IfDataSetMgr._d_SeismogramNode
_0_Fissures.IfDataSetMgr.SeismogramNode = omniORB.newEmptyClass()

class SeismogramNode (_0_CORBA.ValueBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfDataSetMgr/SeismogramNode:1.0"

    def __init__(self, *args, **kwargs):
        if args:
            if len(args) != 2:
                raise TypeError("SeismogramNode() takes 2 arguments "
                                "(%d given)" % len(args))
            self.id = args[0]
            self.a_seismogram = args[1]
        if kwargs:
            self.__dict__.update(kwargs)

_0_Fissures.IfDataSetMgr.SeismogramNode = SeismogramNode
_0_Fissures.IfDataSetMgr._d_SeismogramNode  = (omniORB.tcInternal.tv_value, SeismogramNode, SeismogramNode._NP_RepositoryId, "SeismogramNode", _0_CORBA.VM_NONE, None, _0_CORBA.tcInternal.tv_null, "id", omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/NodeId:1.0"], _0_CORBA.PRIVATE_MEMBER, "a_seismogram", omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramAccess:1.0"], _0_CORBA.PUBLIC_MEMBER)
_0_Fissures.IfDataSetMgr._tc_SeismogramNode = omniORB.tcInternal.createTypeCode(_0_Fissures.IfDataSetMgr._d_SeismogramNode)
omniORB.registerType(SeismogramNode._NP_RepositoryId, _0_Fissures.IfDataSetMgr._d_SeismogramNode, _0_Fissures.IfDataSetMgr._tc_SeismogramNode)
del SeismogramNode


# typedef ... SeismogramNodeSeq
class SeismogramNodeSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfDataSetMgr/SeismogramNodeSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfDataSetMgr.SeismogramNodeSeq = SeismogramNodeSeq
_0_Fissures.IfDataSetMgr._d_SeismogramNodeSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/SeismogramNode:1.0"], 0)
_0_Fissures.IfDataSetMgr._ad_SeismogramNodeSeq = (omniORB.tcInternal.tv_alias, SeismogramNodeSeq._NP_RepositoryId, "SeismogramNodeSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/SeismogramNode:1.0"], 0))
_0_Fissures.IfDataSetMgr._tc_SeismogramNodeSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfDataSetMgr._ad_SeismogramNodeSeq)
omniORB.registerType(SeismogramNodeSeq._NP_RepositoryId, _0_Fissures.IfDataSetMgr._ad_SeismogramNodeSeq, _0_Fissures.IfDataSetMgr._tc_SeismogramNodeSeq)
del SeismogramNodeSeq

# exception NotFound
_0_Fissures.IfDataSetMgr.NotFound = omniORB.newEmptyClass()
class NotFound (CORBA.UserException):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfDataSetMgr/NotFound:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_Fissures.IfDataSetMgr.NotFound = NotFound
_0_Fissures.IfDataSetMgr._d_NotFound  = (omniORB.tcInternal.tv_except, NotFound, NotFound._NP_RepositoryId, "NotFound")
_0_Fissures.IfDataSetMgr._tc_NotFound = omniORB.tcInternal.createTypeCode(_0_Fissures.IfDataSetMgr._d_NotFound)
omniORB.registerType(NotFound._NP_RepositoryId, _0_Fissures.IfDataSetMgr._d_NotFound, _0_Fissures.IfDataSetMgr._tc_NotFound)
del NotFound

# exception NotADataSet
_0_Fissures.IfDataSetMgr.NotADataSet = omniORB.newEmptyClass()
class NotADataSet (CORBA.UserException):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfDataSetMgr/NotADataSet:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_Fissures.IfDataSetMgr.NotADataSet = NotADataSet
_0_Fissures.IfDataSetMgr._d_NotADataSet  = (omniORB.tcInternal.tv_except, NotADataSet, NotADataSet._NP_RepositoryId, "NotADataSet")
_0_Fissures.IfDataSetMgr._tc_NotADataSet = omniORB.tcInternal.createTypeCode(_0_Fissures.IfDataSetMgr._d_NotADataSet)
omniORB.registerType(NotADataSet._NP_RepositoryId, _0_Fissures.IfDataSetMgr._d_NotADataSet, _0_Fissures.IfDataSetMgr._tc_NotADataSet)
del NotADataSet

# exception NotADataSetNode
_0_Fissures.IfDataSetMgr.NotADataSetNode = omniORB.newEmptyClass()
class NotADataSetNode (CORBA.UserException):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfDataSetMgr/NotADataSetNode:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_Fissures.IfDataSetMgr.NotADataSetNode = NotADataSetNode
_0_Fissures.IfDataSetMgr._d_NotADataSetNode  = (omniORB.tcInternal.tv_except, NotADataSetNode, NotADataSetNode._NP_RepositoryId, "NotADataSetNode")
_0_Fissures.IfDataSetMgr._tc_NotADataSetNode = omniORB.tcInternal.createTypeCode(_0_Fissures.IfDataSetMgr._d_NotADataSetNode)
omniORB.registerType(NotADataSetNode._NP_RepositoryId, _0_Fissures.IfDataSetMgr._d_NotADataSetNode, _0_Fissures.IfDataSetMgr._tc_NotADataSetNode)
del NotADataSetNode

# interface DataSetComponent
_0_Fissures.IfDataSetMgr._d_DataSetComponent = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfDataSetMgr/DataSetComponent:1.0", "DataSetComponent")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetComponent:1.0"] = _0_Fissures.IfDataSetMgr._d_DataSetComponent
_0_Fissures.IfDataSetMgr.DataSetComponent = omniORB.newEmptyClass()
class DataSetComponent :
    _NP_RepositoryId = _0_Fissures.IfDataSetMgr._d_DataSetComponent[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfDataSetMgr.DataSetComponent = DataSetComponent
_0_Fissures.IfDataSetMgr._tc_DataSetComponent = omniORB.tcInternal.createTypeCode(_0_Fissures.IfDataSetMgr._d_DataSetComponent)
omniORB.registerType(DataSetComponent._NP_RepositoryId, _0_Fissures.IfDataSetMgr._d_DataSetComponent, _0_Fissures.IfDataSetMgr._tc_DataSetComponent)

# DataSetComponent operations and attributes
DataSetComponent._d__get_a_finder = ((),(omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetFinder:1.0"],),None)
DataSetComponent._d__get_a_factory = ((),(omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetFactory:1.0"],),None)

# DataSetComponent object reference
class _objref_DataSetComponent (CORBA.Object):
    _NP_RepositoryId = DataSetComponent._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def _get_a_finder(self, *args):
        return _omnipy.invoke(self, "_get_a_finder", _0_Fissures.IfDataSetMgr.DataSetComponent._d__get_a_finder, args)

    def _get_a_factory(self, *args):
        return _omnipy.invoke(self, "_get_a_factory", _0_Fissures.IfDataSetMgr.DataSetComponent._d__get_a_factory, args)

    __methods__ = ["_get_a_finder", "_get_a_factory"] + CORBA.Object.__methods__

omniORB.registerObjref(DataSetComponent._NP_RepositoryId, _objref_DataSetComponent)
_0_Fissures.IfDataSetMgr._objref_DataSetComponent = _objref_DataSetComponent
del DataSetComponent, _objref_DataSetComponent

# DataSetComponent skeleton
__name__ = "Fissures__POA.IfDataSetMgr"
class DataSetComponent (PortableServer.Servant):
    _NP_RepositoryId = _0_Fissures.IfDataSetMgr.DataSetComponent._NP_RepositoryId


    _omni_op_d = {"_get_a_finder": _0_Fissures.IfDataSetMgr.DataSetComponent._d__get_a_finder, "_get_a_factory": _0_Fissures.IfDataSetMgr.DataSetComponent._d__get_a_factory}

DataSetComponent._omni_skeleton = DataSetComponent
_0_Fissures__POA.IfDataSetMgr.DataSetComponent = DataSetComponent
omniORB.registerSkeleton(DataSetComponent._NP_RepositoryId, DataSetComponent)
del DataSetComponent
__name__ = "Fissures.IfDataSetMgr"

# interface DataSetFinder
_0_Fissures.IfDataSetMgr._d_DataSetFinder = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfDataSetMgr/DataSetFinder:1.0", "DataSetFinder")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetFinder:1.0"] = _0_Fissures.IfDataSetMgr._d_DataSetFinder
_0_Fissures.IfDataSetMgr.DataSetFinder = omniORB.newEmptyClass()
class DataSetFinder (_0_Fissures.IfDataSetMgr.DataSetComponent):
    _NP_RepositoryId = _0_Fissures.IfDataSetMgr._d_DataSetFinder[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfDataSetMgr.DataSetFinder = DataSetFinder
_0_Fissures.IfDataSetMgr._tc_DataSetFinder = omniORB.tcInternal.createTypeCode(_0_Fissures.IfDataSetMgr._d_DataSetFinder)
omniORB.registerType(DataSetFinder._NP_RepositoryId, _0_Fissures.IfDataSetMgr._d_DataSetFinder, _0_Fissures.IfDataSetMgr._tc_DataSetFinder)

# DataSetFinder operations and attributes
DataSetFinder._d_find_by_id = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/NodeId:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetAccess:1.0"], ), {_0_Fissures.IfDataSetMgr.NotFound._NP_RepositoryId: _0_Fissures.IfDataSetMgr._d_NotFound, _0_Fissures.IfDataSetMgr.NotADataSetNode._NP_RepositoryId: _0_Fissures.IfDataSetMgr._d_NotADataSetNode})
DataSetFinder._d_find_by_name = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetAccessSeq:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException})
DataSetFinder._d_find_by_owner = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetAccessSeq:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException})

# DataSetFinder object reference
class _objref_DataSetFinder (_0_Fissures.IfDataSetMgr._objref_DataSetComponent):
    _NP_RepositoryId = DataSetFinder._NP_RepositoryId

    def __init__(self):
        _0_Fissures.IfDataSetMgr._objref_DataSetComponent.__init__(self)

    def find_by_id(self, *args):
        return _omnipy.invoke(self, "find_by_id", _0_Fissures.IfDataSetMgr.DataSetFinder._d_find_by_id, args)

    def find_by_name(self, *args):
        return _omnipy.invoke(self, "find_by_name", _0_Fissures.IfDataSetMgr.DataSetFinder._d_find_by_name, args)

    def find_by_owner(self, *args):
        return _omnipy.invoke(self, "find_by_owner", _0_Fissures.IfDataSetMgr.DataSetFinder._d_find_by_owner, args)

    __methods__ = ["find_by_id", "find_by_name", "find_by_owner"] + _0_Fissures.IfDataSetMgr._objref_DataSetComponent.__methods__

omniORB.registerObjref(DataSetFinder._NP_RepositoryId, _objref_DataSetFinder)
_0_Fissures.IfDataSetMgr._objref_DataSetFinder = _objref_DataSetFinder
del DataSetFinder, _objref_DataSetFinder

# DataSetFinder skeleton
__name__ = "Fissures__POA.IfDataSetMgr"
class DataSetFinder (_0_Fissures__POA.IfDataSetMgr.DataSetComponent):
    _NP_RepositoryId = _0_Fissures.IfDataSetMgr.DataSetFinder._NP_RepositoryId


    _omni_op_d = {"find_by_id": _0_Fissures.IfDataSetMgr.DataSetFinder._d_find_by_id, "find_by_name": _0_Fissures.IfDataSetMgr.DataSetFinder._d_find_by_name, "find_by_owner": _0_Fissures.IfDataSetMgr.DataSetFinder._d_find_by_owner}
    _omni_op_d.update(_0_Fissures__POA.IfDataSetMgr.DataSetComponent._omni_op_d)

DataSetFinder._omni_skeleton = DataSetFinder
_0_Fissures__POA.IfDataSetMgr.DataSetFinder = DataSetFinder
omniORB.registerSkeleton(DataSetFinder._NP_RepositoryId, DataSetFinder)
del DataSetFinder
__name__ = "Fissures.IfDataSetMgr"

# interface DataSetFactory
_0_Fissures.IfDataSetMgr._d_DataSetFactory = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfDataSetMgr/DataSetFactory:1.0", "DataSetFactory")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetFactory:1.0"] = _0_Fissures.IfDataSetMgr._d_DataSetFactory
_0_Fissures.IfDataSetMgr.DataSetFactory = omniORB.newEmptyClass()
class DataSetFactory (_0_Fissures.IfDataSetMgr.DataSetComponent):
    _NP_RepositoryId = _0_Fissures.IfDataSetMgr._d_DataSetFactory[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfDataSetMgr.DataSetFactory = DataSetFactory
_0_Fissures.IfDataSetMgr._tc_DataSetFactory = omniORB.tcInternal.createTypeCode(_0_Fissures.IfDataSetMgr._d_DataSetFactory)
omniORB.registerType(DataSetFactory._NP_RepositoryId, _0_Fissures.IfDataSetMgr._d_DataSetFactory, _0_Fissures.IfDataSetMgr._tc_DataSetFactory)

# DataSetFactory operations and attributes
DataSetFactory._d_create = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetAttr:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetAccess:1.0"], ), None)
DataSetFactory._d_copy = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSet:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetAccess:1.0"], ), None)
DataSetFactory._d_destroy_node = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/NodeId:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (), {_0_Fissures.IfDataSetMgr.NotFound._NP_RepositoryId: _0_Fissures.IfDataSetMgr._d_NotFound})

# DataSetFactory object reference
class _objref_DataSetFactory (_0_Fissures.IfDataSetMgr._objref_DataSetComponent):
    _NP_RepositoryId = DataSetFactory._NP_RepositoryId

    def __init__(self):
        _0_Fissures.IfDataSetMgr._objref_DataSetComponent.__init__(self)

    def create(self, *args):
        return _omnipy.invoke(self, "create", _0_Fissures.IfDataSetMgr.DataSetFactory._d_create, args)

    def copy(self, *args):
        return _omnipy.invoke(self, "copy", _0_Fissures.IfDataSetMgr.DataSetFactory._d_copy, args)

    def destroy_node(self, *args):
        return _omnipy.invoke(self, "destroy_node", _0_Fissures.IfDataSetMgr.DataSetFactory._d_destroy_node, args)

    __methods__ = ["create", "copy", "destroy_node"] + _0_Fissures.IfDataSetMgr._objref_DataSetComponent.__methods__

omniORB.registerObjref(DataSetFactory._NP_RepositoryId, _objref_DataSetFactory)
_0_Fissures.IfDataSetMgr._objref_DataSetFactory = _objref_DataSetFactory
del DataSetFactory, _objref_DataSetFactory

# DataSetFactory skeleton
__name__ = "Fissures__POA.IfDataSetMgr"
class DataSetFactory (_0_Fissures__POA.IfDataSetMgr.DataSetComponent):
    _NP_RepositoryId = _0_Fissures.IfDataSetMgr.DataSetFactory._NP_RepositoryId


    _omni_op_d = {"create": _0_Fissures.IfDataSetMgr.DataSetFactory._d_create, "copy": _0_Fissures.IfDataSetMgr.DataSetFactory._d_copy, "destroy_node": _0_Fissures.IfDataSetMgr.DataSetFactory._d_destroy_node}
    _omni_op_d.update(_0_Fissures__POA.IfDataSetMgr.DataSetComponent._omni_op_d)

DataSetFactory._omni_skeleton = DataSetFactory
_0_Fissures__POA.IfDataSetMgr.DataSetFactory = DataSetFactory
omniORB.registerSkeleton(DataSetFactory._NP_RepositoryId, DataSetFactory)
del DataSetFactory
__name__ = "Fissures.IfDataSetMgr"

# abstract interface DataSetAccess
_0_Fissures.IfDataSetMgr._d_DataSetAccess = (omniORB.tcInternal.tv_abstract_interface, "IDL:iris.edu/Fissures/IfDataSetMgr/DataSetAccess:1.0", "DataSetAccess")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetAccess:1.0"] = _0_Fissures.IfDataSetMgr._d_DataSetAccess
_0_Fissures.IfDataSetMgr.DataSetAccess = omniORB.newEmptyClass()
class DataSetAccess (_0_Fissures.AuditSystemAccess):
    _NP_RepositoryId = _0_Fissures.IfDataSetMgr._d_DataSetAccess[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfDataSetMgr.DataSetAccess = DataSetAccess
_0_Fissures.IfDataSetMgr._tc_DataSetAccess = omniORB.tcInternal.createTypeCode(_0_Fissures.IfDataSetMgr._d_DataSetAccess)
omniORB.registerType(DataSetAccess._NP_RepositoryId, _0_Fissures.IfDataSetMgr._d_DataSetAccess, _0_Fissures.IfDataSetMgr._tc_DataSetAccess)

# DataSetAccess operations and attributes
DataSetAccess._d__get_a_writeable = ((),(omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSet:1.0"],),None)
DataSetAccess._d__get_parm_svc = ((),(omniORB.typeMapping["IDL:iris.edu/Fissures/IfParameterMgr/ParameterComponent:1.0"],),None)
DataSetAccess._d_localize = ((), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/LocalDataSet:1.0"], ), None)
DataSetAccess._d_get_attributes = ((), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetAttr:1.0"], ), None)
DataSetAccess._d_get_datasets = ((), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetAccessSeq:1.0"], ), None)
DataSetAccess._d_get_motion_vectors = ((), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/MotionVectorNodeSeq:1.0"], ), None, None, 1)
DataSetAccess._d_get_seismograms = ((), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/SeismogramNodeSeq:1.0"], ), None, None, 1)

# DataSetAccess object reference
class _objref_DataSetAccess (_0_Fissures._objref_AuditSystemAccess):
    _NP_RepositoryId = DataSetAccess._NP_RepositoryId

    def __init__(self):
        _0_Fissures._objref_AuditSystemAccess.__init__(self)

    def _get_a_writeable(self, *args):
        return _omnipy.invoke(self, "_get_a_writeable", _0_Fissures.IfDataSetMgr.DataSetAccess._d__get_a_writeable, args)

    def _get_parm_svc(self, *args):
        return _omnipy.invoke(self, "_get_parm_svc", _0_Fissures.IfDataSetMgr.DataSetAccess._d__get_parm_svc, args)

    def localize(self, *args):
        return _omnipy.invoke(self, "localize", _0_Fissures.IfDataSetMgr.DataSetAccess._d_localize, args)

    def get_attributes(self, *args):
        return _omnipy.invoke(self, "get_attributes", _0_Fissures.IfDataSetMgr.DataSetAccess._d_get_attributes, args)

    def get_datasets(self, *args):
        return _omnipy.invoke(self, "get_datasets", _0_Fissures.IfDataSetMgr.DataSetAccess._d_get_datasets, args)

    def get_motion_vectors(self, *args):
        return _omnipy.invoke(self, "get_motion_vectors", _0_Fissures.IfDataSetMgr.DataSetAccess._d_get_motion_vectors, args)

    def get_seismograms(self, *args):
        return _omnipy.invoke(self, "get_seismograms", _0_Fissures.IfDataSetMgr.DataSetAccess._d_get_seismograms, args)

    __methods__ = ["_get_a_writeable", "_get_parm_svc", "localize", "get_attributes", "get_datasets", "get_motion_vectors", "get_seismograms"] + _0_Fissures._objref_AuditSystemAccess.__methods__

omniORB.registerObjref(DataSetAccess._NP_RepositoryId, _objref_DataSetAccess)
_0_Fissures.IfDataSetMgr._objref_DataSetAccess = _objref_DataSetAccess
del DataSetAccess, _objref_DataSetAccess

# DataSetAccess skeleton
__name__ = "Fissures__POA.IfDataSetMgr"
class DataSetAccess (_0_Fissures__POA.AuditSystemAccess):
    _NP_RepositoryId = _0_Fissures.IfDataSetMgr.DataSetAccess._NP_RepositoryId


    _omni_op_d = {"_get_a_writeable": _0_Fissures.IfDataSetMgr.DataSetAccess._d__get_a_writeable, "_get_parm_svc": _0_Fissures.IfDataSetMgr.DataSetAccess._d__get_parm_svc, "localize": _0_Fissures.IfDataSetMgr.DataSetAccess._d_localize, "get_attributes": _0_Fissures.IfDataSetMgr.DataSetAccess._d_get_attributes, "get_datasets": _0_Fissures.IfDataSetMgr.DataSetAccess._d_get_datasets, "get_motion_vectors": _0_Fissures.IfDataSetMgr.DataSetAccess._d_get_motion_vectors, "get_seismograms": _0_Fissures.IfDataSetMgr.DataSetAccess._d_get_seismograms}
    _omni_op_d.update(_0_Fissures__POA.AuditSystemAccess._omni_op_d)

DataSetAccess._omni_skeleton = DataSetAccess
_0_Fissures__POA.IfDataSetMgr.DataSetAccess = DataSetAccess
omniORB.registerSkeleton(DataSetAccess._NP_RepositoryId, DataSetAccess)
del DataSetAccess
__name__ = "Fissures.IfDataSetMgr"

# abstract interface DataSet
_0_Fissures.IfDataSetMgr._d_DataSet = (omniORB.tcInternal.tv_abstract_interface, "IDL:iris.edu/Fissures/IfDataSetMgr/DataSet:1.0", "DataSet")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSet:1.0"] = _0_Fissures.IfDataSetMgr._d_DataSet
_0_Fissures.IfDataSetMgr.DataSet = omniORB.newEmptyClass()
class DataSet (_0_Fissures.IfDataSetMgr.DataSetAccess):
    _NP_RepositoryId = _0_Fissures.IfDataSetMgr._d_DataSet[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfDataSetMgr.DataSet = DataSet
_0_Fissures.IfDataSetMgr._tc_DataSet = omniORB.tcInternal.createTypeCode(_0_Fissures.IfDataSetMgr._d_DataSet)
omniORB.registerType(DataSet._NP_RepositoryId, _0_Fissures.IfDataSetMgr._d_DataSet, _0_Fissures.IfDataSetMgr._tc_DataSet)

# DataSet operations and attributes
DataSet._d_destroy = ((), (), None)
DataSet._d_update_dataset = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetAttr:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException})
DataSet._d_add_dataset = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetAccess:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (), {_0_Fissures.IfDataSetMgr.NotFound._NP_RepositoryId: _0_Fissures.IfDataSetMgr._d_NotFound, _0_Fissures.IfDataSetMgr.NotADataSet._NP_RepositoryId: _0_Fissures.IfDataSetMgr._d_NotADataSet})
DataSet._d_add_motion_vector = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/MotionVectorNode:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/NodeId:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException}, None, 1)
DataSet._d_add_seismogram = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramAccess:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/NodeId:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException})
DataSet._d_remove_node = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/NodeId:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException})

# DataSet object reference
class _objref_DataSet (_0_Fissures.IfDataSetMgr._objref_DataSetAccess):
    _NP_RepositoryId = DataSet._NP_RepositoryId

    def __init__(self):
        _0_Fissures.IfDataSetMgr._objref_DataSetAccess.__init__(self)

    def destroy(self, *args):
        return _omnipy.invoke(self, "destroy", _0_Fissures.IfDataSetMgr.DataSet._d_destroy, args)

    def update_dataset(self, *args):
        return _omnipy.invoke(self, "update_dataset", _0_Fissures.IfDataSetMgr.DataSet._d_update_dataset, args)

    def add_dataset(self, *args):
        return _omnipy.invoke(self, "add_dataset", _0_Fissures.IfDataSetMgr.DataSet._d_add_dataset, args)

    def add_motion_vector(self, *args):
        return _omnipy.invoke(self, "add_motion_vector", _0_Fissures.IfDataSetMgr.DataSet._d_add_motion_vector, args)

    def add_seismogram(self, *args):
        return _omnipy.invoke(self, "add_seismogram", _0_Fissures.IfDataSetMgr.DataSet._d_add_seismogram, args)

    def remove_node(self, *args):
        return _omnipy.invoke(self, "remove_node", _0_Fissures.IfDataSetMgr.DataSet._d_remove_node, args)

    __methods__ = ["destroy", "update_dataset", "add_dataset", "add_motion_vector", "add_seismogram", "remove_node"] + _0_Fissures.IfDataSetMgr._objref_DataSetAccess.__methods__

omniORB.registerObjref(DataSet._NP_RepositoryId, _objref_DataSet)
_0_Fissures.IfDataSetMgr._objref_DataSet = _objref_DataSet
del DataSet, _objref_DataSet

# DataSet skeleton
__name__ = "Fissures__POA.IfDataSetMgr"
class DataSet (_0_Fissures__POA.IfDataSetMgr.DataSetAccess):
    _NP_RepositoryId = _0_Fissures.IfDataSetMgr.DataSet._NP_RepositoryId


    _omni_op_d = {"destroy": _0_Fissures.IfDataSetMgr.DataSet._d_destroy, "update_dataset": _0_Fissures.IfDataSetMgr.DataSet._d_update_dataset, "add_dataset": _0_Fissures.IfDataSetMgr.DataSet._d_add_dataset, "add_motion_vector": _0_Fissures.IfDataSetMgr.DataSet._d_add_motion_vector, "add_seismogram": _0_Fissures.IfDataSetMgr.DataSet._d_add_seismogram, "remove_node": _0_Fissures.IfDataSetMgr.DataSet._d_remove_node}
    _omni_op_d.update(_0_Fissures__POA.IfDataSetMgr.DataSetAccess._omni_op_d)

DataSet._omni_skeleton = DataSet
_0_Fissures__POA.IfDataSetMgr.DataSet = DataSet
omniORB.registerSkeleton(DataSet._NP_RepositoryId, DataSet)
del DataSet
__name__ = "Fissures.IfDataSetMgr"

# interface RemoteDataSetAccess
_0_Fissures.IfDataSetMgr._d_RemoteDataSetAccess = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfDataSetMgr/RemoteDataSetAccess:1.0", "RemoteDataSetAccess")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/RemoteDataSetAccess:1.0"] = _0_Fissures.IfDataSetMgr._d_RemoteDataSetAccess
_0_Fissures.IfDataSetMgr.RemoteDataSetAccess = omniORB.newEmptyClass()
class RemoteDataSetAccess (_0_Fissures.IfDataSetMgr.DataSetAccess, _0_Fissures.IfDataSetMgr.DataSetComponent):
    _NP_RepositoryId = _0_Fissures.IfDataSetMgr._d_RemoteDataSetAccess[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfDataSetMgr.RemoteDataSetAccess = RemoteDataSetAccess
_0_Fissures.IfDataSetMgr._tc_RemoteDataSetAccess = omniORB.tcInternal.createTypeCode(_0_Fissures.IfDataSetMgr._d_RemoteDataSetAccess)
omniORB.registerType(RemoteDataSetAccess._NP_RepositoryId, _0_Fissures.IfDataSetMgr._d_RemoteDataSetAccess, _0_Fissures.IfDataSetMgr._tc_RemoteDataSetAccess)

# RemoteDataSetAccess object reference
class _objref_RemoteDataSetAccess (_0_Fissures.IfDataSetMgr._objref_DataSetAccess, _0_Fissures.IfDataSetMgr._objref_DataSetComponent):
    _NP_RepositoryId = RemoteDataSetAccess._NP_RepositoryId

    def __init__(self):
        _0_Fissures.IfDataSetMgr._objref_DataSetAccess.__init__(self)
        _0_Fissures.IfDataSetMgr._objref_DataSetComponent.__init__(self)

    __methods__ = [] + _0_Fissures.IfDataSetMgr._objref_DataSetAccess.__methods__ + _0_Fissures.IfDataSetMgr._objref_DataSetComponent.__methods__

omniORB.registerObjref(RemoteDataSetAccess._NP_RepositoryId, _objref_RemoteDataSetAccess)
_0_Fissures.IfDataSetMgr._objref_RemoteDataSetAccess = _objref_RemoteDataSetAccess
del RemoteDataSetAccess, _objref_RemoteDataSetAccess

# RemoteDataSetAccess skeleton
__name__ = "Fissures__POA.IfDataSetMgr"
class RemoteDataSetAccess (_0_Fissures__POA.IfDataSetMgr.DataSetAccess, _0_Fissures__POA.IfDataSetMgr.DataSetComponent):
    _NP_RepositoryId = _0_Fissures.IfDataSetMgr.RemoteDataSetAccess._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_Fissures__POA.IfDataSetMgr.DataSetAccess._omni_op_d)
    _omni_op_d.update(_0_Fissures__POA.IfDataSetMgr.DataSetComponent._omni_op_d)

RemoteDataSetAccess._omni_skeleton = RemoteDataSetAccess
_0_Fissures__POA.IfDataSetMgr.RemoteDataSetAccess = RemoteDataSetAccess
omniORB.registerSkeleton(RemoteDataSetAccess._NP_RepositoryId, RemoteDataSetAccess)
del RemoteDataSetAccess
__name__ = "Fissures.IfDataSetMgr"

# interface RemoteDataSet
_0_Fissures.IfDataSetMgr._d_RemoteDataSet = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfDataSetMgr/RemoteDataSet:1.0", "RemoteDataSet")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/RemoteDataSet:1.0"] = _0_Fissures.IfDataSetMgr._d_RemoteDataSet
_0_Fissures.IfDataSetMgr.RemoteDataSet = omniORB.newEmptyClass()
class RemoteDataSet (_0_Fissures.IfDataSetMgr.DataSet, _0_Fissures.IfDataSetMgr.RemoteDataSetAccess, _0_Fissures.IfDataSetMgr.DataSetComponent):
    _NP_RepositoryId = _0_Fissures.IfDataSetMgr._d_RemoteDataSet[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfDataSetMgr.RemoteDataSet = RemoteDataSet
_0_Fissures.IfDataSetMgr._tc_RemoteDataSet = omniORB.tcInternal.createTypeCode(_0_Fissures.IfDataSetMgr._d_RemoteDataSet)
omniORB.registerType(RemoteDataSet._NP_RepositoryId, _0_Fissures.IfDataSetMgr._d_RemoteDataSet, _0_Fissures.IfDataSetMgr._tc_RemoteDataSet)

# RemoteDataSet object reference
class _objref_RemoteDataSet (_0_Fissures.IfDataSetMgr._objref_DataSet, _0_Fissures.IfDataSetMgr._objref_RemoteDataSetAccess, _0_Fissures.IfDataSetMgr._objref_DataSetComponent):
    _NP_RepositoryId = RemoteDataSet._NP_RepositoryId

    def __init__(self):
        _0_Fissures.IfDataSetMgr._objref_DataSet.__init__(self)
        _0_Fissures.IfDataSetMgr._objref_RemoteDataSetAccess.__init__(self)
        _0_Fissures.IfDataSetMgr._objref_DataSetComponent.__init__(self)

    __methods__ = [] + _0_Fissures.IfDataSetMgr._objref_DataSet.__methods__ + _0_Fissures.IfDataSetMgr._objref_RemoteDataSetAccess.__methods__ + _0_Fissures.IfDataSetMgr._objref_DataSetComponent.__methods__

omniORB.registerObjref(RemoteDataSet._NP_RepositoryId, _objref_RemoteDataSet)
_0_Fissures.IfDataSetMgr._objref_RemoteDataSet = _objref_RemoteDataSet
del RemoteDataSet, _objref_RemoteDataSet

# RemoteDataSet skeleton
__name__ = "Fissures__POA.IfDataSetMgr"
class RemoteDataSet (_0_Fissures__POA.IfDataSetMgr.DataSet, _0_Fissures__POA.IfDataSetMgr.RemoteDataSetAccess, _0_Fissures__POA.IfDataSetMgr.DataSetComponent):
    _NP_RepositoryId = _0_Fissures.IfDataSetMgr.RemoteDataSet._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_Fissures__POA.IfDataSetMgr.DataSet._omni_op_d)
    _omni_op_d.update(_0_Fissures__POA.IfDataSetMgr.RemoteDataSetAccess._omni_op_d)
    _omni_op_d.update(_0_Fissures__POA.IfDataSetMgr.DataSetComponent._omni_op_d)

RemoteDataSet._omni_skeleton = RemoteDataSet
_0_Fissures__POA.IfDataSetMgr.RemoteDataSet = RemoteDataSet
omniORB.registerSkeleton(RemoteDataSet._NP_RepositoryId, RemoteDataSet)
del RemoteDataSet
__name__ = "Fissures.IfDataSetMgr"

# valuetype LocalDataSet
_0_Fissures.IfDataSetMgr._d_LocalDataSet = (omniORB.tcInternal.tv__indirect, ["IDL:iris.edu/Fissures/IfDataSetMgr/LocalDataSet:1.0"])
omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/LocalDataSet:1.0"] = _0_Fissures.IfDataSetMgr._d_LocalDataSet
_0_Fissures.IfDataSetMgr.LocalDataSet = omniORB.newEmptyClass()

class LocalDataSet (_0_CORBA.ValueBase, _0_Fissures__POA.IfDataSetMgr.DataSet):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfDataSetMgr/LocalDataSet:1.0"

    def __init__(self, *args, **kwargs):
        if args:
            if len(args) != 7:
                raise TypeError("LocalDataSet() takes 7 arguments "
                                "(%d given)" % len(args))
            self.attributes = args[0]
            self.datasets = args[1]
            self.seismograms = args[2]
            self.motion_vectors = args[3]
            self.local_seis = args[4]
            self.local_motion = args[5]
            self.audit_trail = args[6]
        if kwargs:
            self.__dict__.update(kwargs)


    _omni_op_d = {}
    _omni_op_d.update(_0_Fissures__POA.IfDataSetMgr.DataSet._omni_op_d)

LocalDataSet._omni_skeleton = LocalDataSet


# LocalDataSet object reference
class _objref_LocalDataSet (_0_Fissures.IfDataSetMgr._objref_DataSet):
    _NP_RepositoryId = LocalDataSet._NP_RepositoryId

    def __init__(self):
        _0_Fissures.IfDataSetMgr._objref_DataSet.__init__(self)

    __methods__ = _0_Fissures.IfDataSetMgr._objref_DataSet.__methods__

omniORB.registerObjref(LocalDataSet._NP_RepositoryId, _objref_LocalDataSet)
_0_Fissures.IfDataSetMgr._objref_LocalDataSet = _objref_LocalDataSet
del _objref_LocalDataSet
_0_Fissures.IfDataSetMgr.LocalDataSet = LocalDataSet
_0_Fissures.IfDataSetMgr._d_LocalDataSet  = (omniORB.tcInternal.tv_value, LocalDataSet, LocalDataSet._NP_RepositoryId, "LocalDataSet", _0_CORBA.VM_NONE, None, _0_CORBA.tcInternal.tv_null, "attributes", omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetAttr:1.0"], _0_CORBA.PUBLIC_MEMBER, "datasets", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/DataSetAccess:1.0"], 0), _0_CORBA.PUBLIC_MEMBER, "seismograms", omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/SeismogramNodeSeq:1.0"], _0_CORBA.PUBLIC_MEMBER, "motion_vectors", omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/MotionVectorNodeSeq:1.0"], _0_CORBA.PUBLIC_MEMBER, "local_seis", omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/LocalSeismogramSeq:1.0"], _0_CORBA.PUBLIC_MEMBER, "local_motion", omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/LocalMotionVectorSeq:1.0"], _0_CORBA.PUBLIC_MEMBER, "audit_trail", omniORB.typeMapping["IDL:iris.edu/Fissures/AuditTrail:1.0"], _0_CORBA.PRIVATE_MEMBER)
_0_Fissures.IfDataSetMgr._tc_LocalDataSet = omniORB.tcInternal.createTypeCode(_0_Fissures.IfDataSetMgr._d_LocalDataSet)
omniORB.registerType(LocalDataSet._NP_RepositoryId, _0_Fissures.IfDataSetMgr._d_LocalDataSet, _0_Fissures.IfDataSetMgr._tc_LocalDataSet)
del LocalDataSet


#
# End of module "Fissures.IfDataSetMgr"
#
__name__ = "Fissures"


#
# End of module "Fissures"
#
__name__ = "IfDataSetMgr_idl"

_exported_modules = ( "Fissures", "Fissures.IfDataSetMgr")

# The end.
