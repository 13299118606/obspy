# Python stubs generated by omniidl from IfPlottable.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "Fissures.idl"
import Fissures_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
# #include "IfTimeSeries.idl"
import IfTimeSeries_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfTimeSeries = omniORB.openModule("Fissures.IfTimeSeries")
_0_Fissures__POA.IfTimeSeries = omniORB.openModule("Fissures__POA.IfTimeSeries")
# #include "IfNetwork.idl"
import IfNetwork_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfNetwork = omniORB.openModule("Fissures.IfNetwork")
_0_Fissures__POA.IfNetwork = omniORB.openModule("Fissures__POA.IfNetwork")
# #include "IfParameterMgr.idl"
import IfParameterMgr_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfParameterMgr = omniORB.openModule("Fissures.IfParameterMgr")
_0_Fissures__POA.IfParameterMgr = omniORB.openModule("Fissures__POA.IfParameterMgr")
# #include "IfSeismogramDC.idl"
import IfSeismogramDC_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfSeismogramDC = omniORB.openModule("Fissures.IfSeismogramDC")
_0_Fissures__POA.IfSeismogramDC = omniORB.openModule("Fissures__POA.IfSeismogramDC")
# #include "IfSeismogramMgr.idl"
import IfSeismogramMgr_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfSeismogramMgr = omniORB.openModule("Fissures.IfSeismogramMgr")
_0_Fissures__POA.IfSeismogramMgr = omniORB.openModule("Fissures__POA.IfSeismogramMgr")
# #include "IfDataSetMgr.idl"
import IfDataSetMgr_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfDataSetMgr = omniORB.openModule("Fissures.IfDataSetMgr")
_0_Fissures__POA.IfDataSetMgr = omniORB.openModule("Fissures__POA.IfDataSetMgr")
# #include "IfPickMgr.idl"
import IfPickMgr_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfPickMgr = omniORB.openModule("Fissures.IfPickMgr")
_0_Fissures__POA.IfPickMgr = omniORB.openModule("Fissures__POA.IfPickMgr")
# #include "CosEventComm.idl"
import CosEventComm_idl
_0_CosEventComm = omniORB.openModule("CosEventComm")
_0_CosEventComm__POA = omniORB.openModule("CosEventComm__POA")
# #include "CosEventChannelAdmin.idl"
import CosEventChannelAdmin_idl
_0_CosEventChannelAdmin = omniORB.openModule("CosEventChannelAdmin")
_0_CosEventChannelAdmin__POA = omniORB.openModule("CosEventChannelAdmin__POA")
# #include "IfEvent.idl"
import IfEvent_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfEvent = omniORB.openModule("Fissures.IfEvent")
_0_Fissures__POA.IfEvent = omniORB.openModule("Fissures__POA.IfEvent")

#
# Start of module "Fissures"
#
__name__ = "Fissures"
_0_Fissures = omniORB.openModule("Fissures", r"IfPlottable.idl")
_0_Fissures__POA = omniORB.openModule("Fissures__POA", r"IfPlottable.idl")


#
# Start of module "Fissures.IfPlottable"
#
__name__ = "Fissures.IfPlottable"
_0_Fissures.IfPlottable = omniORB.openModule("Fissures.IfPlottable", r"IfPlottable.idl")
_0_Fissures__POA.IfPlottable = omniORB.openModule("Fissures__POA.IfPlottable", r"IfPlottable.idl")

_0_Fissures.IfPlottable.VERSION = "1.0"

# exception PlottableNotAvailable
_0_Fissures.IfPlottable.PlottableNotAvailable = omniORB.newEmptyClass()
class PlottableNotAvailable (CORBA.UserException):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfPlottable/PlottableNotAvailable:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_Fissures.IfPlottable.PlottableNotAvailable = PlottableNotAvailable
_0_Fissures.IfPlottable._d_PlottableNotAvailable  = (omniORB.tcInternal.tv_except, PlottableNotAvailable, PlottableNotAvailable._NP_RepositoryId, "PlottableNotAvailable")
_0_Fissures.IfPlottable._tc_PlottableNotAvailable = omniORB.tcInternal.createTypeCode(_0_Fissures.IfPlottable._d_PlottableNotAvailable)
omniORB.registerType(PlottableNotAvailable._NP_RepositoryId, _0_Fissures.IfPlottable._d_PlottableNotAvailable, _0_Fissures.IfPlottable._tc_PlottableNotAvailable)
del PlottableNotAvailable

# exception UnsupportedDimension
_0_Fissures.IfPlottable.UnsupportedDimension = omniORB.newEmptyClass()
class UnsupportedDimension (CORBA.UserException):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfPlottable/UnsupportedDimension:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_Fissures.IfPlottable.UnsupportedDimension = UnsupportedDimension
_0_Fissures.IfPlottable._d_UnsupportedDimension  = (omniORB.tcInternal.tv_except, UnsupportedDimension, UnsupportedDimension._NP_RepositoryId, "UnsupportedDimension")
_0_Fissures.IfPlottable._tc_UnsupportedDimension = omniORB.tcInternal.createTypeCode(_0_Fissures.IfPlottable._d_UnsupportedDimension)
omniORB.registerType(UnsupportedDimension._NP_RepositoryId, _0_Fissures.IfPlottable._d_UnsupportedDimension, _0_Fissures.IfPlottable._tc_UnsupportedDimension)
del UnsupportedDimension

# interface PlottableDC
_0_Fissures.IfPlottable._d_PlottableDC = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfPlottable/PlottableDC:1.0", "PlottableDC")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfPlottable/PlottableDC:1.0"] = _0_Fissures.IfPlottable._d_PlottableDC
_0_Fissures.IfPlottable.PlottableDC = omniORB.newEmptyClass()
class PlottableDC :
    _NP_RepositoryId = _0_Fissures.IfPlottable._d_PlottableDC[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfPlottable.PlottableDC = PlottableDC
_0_Fissures.IfPlottable._tc_PlottableDC = omniORB.tcInternal.createTypeCode(_0_Fissures.IfPlottable._d_PlottableDC)
omniORB.registerType(PlottableDC._NP_RepositoryId, _0_Fissures.IfPlottable._d_PlottableDC, _0_Fissures.IfPlottable._tc_PlottableDC)

# PlottableDC operations and attributes
PlottableDC._d_custom_sizes = ((), (omniORB.tcInternal.tv_boolean, ), None)
PlottableDC._d_get_plottable = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/RequestFilter:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/Dimension:1.0"]), (omniORB.typeMapping["IDL:iris.edu/Fissures/PlottableSeq:1.0"], ), {_0_Fissures.IfPlottable.PlottableNotAvailable._NP_RepositoryId: _0_Fissures.IfPlottable._d_PlottableNotAvailable, _0_Fissures.IfPlottable.UnsupportedDimension._NP_RepositoryId: _0_Fissures.IfPlottable._d_UnsupportedDimension, _0_Fissures.NotImplemented._NP_RepositoryId: _0_Fissures._d_NotImplemented})
PlottableDC._d_get_whole_day_sizes = ((), (omniORB.typeMapping["IDL:iris.edu/Fissures/DimensionSeq:1.0"], ), None)
PlottableDC._d_get_for_day = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfNetwork/ChannelId:1.0"], omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:iris.edu/Fissures/Dimension:1.0"]), (omniORB.typeMapping["IDL:iris.edu/Fissures/PlottableSeq:1.0"], ), {_0_Fissures.IfPlottable.PlottableNotAvailable._NP_RepositoryId: _0_Fissures.IfPlottable._d_PlottableNotAvailable, _0_Fissures.IfPlottable.UnsupportedDimension._NP_RepositoryId: _0_Fissures.IfPlottable._d_UnsupportedDimension})
PlottableDC._d_get_event_sizes = ((), (omniORB.typeMapping["IDL:iris.edu/Fissures/DimensionSeq:1.0"], ), None)
PlottableDC._d_get_for_event = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfEvent/EventAccess:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfNetwork/ChannelId:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/Dimension:1.0"]), (omniORB.typeMapping["IDL:iris.edu/Fissures/PlottableSeq:1.0"], ), {_0_Fissures.IfPlottable.PlottableNotAvailable._NP_RepositoryId: _0_Fissures.IfPlottable._d_PlottableNotAvailable, _0_Fissures.IfPlottable.UnsupportedDimension._NP_RepositoryId: _0_Fissures.IfPlottable._d_UnsupportedDimension})

# PlottableDC object reference
class _objref_PlottableDC (CORBA.Object):
    _NP_RepositoryId = PlottableDC._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def custom_sizes(self, *args):
        return _omnipy.invoke(self, "custom_sizes", _0_Fissures.IfPlottable.PlottableDC._d_custom_sizes, args)

    def get_plottable(self, *args):
        return _omnipy.invoke(self, "get_plottable", _0_Fissures.IfPlottable.PlottableDC._d_get_plottable, args)

    def get_whole_day_sizes(self, *args):
        return _omnipy.invoke(self, "get_whole_day_sizes", _0_Fissures.IfPlottable.PlottableDC._d_get_whole_day_sizes, args)

    def get_for_day(self, *args):
        return _omnipy.invoke(self, "get_for_day", _0_Fissures.IfPlottable.PlottableDC._d_get_for_day, args)

    def get_event_sizes(self, *args):
        return _omnipy.invoke(self, "get_event_sizes", _0_Fissures.IfPlottable.PlottableDC._d_get_event_sizes, args)

    def get_for_event(self, *args):
        return _omnipy.invoke(self, "get_for_event", _0_Fissures.IfPlottable.PlottableDC._d_get_for_event, args)

    __methods__ = ["custom_sizes", "get_plottable", "get_whole_day_sizes", "get_for_day", "get_event_sizes", "get_for_event"] + CORBA.Object.__methods__

omniORB.registerObjref(PlottableDC._NP_RepositoryId, _objref_PlottableDC)
_0_Fissures.IfPlottable._objref_PlottableDC = _objref_PlottableDC
del PlottableDC, _objref_PlottableDC

# PlottableDC skeleton
__name__ = "Fissures__POA.IfPlottable"
class PlottableDC (PortableServer.Servant):
    _NP_RepositoryId = _0_Fissures.IfPlottable.PlottableDC._NP_RepositoryId


    _omni_op_d = {"custom_sizes": _0_Fissures.IfPlottable.PlottableDC._d_custom_sizes, "get_plottable": _0_Fissures.IfPlottable.PlottableDC._d_get_plottable, "get_whole_day_sizes": _0_Fissures.IfPlottable.PlottableDC._d_get_whole_day_sizes, "get_for_day": _0_Fissures.IfPlottable.PlottableDC._d_get_for_day, "get_event_sizes": _0_Fissures.IfPlottable.PlottableDC._d_get_event_sizes, "get_for_event": _0_Fissures.IfPlottable.PlottableDC._d_get_for_event}

PlottableDC._omni_skeleton = PlottableDC
_0_Fissures__POA.IfPlottable.PlottableDC = PlottableDC
omniORB.registerSkeleton(PlottableDC._NP_RepositoryId, PlottableDC)
del PlottableDC
__name__ = "Fissures.IfPlottable"

#
# End of module "Fissures.IfPlottable"
#
__name__ = "Fissures"


#
# End of module "Fissures"
#
__name__ = "IfPlottable_idl"

_exported_modules = ( "Fissures", "Fissures.IfPlottable")

# The end.
