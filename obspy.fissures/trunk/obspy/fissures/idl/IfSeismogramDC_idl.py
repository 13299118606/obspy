# Python stubs generated by omniidl from IfSeismogramDC.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "Fissures.idl"
import Fissures_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
# #include "IfTimeSeries.idl"
import IfTimeSeries_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfTimeSeries = omniORB.openModule("Fissures.IfTimeSeries")
_0_Fissures__POA.IfTimeSeries = omniORB.openModule("Fissures__POA.IfTimeSeries")
# #include "IfNetwork.idl"
import IfNetwork_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfNetwork = omniORB.openModule("Fissures.IfNetwork")
_0_Fissures__POA.IfNetwork = omniORB.openModule("Fissures__POA.IfNetwork")
# #include "IfParameterMgr.idl"
import IfParameterMgr_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfParameterMgr = omniORB.openModule("Fissures.IfParameterMgr")
_0_Fissures__POA.IfParameterMgr = omniORB.openModule("Fissures__POA.IfParameterMgr")

#
# Start of module "Fissures"
#
__name__ = "Fissures"
_0_Fissures = omniORB.openModule("Fissures", r"IfSeismogramDC.idl")
_0_Fissures__POA = omniORB.openModule("Fissures__POA", r"IfSeismogramDC.idl")


#
# Start of module "Fissures.IfSeismogramDC"
#
__name__ = "Fissures.IfSeismogramDC"
_0_Fissures.IfSeismogramDC = omniORB.openModule("Fissures.IfSeismogramDC", r"IfSeismogramDC.idl")
_0_Fissures__POA.IfSeismogramDC = omniORB.openModule("Fissures__POA.IfSeismogramDC", r"IfSeismogramDC.idl")

_0_Fissures.IfSeismogramDC.VERSION = "1.0"

# typedef ... TimeSeriesDataSel
class TimeSeriesDataSel (_0_Fissures.IfTimeSeries.TimeSeriesDataSel):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/TimeSeriesDataSel:1.0"

_0_Fissures.IfSeismogramDC.TimeSeriesDataSel = TimeSeriesDataSel
_0_Fissures.IfSeismogramDC._d_TimeSeriesDataSel  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfTimeSeries/TimeSeriesDataSel:1.0"]
_0_Fissures.IfSeismogramDC._ad_TimeSeriesDataSel = (omniORB.tcInternal.tv_alias, TimeSeriesDataSel._NP_RepositoryId, "TimeSeriesDataSel", omniORB.typeMapping["IDL:iris.edu/Fissures/IfTimeSeries/TimeSeriesDataSel:1.0"])
_0_Fissures.IfSeismogramDC._tc_TimeSeriesDataSel = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_TimeSeriesDataSel)
omniORB.registerType(TimeSeriesDataSel._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_TimeSeriesDataSel, _0_Fissures.IfSeismogramDC._tc_TimeSeriesDataSel)
del TimeSeriesDataSel

# typedef ... LongSeq
class LongSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/LongSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramDC.LongSeq = LongSeq
_0_Fissures.IfSeismogramDC._d_LongSeq  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfTimeSeries/LongSeq:1.0"]
_0_Fissures.IfSeismogramDC._ad_LongSeq = (omniORB.tcInternal.tv_alias, LongSeq._NP_RepositoryId, "LongSeq", omniORB.typeCodeMapping["IDL:iris.edu/Fissures/IfTimeSeries/LongSeq:1.0"]._d)
_0_Fissures.IfSeismogramDC._tc_LongSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_LongSeq)
omniORB.registerType(LongSeq._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_LongSeq, _0_Fissures.IfSeismogramDC._tc_LongSeq)
del LongSeq

# typedef ... ShortSeq
class ShortSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/ShortSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramDC.ShortSeq = ShortSeq
_0_Fissures.IfSeismogramDC._d_ShortSeq  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfTimeSeries/ShortSeq:1.0"]
_0_Fissures.IfSeismogramDC._ad_ShortSeq = (omniORB.tcInternal.tv_alias, ShortSeq._NP_RepositoryId, "ShortSeq", omniORB.typeCodeMapping["IDL:iris.edu/Fissures/IfTimeSeries/ShortSeq:1.0"]._d)
_0_Fissures.IfSeismogramDC._tc_ShortSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_ShortSeq)
omniORB.registerType(ShortSeq._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_ShortSeq, _0_Fissures.IfSeismogramDC._tc_ShortSeq)
del ShortSeq

# typedef ... FloatSeq
class FloatSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/FloatSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramDC.FloatSeq = FloatSeq
_0_Fissures.IfSeismogramDC._d_FloatSeq  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfTimeSeries/FloatSeq:1.0"]
_0_Fissures.IfSeismogramDC._ad_FloatSeq = (omniORB.tcInternal.tv_alias, FloatSeq._NP_RepositoryId, "FloatSeq", omniORB.typeCodeMapping["IDL:iris.edu/Fissures/IfTimeSeries/FloatSeq:1.0"]._d)
_0_Fissures.IfSeismogramDC._tc_FloatSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_FloatSeq)
omniORB.registerType(FloatSeq._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_FloatSeq, _0_Fissures.IfSeismogramDC._tc_FloatSeq)
del FloatSeq

# typedef ... DoubleSeq
class DoubleSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/DoubleSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramDC.DoubleSeq = DoubleSeq
_0_Fissures.IfSeismogramDC._d_DoubleSeq  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfTimeSeries/DoubleSeq:1.0"]
_0_Fissures.IfSeismogramDC._ad_DoubleSeq = (omniORB.tcInternal.tv_alias, DoubleSeq._NP_RepositoryId, "DoubleSeq", omniORB.typeCodeMapping["IDL:iris.edu/Fissures/IfTimeSeries/DoubleSeq:1.0"]._d)
_0_Fissures.IfSeismogramDC._tc_DoubleSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_DoubleSeq)
omniORB.registerType(DoubleSeq._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_DoubleSeq, _0_Fissures.IfSeismogramDC._tc_DoubleSeq)
del DoubleSeq

# typedef ... EncodedSeq
class EncodedSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/EncodedSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramDC.EncodedSeq = EncodedSeq
_0_Fissures.IfSeismogramDC._d_EncodedSeq  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfTimeSeries/EncodedSeq:1.0"]
_0_Fissures.IfSeismogramDC._ad_EncodedSeq = (omniORB.tcInternal.tv_alias, EncodedSeq._NP_RepositoryId, "EncodedSeq", omniORB.typeCodeMapping["IDL:iris.edu/Fissures/IfTimeSeries/EncodedSeq:1.0"]._d)
_0_Fissures.IfSeismogramDC._tc_EncodedSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_EncodedSeq)
omniORB.registerType(EncodedSeq._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_EncodedSeq, _0_Fissures.IfSeismogramDC._tc_EncodedSeq)
del EncodedSeq

# typedef ... ChannelId
class ChannelId (_0_Fissures.IfNetwork.ChannelId):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/ChannelId:1.0"

_0_Fissures.IfSeismogramDC.ChannelId = ChannelId
_0_Fissures.IfSeismogramDC._d_ChannelId  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfNetwork/ChannelId:1.0"]
_0_Fissures.IfSeismogramDC._ad_ChannelId = (omniORB.tcInternal.tv_alias, ChannelId._NP_RepositoryId, "ChannelId", omniORB.typeMapping["IDL:iris.edu/Fissures/IfNetwork/ChannelId:1.0"])
_0_Fissures.IfSeismogramDC._tc_ChannelId = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_ChannelId)
omniORB.registerType(ChannelId._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_ChannelId, _0_Fissures.IfSeismogramDC._tc_ChannelId)
del ChannelId

# typedef ... ChannelGroup
class ChannelGroup:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/ChannelGroup:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramDC.ChannelGroup = ChannelGroup
_0_Fissures.IfSeismogramDC._d_ChannelGroup  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfNetwork/ChannelGroup:1.0"]
_0_Fissures.IfSeismogramDC._ad_ChannelGroup = (omniORB.tcInternal.tv_alias, ChannelGroup._NP_RepositoryId, "ChannelGroup", omniORB.typeCodeMapping["IDL:iris.edu/Fissures/IfNetwork/ChannelGroup:1.0"]._d)
_0_Fissures.IfSeismogramDC._tc_ChannelGroup = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_ChannelGroup)
omniORB.registerType(ChannelGroup._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_ChannelGroup, _0_Fissures.IfSeismogramDC._tc_ChannelGroup)
del ChannelGroup

# typedef ... ChannelIdSeq
class ChannelIdSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/ChannelIdSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramDC.ChannelIdSeq = ChannelIdSeq
_0_Fissures.IfSeismogramDC._d_ChannelIdSeq  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfNetwork/ChannelIdSeq:1.0"]
_0_Fissures.IfSeismogramDC._ad_ChannelIdSeq = (omniORB.tcInternal.tv_alias, ChannelIdSeq._NP_RepositoryId, "ChannelIdSeq", omniORB.typeCodeMapping["IDL:iris.edu/Fissures/IfNetwork/ChannelIdSeq:1.0"]._d)
_0_Fissures.IfSeismogramDC._tc_ChannelIdSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_ChannelIdSeq)
omniORB.registerType(ChannelIdSeq._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_ChannelIdSeq, _0_Fissures.IfSeismogramDC._tc_ChannelIdSeq)
del ChannelIdSeq

# typedef ... ParameterRef
class ParameterRef (_0_Fissures.IfParameterMgr.ParameterRef):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/ParameterRef:1.0"

_0_Fissures.IfSeismogramDC.ParameterRef = ParameterRef
_0_Fissures.IfSeismogramDC._d_ParameterRef  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfParameterMgr/ParameterRef:1.0"]
_0_Fissures.IfSeismogramDC._ad_ParameterRef = (omniORB.tcInternal.tv_alias, ParameterRef._NP_RepositoryId, "ParameterRef", omniORB.typeMapping["IDL:iris.edu/Fissures/IfParameterMgr/ParameterRef:1.0"])
_0_Fissures.IfSeismogramDC._tc_ParameterRef = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_ParameterRef)
omniORB.registerType(ParameterRef._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_ParameterRef, _0_Fissures.IfSeismogramDC._tc_ParameterRef)
del ParameterRef

# interface DataCenterCallBack;
_0_Fissures.IfSeismogramDC._d_DataCenterCallBack = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfSeismogramDC/DataCenterCallBack:1.0", "DataCenterCallBack")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/DataCenterCallBack:1.0"] = _0_Fissures.IfSeismogramDC._d_DataCenterCallBack

# typedef ... ServerRequestId
class ServerRequestId:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/ServerRequestId:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramDC.ServerRequestId = ServerRequestId
_0_Fissures.IfSeismogramDC._d_ServerRequestId  = (omniORB.tcInternal.tv_string,0)
_0_Fissures.IfSeismogramDC._ad_ServerRequestId = (omniORB.tcInternal.tv_alias, ServerRequestId._NP_RepositoryId, "ServerRequestId", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfSeismogramDC._tc_ServerRequestId = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_ServerRequestId)
omniORB.registerType(ServerRequestId._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_ServerRequestId, _0_Fissures.IfSeismogramDC._tc_ServerRequestId)
del ServerRequestId

# typedef ... SeismogramId
class SeismogramId:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/SeismogramId:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramDC.SeismogramId = SeismogramId
_0_Fissures.IfSeismogramDC._d_SeismogramId  = (omniORB.tcInternal.tv_string,0)
_0_Fissures.IfSeismogramDC._ad_SeismogramId = (omniORB.tcInternal.tv_alias, SeismogramId._NP_RepositoryId, "SeismogramId", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfSeismogramDC._tc_SeismogramId = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_SeismogramId)
omniORB.registerType(SeismogramId._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_SeismogramId, _0_Fissures.IfSeismogramDC._tc_SeismogramId)
del SeismogramId

# typedef ... MotionVectorId
class MotionVectorId:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/MotionVectorId:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramDC.MotionVectorId = MotionVectorId
_0_Fissures.IfSeismogramDC._d_MotionVectorId  = (omniORB.tcInternal.tv_string,0)
_0_Fissures.IfSeismogramDC._ad_MotionVectorId = (omniORB.tcInternal.tv_alias, MotionVectorId._NP_RepositoryId, "MotionVectorId", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfSeismogramDC._tc_MotionVectorId = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_MotionVectorId)
omniORB.registerType(MotionVectorId._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_MotionVectorId, _0_Fissures.IfSeismogramDC._tc_MotionVectorId)
del MotionVectorId

# struct Property
_0_Fissures.IfSeismogramDC.Property = omniORB.newEmptyClass()
class Property (omniORB.StructBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/Property:1.0"

    def __init__(self, name, value):
        self.name = name
        self.value = value

_0_Fissures.IfSeismogramDC.Property = Property
_0_Fissures.IfSeismogramDC._d_Property  = (omniORB.tcInternal.tv_struct, Property, Property._NP_RepositoryId, "Property", "name", (omniORB.tcInternal.tv_string,0), "value", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfSeismogramDC._tc_Property = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._d_Property)
omniORB.registerType(Property._NP_RepositoryId, _0_Fissures.IfSeismogramDC._d_Property, _0_Fissures.IfSeismogramDC._tc_Property)
del Property

# typedef ... PropertySeq
class PropertySeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/PropertySeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramDC.PropertySeq = PropertySeq
_0_Fissures.IfSeismogramDC._d_PropertySeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/Property:1.0"], 0)
_0_Fissures.IfSeismogramDC._ad_PropertySeq = (omniORB.tcInternal.tv_alias, PropertySeq._NP_RepositoryId, "PropertySeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/Property:1.0"], 0))
_0_Fissures.IfSeismogramDC._tc_PropertySeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_PropertySeq)
omniORB.registerType(PropertySeq._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_PropertySeq, _0_Fissures.IfSeismogramDC._tc_PropertySeq)
del PropertySeq

# valuetype SeismogramAttr
_0_Fissures.IfSeismogramDC._d_SeismogramAttr = (omniORB.tcInternal.tv__indirect, ["IDL:iris.edu/Fissures/IfSeismogramDC/SeismogramAttr:1.0"])
omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/SeismogramAttr:1.0"] = _0_Fissures.IfSeismogramDC._d_SeismogramAttr
_0_Fissures.IfSeismogramDC.SeismogramAttr = omniORB.newEmptyClass()

class SeismogramAttr (_0_CORBA.ValueBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/SeismogramAttr:1.0"

    def __init__(self, *args, **kwargs):
        if args:
            if len(args) != 10:
                raise TypeError("SeismogramAttr() takes 10 arguments "
                                "(%d given)" % len(args))
            self.id = args[0]
            self.properties = args[1]
            self.begin_time = args[2]
            self.num_points = args[3]
            self.sampling_info = args[4]
            self.y_unit = args[5]
            self.channel_id = args[6]
            self.parm_ids = args[7]
            self.time_corrections = args[8]
            self.sample_rate_history = args[9]
        if kwargs:
            self.__dict__.update(kwargs)

_0_Fissures.IfSeismogramDC.SeismogramAttr = SeismogramAttr
_0_Fissures.IfSeismogramDC._d_SeismogramAttr  = (omniORB.tcInternal.tv_value, SeismogramAttr, SeismogramAttr._NP_RepositoryId, "SeismogramAttr", _0_CORBA.VM_NONE, None, _0_CORBA.tcInternal.tv_null, "id", omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/SeismogramId:1.0"], _0_CORBA.PRIVATE_MEMBER, "properties", omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/PropertySeq:1.0"], _0_CORBA.PUBLIC_MEMBER, "begin_time", omniORB.typeMapping["IDL:iris.edu/Fissures/Time:1.0"], _0_CORBA.PUBLIC_MEMBER, "num_points", omniORB.tcInternal.tv_long, _0_CORBA.PUBLIC_MEMBER, "sampling_info", omniORB.typeMapping["IDL:iris.edu/Fissures/Sampling:1.0"], _0_CORBA.PUBLIC_MEMBER, "y_unit", omniORB.typeMapping["IDL:iris.edu/Fissures/Unit:1.0"], _0_CORBA.PUBLIC_MEMBER, "channel_id", omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/ChannelId:1.0"], _0_CORBA.PUBLIC_MEMBER, "parm_ids", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/ParameterRef:1.0"], 0), _0_CORBA.PUBLIC_MEMBER, "time_corrections", omniORB.typeMapping["IDL:iris.edu/Fissures/TimeIntervalSeq:1.0"], _0_CORBA.PUBLIC_MEMBER, "sample_rate_history", omniORB.typeMapping["IDL:iris.edu/Fissures/SamplingSeq:1.0"], _0_CORBA.PUBLIC_MEMBER)
_0_Fissures.IfSeismogramDC._tc_SeismogramAttr = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._d_SeismogramAttr)
omniORB.registerType(SeismogramAttr._NP_RepositoryId, _0_Fissures.IfSeismogramDC._d_SeismogramAttr, _0_Fissures.IfSeismogramDC._tc_SeismogramAttr)
del SeismogramAttr


# typedef ... SeismogramAttrSeq
class SeismogramAttrSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/SeismogramAttrSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramDC.SeismogramAttrSeq = SeismogramAttrSeq
_0_Fissures.IfSeismogramDC._d_SeismogramAttrSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/SeismogramAttr:1.0"], 0)
_0_Fissures.IfSeismogramDC._ad_SeismogramAttrSeq = (omniORB.tcInternal.tv_alias, SeismogramAttrSeq._NP_RepositoryId, "SeismogramAttrSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/SeismogramAttr:1.0"], 0))
_0_Fissures.IfSeismogramDC._tc_SeismogramAttrSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_SeismogramAttrSeq)
omniORB.registerType(SeismogramAttrSeq._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_SeismogramAttrSeq, _0_Fissures.IfSeismogramDC._tc_SeismogramAttrSeq)
del SeismogramAttrSeq

# valuetype MotionVectorAttr
_0_Fissures.IfSeismogramDC._d_MotionVectorAttr = (omniORB.tcInternal.tv__indirect, ["IDL:iris.edu/Fissures/IfSeismogramDC/MotionVectorAttr:1.0"])
omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/MotionVectorAttr:1.0"] = _0_Fissures.IfSeismogramDC._d_MotionVectorAttr
_0_Fissures.IfSeismogramDC.MotionVectorAttr = omniORB.newEmptyClass()

class MotionVectorAttr (_0_CORBA.ValueBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/MotionVectorAttr:1.0"

    def __init__(self, *args, **kwargs):
        if args:
            if len(args) != 10:
                raise TypeError("MotionVectorAttr() takes 10 arguments "
                                "(%d given)" % len(args))
            self.id = args[0]
            self.properties = args[1]
            self.begin_time = args[2]
            self.num_points = args[3]
            self.sampling_info = args[4]
            self.y_unit = args[5]
            self.channel_group = args[6]
            self.parm_ids = args[7]
            self.time_corrections = args[8]
            self.sample_rate_history = args[9]
        if kwargs:
            self.__dict__.update(kwargs)

_0_Fissures.IfSeismogramDC.MotionVectorAttr = MotionVectorAttr
_0_Fissures.IfSeismogramDC._d_MotionVectorAttr  = (omniORB.tcInternal.tv_value, MotionVectorAttr, MotionVectorAttr._NP_RepositoryId, "MotionVectorAttr", _0_CORBA.VM_NONE, None, _0_CORBA.tcInternal.tv_null, "id", omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/MotionVectorId:1.0"], _0_CORBA.PRIVATE_MEMBER, "properties", omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/PropertySeq:1.0"], _0_CORBA.PUBLIC_MEMBER, "begin_time", omniORB.typeMapping["IDL:iris.edu/Fissures/Time:1.0"], _0_CORBA.PUBLIC_MEMBER, "num_points", omniORB.tcInternal.tv_long, _0_CORBA.PUBLIC_MEMBER, "sampling_info", omniORB.typeMapping["IDL:iris.edu/Fissures/Sampling:1.0"], _0_CORBA.PUBLIC_MEMBER, "y_unit", omniORB.typeMapping["IDL:iris.edu/Fissures/Unit:1.0"], _0_CORBA.PUBLIC_MEMBER, "channel_group", omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/ChannelGroup:1.0"], _0_CORBA.PUBLIC_MEMBER, "parm_ids", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/ParameterRef:1.0"], 0), _0_CORBA.PUBLIC_MEMBER, "time_corrections", omniORB.typeMapping["IDL:iris.edu/Fissures/TimeIntervalSeq:1.0"], _0_CORBA.PUBLIC_MEMBER, "sample_rate_history", omniORB.typeMapping["IDL:iris.edu/Fissures/SamplingSeq:1.0"], _0_CORBA.PUBLIC_MEMBER)
_0_Fissures.IfSeismogramDC._tc_MotionVectorAttr = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._d_MotionVectorAttr)
omniORB.registerType(MotionVectorAttr._NP_RepositoryId, _0_Fissures.IfSeismogramDC._d_MotionVectorAttr, _0_Fissures.IfSeismogramDC._tc_MotionVectorAttr)
del MotionVectorAttr


# valuetype LocalSeismogram
_0_Fissures.IfSeismogramDC._d_LocalSeismogram = (omniORB.tcInternal.tv__indirect, ["IDL:iris.edu/Fissures/IfSeismogramDC/LocalSeismogram:1.0"])
omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/LocalSeismogram:1.0"] = _0_Fissures.IfSeismogramDC._d_LocalSeismogram
_0_Fissures.IfSeismogramDC.LocalSeismogram = omniORB.newEmptyClass()

class LocalSeismogram (_0_Fissures.IfSeismogramDC.SeismogramAttr, _0_Fissures__POA.IfTimeSeries.TimeSeriesAccess, _0_Fissures__POA.IfTimeSeries.TimeSeriesAdmin):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/LocalSeismogram:1.0"

    def __init__(self, *args, **kwargs):
        if args:
            if len(args) != 11:
                raise TypeError("LocalSeismogram() takes 11 arguments "
                                "(%d given)" % len(args))
            self.id = args[0]
            self.properties = args[1]
            self.begin_time = args[2]
            self.num_points = args[3]
            self.sampling_info = args[4]
            self.y_unit = args[5]
            self.channel_id = args[6]
            self.parm_ids = args[7]
            self.time_corrections = args[8]
            self.sample_rate_history = args[9]
            self.data = args[10]
        if kwargs:
            self.__dict__.update(kwargs)


    _omni_op_d = {}
    _omni_op_d.update(_0_Fissures__POA.IfTimeSeries.TimeSeriesAccess._omni_op_d)
    _omni_op_d.update(_0_Fissures__POA.IfTimeSeries.TimeSeriesAdmin._omni_op_d)

LocalSeismogram._omni_skeleton = LocalSeismogram


# LocalSeismogram object reference
class _objref_LocalSeismogram (_0_Fissures.IfTimeSeries._objref_TimeSeriesAccess, _0_Fissures.IfTimeSeries._objref_TimeSeriesAdmin):
    _NP_RepositoryId = LocalSeismogram._NP_RepositoryId

    def __init__(self):
        _0_Fissures.IfTimeSeries._objref_TimeSeriesAccess.__init__(self)
        _0_Fissures.IfTimeSeries._objref_TimeSeriesAdmin.__init__(self)

    __methods__ = _0_Fissures.IfTimeSeries._objref_TimeSeriesAccess.__methods__ + _0_Fissures.IfTimeSeries._objref_TimeSeriesAdmin.__methods__

omniORB.registerObjref(LocalSeismogram._NP_RepositoryId, _objref_LocalSeismogram)
_0_Fissures.IfSeismogramDC._objref_LocalSeismogram = _objref_LocalSeismogram
del _objref_LocalSeismogram
_0_Fissures.IfSeismogramDC.LocalSeismogram = LocalSeismogram
_0_Fissures.IfSeismogramDC._d_LocalSeismogram  = (omniORB.tcInternal.tv_value, LocalSeismogram, LocalSeismogram._NP_RepositoryId, "LocalSeismogram", _0_CORBA.VM_NONE, None, _0_Fissures.IfSeismogramDC._d_SeismogramAttr, "data", omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/TimeSeriesDataSel:1.0"], _0_CORBA.PUBLIC_MEMBER)
_0_Fissures.IfSeismogramDC._tc_LocalSeismogram = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._d_LocalSeismogram)
omniORB.registerType(LocalSeismogram._NP_RepositoryId, _0_Fissures.IfSeismogramDC._d_LocalSeismogram, _0_Fissures.IfSeismogramDC._tc_LocalSeismogram)
del LocalSeismogram


# typedef ... LocalSeismogramSeq
class LocalSeismogramSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/LocalSeismogramSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramDC.LocalSeismogramSeq = LocalSeismogramSeq
_0_Fissures.IfSeismogramDC._d_LocalSeismogramSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/LocalSeismogram:1.0"], 0)
_0_Fissures.IfSeismogramDC._ad_LocalSeismogramSeq = (omniORB.tcInternal.tv_alias, LocalSeismogramSeq._NP_RepositoryId, "LocalSeismogramSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/LocalSeismogram:1.0"], 0))
_0_Fissures.IfSeismogramDC._tc_LocalSeismogramSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_LocalSeismogramSeq)
omniORB.registerType(LocalSeismogramSeq._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_LocalSeismogramSeq, _0_Fissures.IfSeismogramDC._tc_LocalSeismogramSeq)
del LocalSeismogramSeq

# struct VectorComponent
_0_Fissures.IfSeismogramDC.VectorComponent = omniORB.newEmptyClass()
class VectorComponent (omniORB.StructBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/VectorComponent:1.0"

    def __init__(self, channel, data):
        self.channel = channel
        self.data = data

_0_Fissures.IfSeismogramDC.VectorComponent = VectorComponent
_0_Fissures.IfSeismogramDC._d_VectorComponent  = (omniORB.tcInternal.tv_struct, VectorComponent, VectorComponent._NP_RepositoryId, "VectorComponent", "channel", omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/ChannelId:1.0"], "data", omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/TimeSeriesDataSel:1.0"])
_0_Fissures.IfSeismogramDC._tc_VectorComponent = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._d_VectorComponent)
omniORB.registerType(VectorComponent._NP_RepositoryId, _0_Fissures.IfSeismogramDC._d_VectorComponent, _0_Fissures.IfSeismogramDC._tc_VectorComponent)
del VectorComponent

# typedef ... VectorComponentSeq
class VectorComponentSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/VectorComponentSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramDC.VectorComponentSeq = VectorComponentSeq
_0_Fissures.IfSeismogramDC._d_VectorComponentSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/VectorComponent:1.0"], 3)
_0_Fissures.IfSeismogramDC._ad_VectorComponentSeq = (omniORB.tcInternal.tv_alias, VectorComponentSeq._NP_RepositoryId, "VectorComponentSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/VectorComponent:1.0"], 3))
_0_Fissures.IfSeismogramDC._tc_VectorComponentSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_VectorComponentSeq)
omniORB.registerType(VectorComponentSeq._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_VectorComponentSeq, _0_Fissures.IfSeismogramDC._tc_VectorComponentSeq)
del VectorComponentSeq

# valuetype LocalMotionVector
_0_Fissures.IfSeismogramDC._d_LocalMotionVector = (omniORB.tcInternal.tv__indirect, ["IDL:iris.edu/Fissures/IfSeismogramDC/LocalMotionVector:1.0"])
omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/LocalMotionVector:1.0"] = _0_Fissures.IfSeismogramDC._d_LocalMotionVector
_0_Fissures.IfSeismogramDC.LocalMotionVector = omniORB.newEmptyClass()

class LocalMotionVector (_0_Fissures.IfSeismogramDC.MotionVectorAttr):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/LocalMotionVector:1.0"

    def __init__(self, *args, **kwargs):
        if args:
            if len(args) != 11:
                raise TypeError("LocalMotionVector() takes 11 arguments "
                                "(%d given)" % len(args))
            self.id = args[0]
            self.properties = args[1]
            self.begin_time = args[2]
            self.num_points = args[3]
            self.sampling_info = args[4]
            self.y_unit = args[5]
            self.channel_group = args[6]
            self.parm_ids = args[7]
            self.time_corrections = args[8]
            self.sample_rate_history = args[9]
            self.data = args[10]
        if kwargs:
            self.__dict__.update(kwargs)

_0_Fissures.IfSeismogramDC.LocalMotionVector = LocalMotionVector
_0_Fissures.IfSeismogramDC._d_LocalMotionVector  = (omniORB.tcInternal.tv_value, LocalMotionVector, LocalMotionVector._NP_RepositoryId, "LocalMotionVector", _0_CORBA.VM_NONE, None, _0_Fissures.IfSeismogramDC._d_MotionVectorAttr, "data", omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/VectorComponentSeq:1.0"], _0_CORBA.PUBLIC_MEMBER)
_0_Fissures.IfSeismogramDC._tc_LocalMotionVector = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._d_LocalMotionVector)
omniORB.registerType(LocalMotionVector._NP_RepositoryId, _0_Fissures.IfSeismogramDC._d_LocalMotionVector, _0_Fissures.IfSeismogramDC._tc_LocalMotionVector)
del LocalMotionVector


# typedef ... LocalMotionVectorSeq
class LocalMotionVectorSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/LocalMotionVectorSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramDC.LocalMotionVectorSeq = LocalMotionVectorSeq
_0_Fissures.IfSeismogramDC._d_LocalMotionVectorSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/LocalMotionVector:1.0"], 0)
_0_Fissures.IfSeismogramDC._ad_LocalMotionVectorSeq = (omniORB.tcInternal.tv_alias, LocalMotionVectorSeq._NP_RepositoryId, "LocalMotionVectorSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/LocalMotionVector:1.0"], 0))
_0_Fissures.IfSeismogramDC._tc_LocalMotionVectorSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_LocalMotionVectorSeq)
omniORB.registerType(LocalMotionVectorSeq._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_LocalMotionVectorSeq, _0_Fissures.IfSeismogramDC._tc_LocalMotionVectorSeq)
del LocalMotionVectorSeq

# struct RequestFilter
_0_Fissures.IfSeismogramDC.RequestFilter = omniORB.newEmptyClass()
class RequestFilter (omniORB.StructBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/RequestFilter:1.0"

    def __init__(self, channel_id, start_time, end_time):
        self.channel_id = channel_id
        self.start_time = start_time
        self.end_time = end_time

_0_Fissures.IfSeismogramDC.RequestFilter = RequestFilter
_0_Fissures.IfSeismogramDC._d_RequestFilter  = (omniORB.tcInternal.tv_struct, RequestFilter, RequestFilter._NP_RepositoryId, "RequestFilter", "channel_id", omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/ChannelId:1.0"], "start_time", omniORB.typeMapping["IDL:iris.edu/Fissures/Time:1.0"], "end_time", omniORB.typeMapping["IDL:iris.edu/Fissures/Time:1.0"])
_0_Fissures.IfSeismogramDC._tc_RequestFilter = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._d_RequestFilter)
omniORB.registerType(RequestFilter._NP_RepositoryId, _0_Fissures.IfSeismogramDC._d_RequestFilter, _0_Fissures.IfSeismogramDC._tc_RequestFilter)
del RequestFilter

# typedef ... RequestFilterSeq
class RequestFilterSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/RequestFilterSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramDC.RequestFilterSeq = RequestFilterSeq
_0_Fissures.IfSeismogramDC._d_RequestFilterSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/RequestFilter:1.0"], 0)
_0_Fissures.IfSeismogramDC._ad_RequestFilterSeq = (omniORB.tcInternal.tv_alias, RequestFilterSeq._NP_RepositoryId, "RequestFilterSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/RequestFilter:1.0"], 0))
_0_Fissures.IfSeismogramDC._tc_RequestFilterSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_RequestFilterSeq)
omniORB.registerType(RequestFilterSeq._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_RequestFilterSeq, _0_Fissures.IfSeismogramDC._tc_RequestFilterSeq)
del RequestFilterSeq

# struct GroupRequest
_0_Fissures.IfSeismogramDC.GroupRequest = omniORB.newEmptyClass()
class GroupRequest (omniORB.StructBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/GroupRequest:1.0"

    def __init__(self, channels, start_time, end_time):
        self.channels = channels
        self.start_time = start_time
        self.end_time = end_time

_0_Fissures.IfSeismogramDC.GroupRequest = GroupRequest
_0_Fissures.IfSeismogramDC._d_GroupRequest  = (omniORB.tcInternal.tv_struct, GroupRequest, GroupRequest._NP_RepositoryId, "GroupRequest", "channels", omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/ChannelGroup:1.0"], "start_time", omniORB.typeMapping["IDL:iris.edu/Fissures/Time:1.0"], "end_time", omniORB.typeMapping["IDL:iris.edu/Fissures/Time:1.0"])
_0_Fissures.IfSeismogramDC._tc_GroupRequest = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._d_GroupRequest)
omniORB.registerType(GroupRequest._NP_RepositoryId, _0_Fissures.IfSeismogramDC._d_GroupRequest, _0_Fissures.IfSeismogramDC._tc_GroupRequest)
del GroupRequest

# typedef ... GroupRequestSeq
class GroupRequestSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/GroupRequestSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramDC.GroupRequestSeq = GroupRequestSeq
_0_Fissures.IfSeismogramDC._d_GroupRequestSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/GroupRequest:1.0"], 0)
_0_Fissures.IfSeismogramDC._ad_GroupRequestSeq = (omniORB.tcInternal.tv_alias, GroupRequestSeq._NP_RepositoryId, "GroupRequestSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/GroupRequest:1.0"], 0))
_0_Fissures.IfSeismogramDC._tc_GroupRequestSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_GroupRequestSeq)
omniORB.registerType(GroupRequestSeq._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_GroupRequestSeq, _0_Fissures.IfSeismogramDC._tc_GroupRequestSeq)
del GroupRequestSeq

# typedef ... ErrorCode
class ErrorCode:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/ErrorCode:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramDC.ErrorCode = ErrorCode
_0_Fissures.IfSeismogramDC._d_ErrorCode  = omniORB.typeMapping["IDL:iris.edu/Fissures/ErrorCode:1.0"]
_0_Fissures.IfSeismogramDC._ad_ErrorCode = (omniORB.tcInternal.tv_alias, ErrorCode._NP_RepositoryId, "ErrorCode", omniORB.typeCodeMapping["IDL:iris.edu/Fissures/ErrorCode:1.0"]._d)
_0_Fissures.IfSeismogramDC._tc_ErrorCode = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_ErrorCode)
omniORB.registerType(ErrorCode._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_ErrorCode, _0_Fissures.IfSeismogramDC._tc_ErrorCode)
del ErrorCode

# typedef ... Error
class Error (_0_Fissures.Error):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/Error:1.0"

_0_Fissures.IfSeismogramDC.Error = Error
_0_Fissures.IfSeismogramDC._d_Error  = omniORB.typeMapping["IDL:iris.edu/Fissures/Error:1.0"]
_0_Fissures.IfSeismogramDC._ad_Error = (omniORB.tcInternal.tv_alias, Error._NP_RepositoryId, "Error", omniORB.typeMapping["IDL:iris.edu/Fissures/Error:1.0"])
_0_Fissures.IfSeismogramDC._tc_Error = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_Error)
omniORB.registerType(Error._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_Error, _0_Fissures.IfSeismogramDC._tc_Error)
del Error
_0_Fissures.IfSeismogramDC.INVALID_REQUEST = 2
_0_Fissures.IfSeismogramDC.SERVER_BUSY = 3

# typedef ... RequestStatus
class RequestStatus:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramDC/RequestStatus:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramDC.RequestStatus = RequestStatus
_0_Fissures.IfSeismogramDC._d_RequestStatus  = (omniORB.tcInternal.tv_string,0)
_0_Fissures.IfSeismogramDC._ad_RequestStatus = (omniORB.tcInternal.tv_alias, RequestStatus._NP_RepositoryId, "RequestStatus", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfSeismogramDC._tc_RequestStatus = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._ad_RequestStatus)
omniORB.registerType(RequestStatus._NP_RepositoryId, _0_Fissures.IfSeismogramDC._ad_RequestStatus, _0_Fissures.IfSeismogramDC._tc_RequestStatus)
del RequestStatus

# interface DataCenter
_0_Fissures.IfSeismogramDC._d_DataCenter = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfSeismogramDC/DataCenter:1.0", "DataCenter")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/DataCenter:1.0"] = _0_Fissures.IfSeismogramDC._d_DataCenter
_0_Fissures.IfSeismogramDC.DataCenter = omniORB.newEmptyClass()
class DataCenter :
    _NP_RepositoryId = _0_Fissures.IfSeismogramDC._d_DataCenter[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfSeismogramDC.DataCenter = DataCenter
_0_Fissures.IfSeismogramDC._tc_DataCenter = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._d_DataCenter)
omniORB.registerType(DataCenter._NP_RepositoryId, _0_Fissures.IfSeismogramDC._d_DataCenter, _0_Fissures.IfSeismogramDC._tc_DataCenter)

# DataCenter operations and attributes
DataCenter._d_available_data = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/RequestFilterSeq:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/RequestFilterSeq:1.0"], ), None)
DataCenter._d_request_seismograms = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/RequestFilterSeq:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/DataCenterCallBack:1.0"], omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:iris.edu/Fissures/Time:1.0"]), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/ServerRequestId:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException})
DataCenter._d_retrieve_seismograms = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/RequestFilterSeq:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/LocalSeismogramSeq:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException}, None, 1)
DataCenter._d_queue_seismograms = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/RequestFilterSeq:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/ServerRequestId:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException})
DataCenter._d_retrieve_queue = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/ServerRequestId:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/LocalSeismogramSeq:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException}, None, 1)
DataCenter._d_cancel_request = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/ServerRequestId:1.0"], ), (), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException})
DataCenter._d_request_status = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/ServerRequestId:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/RequestStatus:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException})

# DataCenter object reference
class _objref_DataCenter (CORBA.Object):
    _NP_RepositoryId = DataCenter._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def available_data(self, *args):
        return _omnipy.invoke(self, "available_data", _0_Fissures.IfSeismogramDC.DataCenter._d_available_data, args)

    def request_seismograms(self, *args):
        return _omnipy.invoke(self, "request_seismograms", _0_Fissures.IfSeismogramDC.DataCenter._d_request_seismograms, args)

    def retrieve_seismograms(self, *args):
        return _omnipy.invoke(self, "retrieve_seismograms", _0_Fissures.IfSeismogramDC.DataCenter._d_retrieve_seismograms, args)

    def queue_seismograms(self, *args):
        return _omnipy.invoke(self, "queue_seismograms", _0_Fissures.IfSeismogramDC.DataCenter._d_queue_seismograms, args)

    def retrieve_queue(self, *args):
        return _omnipy.invoke(self, "retrieve_queue", _0_Fissures.IfSeismogramDC.DataCenter._d_retrieve_queue, args)

    def cancel_request(self, *args):
        return _omnipy.invoke(self, "cancel_request", _0_Fissures.IfSeismogramDC.DataCenter._d_cancel_request, args)

    def request_status(self, *args):
        return _omnipy.invoke(self, "request_status", _0_Fissures.IfSeismogramDC.DataCenter._d_request_status, args)

    __methods__ = ["available_data", "request_seismograms", "retrieve_seismograms", "queue_seismograms", "retrieve_queue", "cancel_request", "request_status"] + CORBA.Object.__methods__

omniORB.registerObjref(DataCenter._NP_RepositoryId, _objref_DataCenter)
_0_Fissures.IfSeismogramDC._objref_DataCenter = _objref_DataCenter
del DataCenter, _objref_DataCenter

# DataCenter skeleton
__name__ = "Fissures__POA.IfSeismogramDC"
class DataCenter (PortableServer.Servant):
    _NP_RepositoryId = _0_Fissures.IfSeismogramDC.DataCenter._NP_RepositoryId


    _omni_op_d = {"available_data": _0_Fissures.IfSeismogramDC.DataCenter._d_available_data, "request_seismograms": _0_Fissures.IfSeismogramDC.DataCenter._d_request_seismograms, "retrieve_seismograms": _0_Fissures.IfSeismogramDC.DataCenter._d_retrieve_seismograms, "queue_seismograms": _0_Fissures.IfSeismogramDC.DataCenter._d_queue_seismograms, "retrieve_queue": _0_Fissures.IfSeismogramDC.DataCenter._d_retrieve_queue, "cancel_request": _0_Fissures.IfSeismogramDC.DataCenter._d_cancel_request, "request_status": _0_Fissures.IfSeismogramDC.DataCenter._d_request_status}

DataCenter._omni_skeleton = DataCenter
_0_Fissures__POA.IfSeismogramDC.DataCenter = DataCenter
omniORB.registerSkeleton(DataCenter._NP_RepositoryId, DataCenter)
del DataCenter
__name__ = "Fissures.IfSeismogramDC"

# interface GroupingDataCenter
_0_Fissures.IfSeismogramDC._d_GroupingDataCenter = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfSeismogramDC/GroupingDataCenter:1.0", "GroupingDataCenter")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/GroupingDataCenter:1.0"] = _0_Fissures.IfSeismogramDC._d_GroupingDataCenter
_0_Fissures.IfSeismogramDC.GroupingDataCenter = omniORB.newEmptyClass()
class GroupingDataCenter (_0_Fissures.IfSeismogramDC.DataCenter):
    _NP_RepositoryId = _0_Fissures.IfSeismogramDC._d_GroupingDataCenter[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfSeismogramDC.GroupingDataCenter = GroupingDataCenter
_0_Fissures.IfSeismogramDC._tc_GroupingDataCenter = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._d_GroupingDataCenter)
omniORB.registerType(GroupingDataCenter._NP_RepositoryId, _0_Fissures.IfSeismogramDC._d_GroupingDataCenter, _0_Fissures.IfSeismogramDC._tc_GroupingDataCenter)

# GroupingDataCenter operations and attributes
GroupingDataCenter._d_request_groups = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/GroupRequestSeq:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/DataCenterCallBack:1.0"]), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/ServerRequestId:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException})
GroupingDataCenter._d_retrieve_groups = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/GroupRequestSeq:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/LocalMotionVectorSeq:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException}, None, 1)
GroupingDataCenter._d_queue_groups = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/GroupRequestSeq:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/ServerRequestId:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException})
GroupingDataCenter._d_retrieve_group_queue = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/ServerRequestId:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/LocalMotionVectorSeq:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException}, None, 1)

# GroupingDataCenter object reference
class _objref_GroupingDataCenter (_0_Fissures.IfSeismogramDC._objref_DataCenter):
    _NP_RepositoryId = GroupingDataCenter._NP_RepositoryId

    def __init__(self):
        _0_Fissures.IfSeismogramDC._objref_DataCenter.__init__(self)

    def request_groups(self, *args):
        return _omnipy.invoke(self, "request_groups", _0_Fissures.IfSeismogramDC.GroupingDataCenter._d_request_groups, args)

    def retrieve_groups(self, *args):
        return _omnipy.invoke(self, "retrieve_groups", _0_Fissures.IfSeismogramDC.GroupingDataCenter._d_retrieve_groups, args)

    def queue_groups(self, *args):
        return _omnipy.invoke(self, "queue_groups", _0_Fissures.IfSeismogramDC.GroupingDataCenter._d_queue_groups, args)

    def retrieve_group_queue(self, *args):
        return _omnipy.invoke(self, "retrieve_group_queue", _0_Fissures.IfSeismogramDC.GroupingDataCenter._d_retrieve_group_queue, args)

    __methods__ = ["request_groups", "retrieve_groups", "queue_groups", "retrieve_group_queue"] + _0_Fissures.IfSeismogramDC._objref_DataCenter.__methods__

omniORB.registerObjref(GroupingDataCenter._NP_RepositoryId, _objref_GroupingDataCenter)
_0_Fissures.IfSeismogramDC._objref_GroupingDataCenter = _objref_GroupingDataCenter
del GroupingDataCenter, _objref_GroupingDataCenter

# GroupingDataCenter skeleton
__name__ = "Fissures__POA.IfSeismogramDC"
class GroupingDataCenter (_0_Fissures__POA.IfSeismogramDC.DataCenter):
    _NP_RepositoryId = _0_Fissures.IfSeismogramDC.GroupingDataCenter._NP_RepositoryId


    _omni_op_d = {"request_groups": _0_Fissures.IfSeismogramDC.GroupingDataCenter._d_request_groups, "retrieve_groups": _0_Fissures.IfSeismogramDC.GroupingDataCenter._d_retrieve_groups, "queue_groups": _0_Fissures.IfSeismogramDC.GroupingDataCenter._d_queue_groups, "retrieve_group_queue": _0_Fissures.IfSeismogramDC.GroupingDataCenter._d_retrieve_group_queue}
    _omni_op_d.update(_0_Fissures__POA.IfSeismogramDC.DataCenter._omni_op_d)

GroupingDataCenter._omni_skeleton = GroupingDataCenter
_0_Fissures__POA.IfSeismogramDC.GroupingDataCenter = GroupingDataCenter
omniORB.registerSkeleton(GroupingDataCenter._NP_RepositoryId, GroupingDataCenter)
del GroupingDataCenter
__name__ = "Fissures.IfSeismogramDC"

# interface DataCenterCallBack
_0_Fissures.IfSeismogramDC._d_DataCenterCallBack = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfSeismogramDC/DataCenterCallBack:1.0", "DataCenterCallBack")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/DataCenterCallBack:1.0"] = _0_Fissures.IfSeismogramDC._d_DataCenterCallBack
_0_Fissures.IfSeismogramDC.DataCenterCallBack = omniORB.newEmptyClass()
class DataCenterCallBack :
    _NP_RepositoryId = _0_Fissures.IfSeismogramDC._d_DataCenterCallBack[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfSeismogramDC.DataCenterCallBack = DataCenterCallBack
_0_Fissures.IfSeismogramDC._tc_DataCenterCallBack = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramDC._d_DataCenterCallBack)
omniORB.registerType(DataCenterCallBack._NP_RepositoryId, _0_Fissures.IfSeismogramDC._d_DataCenterCallBack, _0_Fissures.IfSeismogramDC._tc_DataCenterCallBack)

# DataCenterCallBack operations and attributes
DataCenterCallBack._d_return_seismograms = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/ServerRequestId:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/LocalSeismogramSeq:1.0"]), (), None, None, 1)
DataCenterCallBack._d_return_group = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/ServerRequestId:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/LocalMotionVectorSeq:1.0"]), (), None, None, 1)
DataCenterCallBack._d_return_error = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/ServerRequestId:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/Error:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/RequestFilterSeq:1.0"]), (), None)
DataCenterCallBack._d_finished = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/ServerRequestId:1.0"], ), (), None)
DataCenterCallBack._d_canceled = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/ServerRequestId:1.0"], ), (), None)

# DataCenterCallBack object reference
class _objref_DataCenterCallBack (CORBA.Object):
    _NP_RepositoryId = DataCenterCallBack._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def return_seismograms(self, *args):
        return _omnipy.invoke(self, "return_seismograms", _0_Fissures.IfSeismogramDC.DataCenterCallBack._d_return_seismograms, args)

    def return_group(self, *args):
        return _omnipy.invoke(self, "return_group", _0_Fissures.IfSeismogramDC.DataCenterCallBack._d_return_group, args)

    def return_error(self, *args):
        return _omnipy.invoke(self, "return_error", _0_Fissures.IfSeismogramDC.DataCenterCallBack._d_return_error, args)

    def finished(self, *args):
        return _omnipy.invoke(self, "finished", _0_Fissures.IfSeismogramDC.DataCenterCallBack._d_finished, args)

    def canceled(self, *args):
        return _omnipy.invoke(self, "canceled", _0_Fissures.IfSeismogramDC.DataCenterCallBack._d_canceled, args)

    __methods__ = ["return_seismograms", "return_group", "return_error", "finished", "canceled"] + CORBA.Object.__methods__

omniORB.registerObjref(DataCenterCallBack._NP_RepositoryId, _objref_DataCenterCallBack)
_0_Fissures.IfSeismogramDC._objref_DataCenterCallBack = _objref_DataCenterCallBack
del DataCenterCallBack, _objref_DataCenterCallBack

# DataCenterCallBack skeleton
__name__ = "Fissures__POA.IfSeismogramDC"
class DataCenterCallBack (PortableServer.Servant):
    _NP_RepositoryId = _0_Fissures.IfSeismogramDC.DataCenterCallBack._NP_RepositoryId


    _omni_op_d = {"return_seismograms": _0_Fissures.IfSeismogramDC.DataCenterCallBack._d_return_seismograms, "return_group": _0_Fissures.IfSeismogramDC.DataCenterCallBack._d_return_group, "return_error": _0_Fissures.IfSeismogramDC.DataCenterCallBack._d_return_error, "finished": _0_Fissures.IfSeismogramDC.DataCenterCallBack._d_finished, "canceled": _0_Fissures.IfSeismogramDC.DataCenterCallBack._d_canceled}

DataCenterCallBack._omni_skeleton = DataCenterCallBack
_0_Fissures__POA.IfSeismogramDC.DataCenterCallBack = DataCenterCallBack
omniORB.registerSkeleton(DataCenterCallBack._NP_RepositoryId, DataCenterCallBack)
del DataCenterCallBack
__name__ = "Fissures.IfSeismogramDC"

#
# End of module "Fissures.IfSeismogramDC"
#
__name__ = "Fissures"


#
# End of module "Fissures"
#
__name__ = "IfSeismogramDC_idl"

_exported_modules = ( "Fissures", "Fissures.IfSeismogramDC")

# The end.
