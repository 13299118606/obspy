# Python stubs generated by omniidl from IfRealTimeCollector.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "Fissures.idl"
import Fissures_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
# #include "IfNetwork.idl"
import IfNetwork_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfNetwork = omniORB.openModule("Fissures.IfNetwork")
_0_Fissures__POA.IfNetwork = omniORB.openModule("Fissures__POA.IfNetwork")
# #include "IfTimeSeries.idl"
import IfTimeSeries_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfTimeSeries = omniORB.openModule("Fissures.IfTimeSeries")
_0_Fissures__POA.IfTimeSeries = omniORB.openModule("Fissures__POA.IfTimeSeries")

#
# Start of module "Fissures"
#
__name__ = "Fissures"
_0_Fissures = omniORB.openModule("Fissures", r"IfRealTimeCollector.idl")
_0_Fissures__POA = omniORB.openModule("Fissures__POA", r"IfRealTimeCollector.idl")


#
# Start of module "Fissures.IfRealTimeCollector"
#
__name__ = "Fissures.IfRealTimeCollector"
_0_Fissures.IfRealTimeCollector = omniORB.openModule("Fissures.IfRealTimeCollector", r"IfRealTimeCollector.idl")
_0_Fissures__POA.IfRealTimeCollector = omniORB.openModule("Fissures__POA.IfRealTimeCollector", r"IfRealTimeCollector.idl")

_0_Fissures.IfRealTimeCollector.VERSION = "1.0"

# interface RealTimeCollector;
_0_Fissures.IfRealTimeCollector._d_RealTimeCollector = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfRealTimeCollector/RealTimeCollector:1.0", "RealTimeCollector")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/RealTimeCollector:1.0"] = _0_Fissures.IfRealTimeCollector._d_RealTimeCollector

# typedef ... RealTimeCollectorSeq
class RealTimeCollectorSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfRealTimeCollector/RealTimeCollectorSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfRealTimeCollector.RealTimeCollectorSeq = RealTimeCollectorSeq
_0_Fissures.IfRealTimeCollector._d_RealTimeCollectorSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/RealTimeCollector:1.0"], 0)
_0_Fissures.IfRealTimeCollector._ad_RealTimeCollectorSeq = (omniORB.tcInternal.tv_alias, RealTimeCollectorSeq._NP_RepositoryId, "RealTimeCollectorSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/RealTimeCollector:1.0"], 0))
_0_Fissures.IfRealTimeCollector._tc_RealTimeCollectorSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfRealTimeCollector._ad_RealTimeCollectorSeq)
omniORB.registerType(RealTimeCollectorSeq._NP_RepositoryId, _0_Fissures.IfRealTimeCollector._ad_RealTimeCollectorSeq, _0_Fissures.IfRealTimeCollector._tc_RealTimeCollectorSeq)
del RealTimeCollectorSeq

# typedef ... CollectorStringRefSeq
class CollectorStringRefSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfRealTimeCollector/CollectorStringRefSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfRealTimeCollector.CollectorStringRefSeq = CollectorStringRefSeq
_0_Fissures.IfRealTimeCollector._d_CollectorStringRefSeq  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0_Fissures.IfRealTimeCollector._ad_CollectorStringRefSeq = (omniORB.tcInternal.tv_alias, CollectorStringRefSeq._NP_RepositoryId, "CollectorStringRefSeq", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_Fissures.IfRealTimeCollector._tc_CollectorStringRefSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfRealTimeCollector._ad_CollectorStringRefSeq)
omniORB.registerType(CollectorStringRefSeq._NP_RepositoryId, _0_Fissures.IfRealTimeCollector._ad_CollectorStringRefSeq, _0_Fissures.IfRealTimeCollector._tc_CollectorStringRefSeq)
del CollectorStringRefSeq

# typedef ... SohStringRefSeq
class SohStringRefSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfRealTimeCollector/SohStringRefSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfRealTimeCollector.SohStringRefSeq = SohStringRefSeq
_0_Fissures.IfRealTimeCollector._d_SohStringRefSeq  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0_Fissures.IfRealTimeCollector._ad_SohStringRefSeq = (omniORB.tcInternal.tv_alias, SohStringRefSeq._NP_RepositoryId, "SohStringRefSeq", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_Fissures.IfRealTimeCollector._tc_SohStringRefSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfRealTimeCollector._ad_SohStringRefSeq)
omniORB.registerType(SohStringRefSeq._NP_RepositoryId, _0_Fissures.IfRealTimeCollector._ad_SohStringRefSeq, _0_Fissures.IfRealTimeCollector._tc_SohStringRefSeq)
del SohStringRefSeq

# typedef ... ChannelId
class ChannelId (_0_Fissures.IfNetwork.ChannelId):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfRealTimeCollector/ChannelId:1.0"

_0_Fissures.IfRealTimeCollector.ChannelId = ChannelId
_0_Fissures.IfRealTimeCollector._d_ChannelId  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfNetwork/ChannelId:1.0"]
_0_Fissures.IfRealTimeCollector._ad_ChannelId = (omniORB.tcInternal.tv_alias, ChannelId._NP_RepositoryId, "ChannelId", omniORB.typeMapping["IDL:iris.edu/Fissures/IfNetwork/ChannelId:1.0"])
_0_Fissures.IfRealTimeCollector._tc_ChannelId = omniORB.tcInternal.createTypeCode(_0_Fissures.IfRealTimeCollector._ad_ChannelId)
omniORB.registerType(ChannelId._NP_RepositoryId, _0_Fissures.IfRealTimeCollector._ad_ChannelId, _0_Fissures.IfRealTimeCollector._tc_ChannelId)
del ChannelId

# typedef ... ChannelIdSeq
class ChannelIdSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfRealTimeCollector/ChannelIdSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfRealTimeCollector.ChannelIdSeq = ChannelIdSeq
_0_Fissures.IfRealTimeCollector._d_ChannelIdSeq  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfNetwork/ChannelIdSeq:1.0"]
_0_Fissures.IfRealTimeCollector._ad_ChannelIdSeq = (omniORB.tcInternal.tv_alias, ChannelIdSeq._NP_RepositoryId, "ChannelIdSeq", omniORB.typeCodeMapping["IDL:iris.edu/Fissures/IfNetwork/ChannelIdSeq:1.0"]._d)
_0_Fissures.IfRealTimeCollector._tc_ChannelIdSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfRealTimeCollector._ad_ChannelIdSeq)
omniORB.registerType(ChannelIdSeq._NP_RepositoryId, _0_Fissures.IfRealTimeCollector._ad_ChannelIdSeq, _0_Fissures.IfRealTimeCollector._tc_ChannelIdSeq)
del ChannelIdSeq

# typedef ... TimeSeriesDataSel
class TimeSeriesDataSel (_0_Fissures.IfTimeSeries.TimeSeriesDataSel):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfRealTimeCollector/TimeSeriesDataSel:1.0"

_0_Fissures.IfRealTimeCollector.TimeSeriesDataSel = TimeSeriesDataSel
_0_Fissures.IfRealTimeCollector._d_TimeSeriesDataSel  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfTimeSeries/TimeSeriesDataSel:1.0"]
_0_Fissures.IfRealTimeCollector._ad_TimeSeriesDataSel = (omniORB.tcInternal.tv_alias, TimeSeriesDataSel._NP_RepositoryId, "TimeSeriesDataSel", omniORB.typeMapping["IDL:iris.edu/Fissures/IfTimeSeries/TimeSeriesDataSel:1.0"])
_0_Fissures.IfRealTimeCollector._tc_TimeSeriesDataSel = omniORB.tcInternal.createTypeCode(_0_Fissures.IfRealTimeCollector._ad_TimeSeriesDataSel)
omniORB.registerType(TimeSeriesDataSel._NP_RepositoryId, _0_Fissures.IfRealTimeCollector._ad_TimeSeriesDataSel, _0_Fissures.IfRealTimeCollector._tc_TimeSeriesDataSel)
del TimeSeriesDataSel

# typedef ... LongSeq
class LongSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfRealTimeCollector/LongSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfRealTimeCollector.LongSeq = LongSeq
_0_Fissures.IfRealTimeCollector._d_LongSeq  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfTimeSeries/LongSeq:1.0"]
_0_Fissures.IfRealTimeCollector._ad_LongSeq = (omniORB.tcInternal.tv_alias, LongSeq._NP_RepositoryId, "LongSeq", omniORB.typeCodeMapping["IDL:iris.edu/Fissures/IfTimeSeries/LongSeq:1.0"]._d)
_0_Fissures.IfRealTimeCollector._tc_LongSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfRealTimeCollector._ad_LongSeq)
omniORB.registerType(LongSeq._NP_RepositoryId, _0_Fissures.IfRealTimeCollector._ad_LongSeq, _0_Fissures.IfRealTimeCollector._tc_LongSeq)
del LongSeq

# struct DasError
_0_Fissures.IfRealTimeCollector.DasError = omniORB.newEmptyClass()
class DasError (omniORB.StructBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfRealTimeCollector/DasError:1.0"

    def __init__(self, error_num, error_msg):
        self.error_num = error_num
        self.error_msg = error_msg

_0_Fissures.IfRealTimeCollector.DasError = DasError
_0_Fissures.IfRealTimeCollector._d_DasError  = (omniORB.tcInternal.tv_struct, DasError, DasError._NP_RepositoryId, "DasError", "error_num", (omniORB.tcInternal.tv_string,0), "error_msg", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfRealTimeCollector._tc_DasError = omniORB.tcInternal.createTypeCode(_0_Fissures.IfRealTimeCollector._d_DasError)
omniORB.registerType(DasError._NP_RepositoryId, _0_Fissures.IfRealTimeCollector._d_DasError, _0_Fissures.IfRealTimeCollector._tc_DasError)
del DasError

# struct DataChunk
_0_Fissures.IfRealTimeCollector.DataChunk = omniORB.newEmptyClass()
class DataChunk (omniORB.StructBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfRealTimeCollector/DataChunk:1.0"

    def __init__(self, seq_num, channel, begin_time, data, end_time):
        self.seq_num = seq_num
        self.channel = channel
        self.begin_time = begin_time
        self.data = data
        self.end_time = end_time

_0_Fissures.IfRealTimeCollector.DataChunk = DataChunk
_0_Fissures.IfRealTimeCollector._d_DataChunk  = (omniORB.tcInternal.tv_struct, DataChunk, DataChunk._NP_RepositoryId, "DataChunk", "seq_num", omniORB.tcInternal.tv_long, "channel", omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/ChannelId:1.0"], "begin_time", omniORB.typeMapping["IDL:iris.edu/Fissures/Time:1.0"], "data", omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/TimeSeriesDataSel:1.0"], "end_time", omniORB.typeMapping["IDL:iris.edu/Fissures/Time:1.0"])
_0_Fissures.IfRealTimeCollector._tc_DataChunk = omniORB.tcInternal.createTypeCode(_0_Fissures.IfRealTimeCollector._d_DataChunk)
omniORB.registerType(DataChunk._NP_RepositoryId, _0_Fissures.IfRealTimeCollector._d_DataChunk, _0_Fissures.IfRealTimeCollector._tc_DataChunk)
del DataChunk

# typedef ... DataChunkSeq
class DataChunkSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfRealTimeCollector/DataChunkSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfRealTimeCollector.DataChunkSeq = DataChunkSeq
_0_Fissures.IfRealTimeCollector._d_DataChunkSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/DataChunk:1.0"], 0)
_0_Fissures.IfRealTimeCollector._ad_DataChunkSeq = (omniORB.tcInternal.tv_alias, DataChunkSeq._NP_RepositoryId, "DataChunkSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/DataChunk:1.0"], 0))
_0_Fissures.IfRealTimeCollector._tc_DataChunkSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfRealTimeCollector._ad_DataChunkSeq)
omniORB.registerType(DataChunkSeq._NP_RepositoryId, _0_Fissures.IfRealTimeCollector._ad_DataChunkSeq, _0_Fissures.IfRealTimeCollector._tc_DataChunkSeq)
del DataChunkSeq

# struct CollectorConfiguration
_0_Fissures.IfRealTimeCollector.CollectorConfiguration = omniORB.newEmptyClass()
class CollectorConfiguration (omniORB.StructBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfRealTimeCollector/CollectorConfiguration:1.0"

    def __init__(self, a_channel, sampling_info):
        self.a_channel = a_channel
        self.sampling_info = sampling_info

_0_Fissures.IfRealTimeCollector.CollectorConfiguration = CollectorConfiguration
_0_Fissures.IfRealTimeCollector._d_CollectorConfiguration  = (omniORB.tcInternal.tv_struct, CollectorConfiguration, CollectorConfiguration._NP_RepositoryId, "CollectorConfiguration", "a_channel", omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/ChannelId:1.0"], "sampling_info", omniORB.typeMapping["IDL:iris.edu/Fissures/Sampling:1.0"])
_0_Fissures.IfRealTimeCollector._tc_CollectorConfiguration = omniORB.tcInternal.createTypeCode(_0_Fissures.IfRealTimeCollector._d_CollectorConfiguration)
omniORB.registerType(CollectorConfiguration._NP_RepositoryId, _0_Fissures.IfRealTimeCollector._d_CollectorConfiguration, _0_Fissures.IfRealTimeCollector._tc_CollectorConfiguration)
del CollectorConfiguration

# typedef ... CollectorConfigurationSeq
class CollectorConfigurationSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfRealTimeCollector/CollectorConfigurationSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfRealTimeCollector.CollectorConfigurationSeq = CollectorConfigurationSeq
_0_Fissures.IfRealTimeCollector._d_CollectorConfigurationSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/CollectorConfiguration:1.0"], 0)
_0_Fissures.IfRealTimeCollector._ad_CollectorConfigurationSeq = (omniORB.tcInternal.tv_alias, CollectorConfigurationSeq._NP_RepositoryId, "CollectorConfigurationSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/CollectorConfiguration:1.0"], 0))
_0_Fissures.IfRealTimeCollector._tc_CollectorConfigurationSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfRealTimeCollector._ad_CollectorConfigurationSeq)
omniORB.registerType(CollectorConfigurationSeq._NP_RepositoryId, _0_Fissures.IfRealTimeCollector._ad_CollectorConfigurationSeq, _0_Fissures.IfRealTimeCollector._tc_CollectorConfigurationSeq)
del CollectorConfigurationSeq

# exception ChunkOutOfOrder
_0_Fissures.IfRealTimeCollector.ChunkOutOfOrder = omniORB.newEmptyClass()
class ChunkOutOfOrder (CORBA.UserException):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfRealTimeCollector/ChunkOutOfOrder:1.0"

    def __init__(self, last_valid_seq_num, channels):
        CORBA.UserException.__init__(self, last_valid_seq_num, channels)
        self.last_valid_seq_num = last_valid_seq_num
        self.channels = channels

_0_Fissures.IfRealTimeCollector.ChunkOutOfOrder = ChunkOutOfOrder
_0_Fissures.IfRealTimeCollector._d_ChunkOutOfOrder  = (omniORB.tcInternal.tv_except, ChunkOutOfOrder, ChunkOutOfOrder._NP_RepositoryId, "ChunkOutOfOrder", "last_valid_seq_num", omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/LongSeq:1.0"], "channels", omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/ChannelIdSeq:1.0"])
_0_Fissures.IfRealTimeCollector._tc_ChunkOutOfOrder = omniORB.tcInternal.createTypeCode(_0_Fissures.IfRealTimeCollector._d_ChunkOutOfOrder)
omniORB.registerType(ChunkOutOfOrder._NP_RepositoryId, _0_Fissures.IfRealTimeCollector._d_ChunkOutOfOrder, _0_Fissures.IfRealTimeCollector._tc_ChunkOutOfOrder)
del ChunkOutOfOrder

# exception UnknownChannels
_0_Fissures.IfRealTimeCollector.UnknownChannels = omniORB.newEmptyClass()
class UnknownChannels (CORBA.UserException):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfRealTimeCollector/UnknownChannels:1.0"

    def __init__(self, channels):
        CORBA.UserException.__init__(self, channels)
        self.channels = channels

_0_Fissures.IfRealTimeCollector.UnknownChannels = UnknownChannels
_0_Fissures.IfRealTimeCollector._d_UnknownChannels  = (omniORB.tcInternal.tv_except, UnknownChannels, UnknownChannels._NP_RepositoryId, "UnknownChannels", "channels", omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/ChannelIdSeq:1.0"])
_0_Fissures.IfRealTimeCollector._tc_UnknownChannels = omniORB.tcInternal.createTypeCode(_0_Fissures.IfRealTimeCollector._d_UnknownChannels)
omniORB.registerType(UnknownChannels._NP_RepositoryId, _0_Fissures.IfRealTimeCollector._d_UnknownChannels, _0_Fissures.IfRealTimeCollector._tc_UnknownChannels)
del UnknownChannels

# exception CollectorMaxExceeded
_0_Fissures.IfRealTimeCollector.CollectorMaxExceeded = omniORB.newEmptyClass()
class CollectorMaxExceeded (CORBA.UserException):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfRealTimeCollector/CollectorMaxExceeded:1.0"

    def __init__(self, max):
        CORBA.UserException.__init__(self, max)
        self.max = max

_0_Fissures.IfRealTimeCollector.CollectorMaxExceeded = CollectorMaxExceeded
_0_Fissures.IfRealTimeCollector._d_CollectorMaxExceeded  = (omniORB.tcInternal.tv_except, CollectorMaxExceeded, CollectorMaxExceeded._NP_RepositoryId, "CollectorMaxExceeded", "max", omniORB.tcInternal.tv_long)
_0_Fissures.IfRealTimeCollector._tc_CollectorMaxExceeded = omniORB.tcInternal.createTypeCode(_0_Fissures.IfRealTimeCollector._d_CollectorMaxExceeded)
omniORB.registerType(CollectorMaxExceeded._NP_RepositoryId, _0_Fissures.IfRealTimeCollector._d_CollectorMaxExceeded, _0_Fissures.IfRealTimeCollector._tc_CollectorMaxExceeded)
del CollectorMaxExceeded

# interface RealTimeCollector
_0_Fissures.IfRealTimeCollector._d_RealTimeCollector = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfRealTimeCollector/RealTimeCollector:1.0", "RealTimeCollector")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/RealTimeCollector:1.0"] = _0_Fissures.IfRealTimeCollector._d_RealTimeCollector
_0_Fissures.IfRealTimeCollector.RealTimeCollector = omniORB.newEmptyClass()
class RealTimeCollector :
    _NP_RepositoryId = _0_Fissures.IfRealTimeCollector._d_RealTimeCollector[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfRealTimeCollector.RealTimeCollector = RealTimeCollector
_0_Fissures.IfRealTimeCollector._tc_RealTimeCollector = omniORB.tcInternal.createTypeCode(_0_Fissures.IfRealTimeCollector._d_RealTimeCollector)
omniORB.registerType(RealTimeCollector._NP_RepositoryId, _0_Fissures.IfRealTimeCollector._d_RealTimeCollector, _0_Fissures.IfRealTimeCollector._tc_RealTimeCollector)

# RealTimeCollector operations and attributes
RealTimeCollector._d_configure = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/CollectorConfigurationSeq:1.0"], ), (), None, None, 1)
RealTimeCollector._d_add_data = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/DataChunkSeq:1.0"], ), (), {_0_Fissures.IfRealTimeCollector.UnknownChannels._NP_RepositoryId: _0_Fissures.IfRealTimeCollector._d_UnknownChannels, _0_Fissures.IfRealTimeCollector.ChunkOutOfOrder._NP_RepositoryId: _0_Fissures.IfRealTimeCollector._d_ChunkOutOfOrder})
RealTimeCollector._d_reset_sequence = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/ChannelIdSeq:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/LongSeq:1.0"]), (), {_0_Fissures.IfRealTimeCollector.UnknownChannels._NP_RepositoryId: _0_Fissures.IfRealTimeCollector._d_UnknownChannels})
RealTimeCollector._d_get_collector = ((), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/RealTimeCollector:1.0"], ), {_0_Fissures.NotImplemented._NP_RepositoryId: _0_Fissures._d_NotImplemented})
RealTimeCollector._d_destroy = ((), (), None)

# RealTimeCollector object reference
class _objref_RealTimeCollector (CORBA.Object):
    _NP_RepositoryId = RealTimeCollector._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def configure(self, *args):
        return _omnipy.invoke(self, "configure", _0_Fissures.IfRealTimeCollector.RealTimeCollector._d_configure, args)

    def add_data(self, *args):
        return _omnipy.invoke(self, "add_data", _0_Fissures.IfRealTimeCollector.RealTimeCollector._d_add_data, args)

    def reset_sequence(self, *args):
        return _omnipy.invoke(self, "reset_sequence", _0_Fissures.IfRealTimeCollector.RealTimeCollector._d_reset_sequence, args)

    def get_collector(self, *args):
        return _omnipy.invoke(self, "get_collector", _0_Fissures.IfRealTimeCollector.RealTimeCollector._d_get_collector, args)

    def destroy(self, *args):
        return _omnipy.invoke(self, "destroy", _0_Fissures.IfRealTimeCollector.RealTimeCollector._d_destroy, args)

    __methods__ = ["configure", "add_data", "reset_sequence", "get_collector", "destroy"] + CORBA.Object.__methods__

omniORB.registerObjref(RealTimeCollector._NP_RepositoryId, _objref_RealTimeCollector)
_0_Fissures.IfRealTimeCollector._objref_RealTimeCollector = _objref_RealTimeCollector
del RealTimeCollector, _objref_RealTimeCollector

# RealTimeCollector skeleton
__name__ = "Fissures__POA.IfRealTimeCollector"
class RealTimeCollector (PortableServer.Servant):
    _NP_RepositoryId = _0_Fissures.IfRealTimeCollector.RealTimeCollector._NP_RepositoryId


    _omni_op_d = {"configure": _0_Fissures.IfRealTimeCollector.RealTimeCollector._d_configure, "add_data": _0_Fissures.IfRealTimeCollector.RealTimeCollector._d_add_data, "reset_sequence": _0_Fissures.IfRealTimeCollector.RealTimeCollector._d_reset_sequence, "get_collector": _0_Fissures.IfRealTimeCollector.RealTimeCollector._d_get_collector, "destroy": _0_Fissures.IfRealTimeCollector.RealTimeCollector._d_destroy}

RealTimeCollector._omni_skeleton = RealTimeCollector
_0_Fissures__POA.IfRealTimeCollector.RealTimeCollector = RealTimeCollector
omniORB.registerSkeleton(RealTimeCollector._NP_RepositoryId, RealTimeCollector)
del RealTimeCollector
__name__ = "Fissures.IfRealTimeCollector"

# interface DasSoh
_0_Fissures.IfRealTimeCollector._d_DasSoh = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfRealTimeCollector/DasSoh:1.0", "DasSoh")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/DasSoh:1.0"] = _0_Fissures.IfRealTimeCollector._d_DasSoh
_0_Fissures.IfRealTimeCollector.DasSoh = omniORB.newEmptyClass()
class DasSoh :
    _NP_RepositoryId = _0_Fissures.IfRealTimeCollector._d_DasSoh[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfRealTimeCollector.DasSoh = DasSoh
_0_Fissures.IfRealTimeCollector._tc_DasSoh = omniORB.tcInternal.createTypeCode(_0_Fissures.IfRealTimeCollector._d_DasSoh)
omniORB.registerType(DasSoh._NP_RepositoryId, _0_Fissures.IfRealTimeCollector._d_DasSoh, _0_Fissures.IfRealTimeCollector._tc_DasSoh)

# DasSoh operations and attributes
DasSoh._d_soh_event = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/DasError:1.0"]), (), None)

# DasSoh object reference
class _objref_DasSoh (CORBA.Object):
    _NP_RepositoryId = DasSoh._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def soh_event(self, *args):
        return _omnipy.invoke(self, "soh_event", _0_Fissures.IfRealTimeCollector.DasSoh._d_soh_event, args)

    __methods__ = ["soh_event"] + CORBA.Object.__methods__

omniORB.registerObjref(DasSoh._NP_RepositoryId, _objref_DasSoh)
_0_Fissures.IfRealTimeCollector._objref_DasSoh = _objref_DasSoh
del DasSoh, _objref_DasSoh

# DasSoh skeleton
__name__ = "Fissures__POA.IfRealTimeCollector"
class DasSoh (PortableServer.Servant):
    _NP_RepositoryId = _0_Fissures.IfRealTimeCollector.DasSoh._NP_RepositoryId


    _omni_op_d = {"soh_event": _0_Fissures.IfRealTimeCollector.DasSoh._d_soh_event}

DasSoh._omni_skeleton = DasSoh
_0_Fissures__POA.IfRealTimeCollector.DasSoh = DasSoh
omniORB.registerSkeleton(DasSoh._NP_RepositoryId, DasSoh)
del DasSoh
__name__ = "Fissures.IfRealTimeCollector"

# interface DasConfig
_0_Fissures.IfRealTimeCollector._d_DasConfig = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfRealTimeCollector/DasConfig:1.0", "DasConfig")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/DasConfig:1.0"] = _0_Fissures.IfRealTimeCollector._d_DasConfig
_0_Fissures.IfRealTimeCollector.DasConfig = omniORB.newEmptyClass()
class DasConfig :
    _NP_RepositoryId = _0_Fissures.IfRealTimeCollector._d_DasConfig[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfRealTimeCollector.DasConfig = DasConfig
_0_Fissures.IfRealTimeCollector._tc_DasConfig = omniORB.tcInternal.createTypeCode(_0_Fissures.IfRealTimeCollector._d_DasConfig)
omniORB.registerType(DasConfig._NP_RepositoryId, _0_Fissures.IfRealTimeCollector._d_DasConfig, _0_Fissures.IfRealTimeCollector._tc_DasConfig)

# DasConfig operations and attributes
DasConfig._d_set_collector_by_ref = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/RealTimeCollectorSeq:1.0"], ), (), {_0_Fissures.IfRealTimeCollector.CollectorMaxExceeded._NP_RepositoryId: _0_Fissures.IfRealTimeCollector._d_CollectorMaxExceeded})
DasConfig._d_set_collector_by_string = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/CollectorStringRefSeq:1.0"], ), (), {_0_Fissures.IfRealTimeCollector.CollectorMaxExceeded._NP_RepositoryId: _0_Fissures.IfRealTimeCollector._d_CollectorMaxExceeded})
DasConfig._d_add_collector_by_ref = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/RealTimeCollectorSeq:1.0"], ), (), {_0_Fissures.IfRealTimeCollector.CollectorMaxExceeded._NP_RepositoryId: _0_Fissures.IfRealTimeCollector._d_CollectorMaxExceeded})
DasConfig._d_add_collector_by_string = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/CollectorStringRefSeq:1.0"], ), (), {_0_Fissures.IfRealTimeCollector.CollectorMaxExceeded._NP_RepositoryId: _0_Fissures.IfRealTimeCollector._d_CollectorMaxExceeded})
DasConfig._d_set_soh_by_ref = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/DasSoh:1.0"], ), (), {_0_Fissures.NotImplemented._NP_RepositoryId: _0_Fissures._d_NotImplemented})
DasConfig._d_set_soh_by_string = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfRealTimeCollector/SohStringRefSeq:1.0"], ), (), {_0_Fissures.NotImplemented._NP_RepositoryId: _0_Fissures._d_NotImplemented})

# DasConfig object reference
class _objref_DasConfig (CORBA.Object):
    _NP_RepositoryId = DasConfig._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def set_collector_by_ref(self, *args):
        return _omnipy.invoke(self, "set_collector_by_ref", _0_Fissures.IfRealTimeCollector.DasConfig._d_set_collector_by_ref, args)

    def set_collector_by_string(self, *args):
        return _omnipy.invoke(self, "set_collector_by_string", _0_Fissures.IfRealTimeCollector.DasConfig._d_set_collector_by_string, args)

    def add_collector_by_ref(self, *args):
        return _omnipy.invoke(self, "add_collector_by_ref", _0_Fissures.IfRealTimeCollector.DasConfig._d_add_collector_by_ref, args)

    def add_collector_by_string(self, *args):
        return _omnipy.invoke(self, "add_collector_by_string", _0_Fissures.IfRealTimeCollector.DasConfig._d_add_collector_by_string, args)

    def set_soh_by_ref(self, *args):
        return _omnipy.invoke(self, "set_soh_by_ref", _0_Fissures.IfRealTimeCollector.DasConfig._d_set_soh_by_ref, args)

    def set_soh_by_string(self, *args):
        return _omnipy.invoke(self, "set_soh_by_string", _0_Fissures.IfRealTimeCollector.DasConfig._d_set_soh_by_string, args)

    __methods__ = ["set_collector_by_ref", "set_collector_by_string", "add_collector_by_ref", "add_collector_by_string", "set_soh_by_ref", "set_soh_by_string"] + CORBA.Object.__methods__

omniORB.registerObjref(DasConfig._NP_RepositoryId, _objref_DasConfig)
_0_Fissures.IfRealTimeCollector._objref_DasConfig = _objref_DasConfig
del DasConfig, _objref_DasConfig

# DasConfig skeleton
__name__ = "Fissures__POA.IfRealTimeCollector"
class DasConfig (PortableServer.Servant):
    _NP_RepositoryId = _0_Fissures.IfRealTimeCollector.DasConfig._NP_RepositoryId


    _omni_op_d = {"set_collector_by_ref": _0_Fissures.IfRealTimeCollector.DasConfig._d_set_collector_by_ref, "set_collector_by_string": _0_Fissures.IfRealTimeCollector.DasConfig._d_set_collector_by_string, "add_collector_by_ref": _0_Fissures.IfRealTimeCollector.DasConfig._d_add_collector_by_ref, "add_collector_by_string": _0_Fissures.IfRealTimeCollector.DasConfig._d_add_collector_by_string, "set_soh_by_ref": _0_Fissures.IfRealTimeCollector.DasConfig._d_set_soh_by_ref, "set_soh_by_string": _0_Fissures.IfRealTimeCollector.DasConfig._d_set_soh_by_string}

DasConfig._omni_skeleton = DasConfig
_0_Fissures__POA.IfRealTimeCollector.DasConfig = DasConfig
omniORB.registerSkeleton(DasConfig._NP_RepositoryId, DasConfig)
del DasConfig
__name__ = "Fissures.IfRealTimeCollector"

#
# End of module "Fissures.IfRealTimeCollector"
#
__name__ = "Fissures"


#
# End of module "Fissures"
#
__name__ = "IfRealTimeCollector_idl"

_exported_modules = ( "Fissures", "Fissures.IfRealTimeCollector")

# The end.
