# Python stubs generated by omniidl from IfPickMgr.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "Fissures.idl"
import Fissures_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
# #include "IfTimeSeries.idl"
import IfTimeSeries_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfTimeSeries = omniORB.openModule("Fissures.IfTimeSeries")
_0_Fissures__POA.IfTimeSeries = omniORB.openModule("Fissures__POA.IfTimeSeries")
# #include "IfNetwork.idl"
import IfNetwork_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfNetwork = omniORB.openModule("Fissures.IfNetwork")
_0_Fissures__POA.IfNetwork = omniORB.openModule("Fissures__POA.IfNetwork")
# #include "IfParameterMgr.idl"
import IfParameterMgr_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfParameterMgr = omniORB.openModule("Fissures.IfParameterMgr")
_0_Fissures__POA.IfParameterMgr = omniORB.openModule("Fissures__POA.IfParameterMgr")
# #include "IfSeismogramDC.idl"
import IfSeismogramDC_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfSeismogramDC = omniORB.openModule("Fissures.IfSeismogramDC")
_0_Fissures__POA.IfSeismogramDC = omniORB.openModule("Fissures__POA.IfSeismogramDC")
# #include "IfSeismogramMgr.idl"
import IfSeismogramMgr_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfSeismogramMgr = omniORB.openModule("Fissures.IfSeismogramMgr")
_0_Fissures__POA.IfSeismogramMgr = omniORB.openModule("Fissures__POA.IfSeismogramMgr")
# #include "IfDataSetMgr.idl"
import IfDataSetMgr_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfDataSetMgr = omniORB.openModule("Fissures.IfDataSetMgr")
_0_Fissures__POA.IfDataSetMgr = omniORB.openModule("Fissures__POA.IfDataSetMgr")

#
# Start of module "Fissures"
#
__name__ = "Fissures"
_0_Fissures = omniORB.openModule("Fissures", r"IfPickMgr.idl")
_0_Fissures__POA = omniORB.openModule("Fissures__POA", r"IfPickMgr.idl")


#
# Start of module "Fissures.IfPickMgr"
#
__name__ = "Fissures.IfPickMgr"
_0_Fissures.IfPickMgr = omniORB.openModule("Fissures.IfPickMgr", r"IfPickMgr.idl")
_0_Fissures__POA.IfPickMgr = omniORB.openModule("Fissures__POA.IfPickMgr", r"IfPickMgr.idl")

_0_Fissures.IfPickMgr.VERSION = "1.0"

# typedef ... SeismogramId
class SeismogramId:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfPickMgr/SeismogramId:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfPickMgr.SeismogramId = SeismogramId
_0_Fissures.IfPickMgr._d_SeismogramId  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/SeismogramId:1.0"]
_0_Fissures.IfPickMgr._ad_SeismogramId = (omniORB.tcInternal.tv_alias, SeismogramId._NP_RepositoryId, "SeismogramId", omniORB.typeCodeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/SeismogramId:1.0"]._d)
_0_Fissures.IfPickMgr._tc_SeismogramId = omniORB.tcInternal.createTypeCode(_0_Fissures.IfPickMgr._ad_SeismogramId)
omniORB.registerType(SeismogramId._NP_RepositoryId, _0_Fissures.IfPickMgr._ad_SeismogramId, _0_Fissures.IfPickMgr._tc_SeismogramId)
del SeismogramId

# typedef ... SiteId
class SiteId (_0_Fissures.IfNetwork.SiteId):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfPickMgr/SiteId:1.0"

_0_Fissures.IfPickMgr.SiteId = SiteId
_0_Fissures.IfPickMgr._d_SiteId  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfNetwork/SiteId:1.0"]
_0_Fissures.IfPickMgr._ad_SiteId = (omniORB.tcInternal.tv_alias, SiteId._NP_RepositoryId, "SiteId", omniORB.typeMapping["IDL:iris.edu/Fissures/IfNetwork/SiteId:1.0"])
_0_Fissures.IfPickMgr._tc_SiteId = omniORB.tcInternal.createTypeCode(_0_Fissures.IfPickMgr._ad_SiteId)
omniORB.registerType(SiteId._NP_RepositoryId, _0_Fissures.IfPickMgr._ad_SiteId, _0_Fissures.IfPickMgr._tc_SiteId)
del SiteId

# typedef ... NodeId
class NodeId:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfPickMgr/NodeId:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfPickMgr.NodeId = NodeId
_0_Fissures.IfPickMgr._d_NodeId  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/NodeId:1.0"]
_0_Fissures.IfPickMgr._ad_NodeId = (omniORB.tcInternal.tv_alias, NodeId._NP_RepositoryId, "NodeId", omniORB.typeCodeMapping["IDL:iris.edu/Fissures/IfDataSetMgr/NodeId:1.0"]._d)
_0_Fissures.IfPickMgr._tc_NodeId = omniORB.tcInternal.createTypeCode(_0_Fissures.IfPickMgr._ad_NodeId)
omniORB.registerType(NodeId._NP_RepositoryId, _0_Fissures.IfPickMgr._ad_NodeId, _0_Fissures.IfPickMgr._tc_NodeId)
del NodeId

# interface PickMgr;
_0_Fissures.IfPickMgr._d_PickMgr = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfPickMgr/PickMgr:1.0", "PickMgr")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickMgr:1.0"] = _0_Fissures.IfPickMgr._d_PickMgr

# typedef ... PickId
class PickId:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfPickMgr/PickId:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfPickMgr.PickId = PickId
_0_Fissures.IfPickMgr._d_PickId  = (omniORB.tcInternal.tv_string,0)
_0_Fissures.IfPickMgr._ad_PickId = (omniORB.tcInternal.tv_alias, PickId._NP_RepositoryId, "PickId", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfPickMgr._tc_PickId = omniORB.tcInternal.createTypeCode(_0_Fissures.IfPickMgr._ad_PickId)
omniORB.registerType(PickId._NP_RepositoryId, _0_Fissures.IfPickMgr._ad_PickId, _0_Fissures.IfPickMgr._tc_PickId)
del PickId

# typedef ... FeatureId
class FeatureId:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfPickMgr/FeatureId:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfPickMgr.FeatureId = FeatureId
_0_Fissures.IfPickMgr._d_FeatureId  = (omniORB.tcInternal.tv_string,0)
_0_Fissures.IfPickMgr._ad_FeatureId = (omniORB.tcInternal.tv_alias, FeatureId._NP_RepositoryId, "FeatureId", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfPickMgr._tc_FeatureId = omniORB.tcInternal.createTypeCode(_0_Fissures.IfPickMgr._ad_FeatureId)
omniORB.registerType(FeatureId._NP_RepositoryId, _0_Fissures.IfPickMgr._ad_FeatureId, _0_Fissures.IfPickMgr._tc_FeatureId)
del FeatureId

# typedef ... PickGroupName
class PickGroupName:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfPickMgr/PickGroupName:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfPickMgr.PickGroupName = PickGroupName
_0_Fissures.IfPickMgr._d_PickGroupName  = (omniORB.tcInternal.tv_string,0)
_0_Fissures.IfPickMgr._ad_PickGroupName = (omniORB.tcInternal.tv_alias, PickGroupName._NP_RepositoryId, "PickGroupName", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfPickMgr._tc_PickGroupName = omniORB.tcInternal.createTypeCode(_0_Fissures.IfPickMgr._ad_PickGroupName)
omniORB.registerType(PickGroupName._NP_RepositoryId, _0_Fissures.IfPickMgr._ad_PickGroupName, _0_Fissures.IfPickMgr._tc_PickGroupName)
del PickGroupName

# typedef ... PickGroupId
class PickGroupId:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfPickMgr/PickGroupId:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfPickMgr.PickGroupId = PickGroupId
_0_Fissures.IfPickMgr._d_PickGroupId  = (omniORB.tcInternal.tv_string,0)
_0_Fissures.IfPickMgr._ad_PickGroupId = (omniORB.tcInternal.tv_alias, PickGroupId._NP_RepositoryId, "PickGroupId", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfPickMgr._tc_PickGroupId = omniORB.tcInternal.createTypeCode(_0_Fissures.IfPickMgr._ad_PickGroupId)
omniORB.registerType(PickGroupId._NP_RepositoryId, _0_Fissures.IfPickMgr._ad_PickGroupId, _0_Fissures.IfPickMgr._tc_PickGroupId)
del PickGroupId

# struct Pick
_0_Fissures.IfPickMgr.Pick = omniORB.newEmptyClass()
class Pick (omniORB.StructBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfPickMgr/Pick:1.0"

    def __init__(self, id, name, time_when, error_estimate):
        self.id = id
        self.name = name
        self.time_when = time_when
        self.error_estimate = error_estimate

_0_Fissures.IfPickMgr.Pick = Pick
_0_Fissures.IfPickMgr._d_Pick  = (omniORB.tcInternal.tv_struct, Pick, Pick._NP_RepositoryId, "Pick", "id", omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickId:1.0"], "name", (omniORB.tcInternal.tv_string,0), "time_when", omniORB.typeMapping["IDL:iris.edu/Fissures/Time:1.0"], "error_estimate", omniORB.typeMapping["IDL:iris.edu/Fissures/TimeInterval:1.0"])
_0_Fissures.IfPickMgr._tc_Pick = omniORB.tcInternal.createTypeCode(_0_Fissures.IfPickMgr._d_Pick)
omniORB.registerType(Pick._NP_RepositoryId, _0_Fissures.IfPickMgr._d_Pick, _0_Fissures.IfPickMgr._tc_Pick)
del Pick

# typedef ... PickIdSeq
class PickIdSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfPickMgr/PickIdSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfPickMgr.PickIdSeq = PickIdSeq
_0_Fissures.IfPickMgr._d_PickIdSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickId:1.0"], 0)
_0_Fissures.IfPickMgr._ad_PickIdSeq = (omniORB.tcInternal.tv_alias, PickIdSeq._NP_RepositoryId, "PickIdSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickId:1.0"], 0))
_0_Fissures.IfPickMgr._tc_PickIdSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfPickMgr._ad_PickIdSeq)
omniORB.registerType(PickIdSeq._NP_RepositoryId, _0_Fissures.IfPickMgr._ad_PickIdSeq, _0_Fissures.IfPickMgr._tc_PickIdSeq)
del PickIdSeq

# typedef ... PickSeq
class PickSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfPickMgr/PickSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfPickMgr.PickSeq = PickSeq
_0_Fissures.IfPickMgr._d_PickSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/Pick:1.0"], 0)
_0_Fissures.IfPickMgr._ad_PickSeq = (omniORB.tcInternal.tv_alias, PickSeq._NP_RepositoryId, "PickSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/Pick:1.0"], 0))
_0_Fissures.IfPickMgr._tc_PickSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfPickMgr._ad_PickSeq)
omniORB.registerType(PickSeq._NP_RepositoryId, _0_Fissures.IfPickMgr._ad_PickSeq, _0_Fissures.IfPickMgr._tc_PickSeq)
del PickSeq

# struct PickGroup
_0_Fissures.IfPickMgr.PickGroup = omniORB.newEmptyClass()
class PickGroup (omniORB.StructBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfPickMgr/PickGroup:1.0"

    def __init__(self, id, name, picks):
        self.id = id
        self.name = name
        self.picks = picks

_0_Fissures.IfPickMgr.PickGroup = PickGroup
_0_Fissures.IfPickMgr._d_PickGroup  = (omniORB.tcInternal.tv_struct, PickGroup, PickGroup._NP_RepositoryId, "PickGroup", "id", omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickGroupId:1.0"], "name", omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickGroupName:1.0"], "picks", omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickSeq:1.0"])
_0_Fissures.IfPickMgr._tc_PickGroup = omniORB.tcInternal.createTypeCode(_0_Fissures.IfPickMgr._d_PickGroup)
omniORB.registerType(PickGroup._NP_RepositoryId, _0_Fissures.IfPickMgr._d_PickGroup, _0_Fissures.IfPickMgr._tc_PickGroup)
del PickGroup

# typedef ... PickGroupSeq
class PickGroupSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfPickMgr/PickGroupSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfPickMgr.PickGroupSeq = PickGroupSeq
_0_Fissures.IfPickMgr._d_PickGroupSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickGroup:1.0"], 0)
_0_Fissures.IfPickMgr._ad_PickGroupSeq = (omniORB.tcInternal.tv_alias, PickGroupSeq._NP_RepositoryId, "PickGroupSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickGroup:1.0"], 0))
_0_Fissures.IfPickMgr._tc_PickGroupSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfPickMgr._ad_PickGroupSeq)
omniORB.registerType(PickGroupSeq._NP_RepositoryId, _0_Fissures.IfPickMgr._ad_PickGroupSeq, _0_Fissures.IfPickMgr._tc_PickGroupSeq)
del PickGroupSeq

# exception UnknownPick
_0_Fissures.IfPickMgr.UnknownPick = omniORB.newEmptyClass()
class UnknownPick (CORBA.UserException):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfPickMgr/UnknownPick:1.0"

    def __init__(self, id):
        CORBA.UserException.__init__(self, id)
        self.id = id

_0_Fissures.IfPickMgr.UnknownPick = UnknownPick
_0_Fissures.IfPickMgr._d_UnknownPick  = (omniORB.tcInternal.tv_except, UnknownPick, UnknownPick._NP_RepositoryId, "UnknownPick", "id", omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickId:1.0"])
_0_Fissures.IfPickMgr._tc_UnknownPick = omniORB.tcInternal.createTypeCode(_0_Fissures.IfPickMgr._d_UnknownPick)
omniORB.registerType(UnknownPick._NP_RepositoryId, _0_Fissures.IfPickMgr._d_UnknownPick, _0_Fissures.IfPickMgr._tc_UnknownPick)
del UnknownPick

# exception UnknownPickGroup
_0_Fissures.IfPickMgr.UnknownPickGroup = omniORB.newEmptyClass()
class UnknownPickGroup (CORBA.UserException):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfPickMgr/UnknownPickGroup:1.0"

    def __init__(self, id):
        CORBA.UserException.__init__(self, id)
        self.id = id

_0_Fissures.IfPickMgr.UnknownPickGroup = UnknownPickGroup
_0_Fissures.IfPickMgr._d_UnknownPickGroup  = (omniORB.tcInternal.tv_except, UnknownPickGroup, UnknownPickGroup._NP_RepositoryId, "UnknownPickGroup", "id", omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickGroupId:1.0"])
_0_Fissures.IfPickMgr._tc_UnknownPickGroup = omniORB.tcInternal.createTypeCode(_0_Fissures.IfPickMgr._d_UnknownPickGroup)
omniORB.registerType(UnknownPickGroup._NP_RepositoryId, _0_Fissures.IfPickMgr._d_UnknownPickGroup, _0_Fissures.IfPickMgr._tc_UnknownPickGroup)
del UnknownPickGroup

# interface PickDC
_0_Fissures.IfPickMgr._d_PickDC = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfPickMgr/PickDC:1.0", "PickDC")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickDC:1.0"] = _0_Fissures.IfPickMgr._d_PickDC
_0_Fissures.IfPickMgr.PickDC = omniORB.newEmptyClass()
class PickDC :
    _NP_RepositoryId = _0_Fissures.IfPickMgr._d_PickDC[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfPickMgr.PickDC = PickDC
_0_Fissures.IfPickMgr._tc_PickDC = omniORB.tcInternal.createTypeCode(_0_Fissures.IfPickMgr._d_PickDC)
omniORB.registerType(PickDC._NP_RepositoryId, _0_Fissures.IfPickMgr._d_PickDC, _0_Fissures.IfPickMgr._tc_PickDC)

# PickDC operations and attributes
PickDC._d__get_a_writeable = ((),(omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickMgr:1.0"],),None)
PickDC._d_retrieve_picks_for_seismogram = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/SeismogramId:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickSeq:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException}, None, 1)
PickDC._d_retrieve_picks_for_site = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/SiteId:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/TimeRange:1.0"]), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickSeq:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException}, None, 1)
PickDC._d_retrieve_pick_group = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickGroupId:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickGroupSeq:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException}, None, 1)
PickDC._d_retrieve_pick_group_by_name = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickGroupName:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickGroupSeq:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException}, None, 1)
PickDC._d_get_pickgroups_for_dataset = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/NodeId:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickGroupSeq:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException}, None, 1)

# PickDC object reference
class _objref_PickDC (CORBA.Object):
    _NP_RepositoryId = PickDC._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def _get_a_writeable(self, *args):
        return _omnipy.invoke(self, "_get_a_writeable", _0_Fissures.IfPickMgr.PickDC._d__get_a_writeable, args)

    def retrieve_picks_for_seismogram(self, *args):
        return _omnipy.invoke(self, "retrieve_picks_for_seismogram", _0_Fissures.IfPickMgr.PickDC._d_retrieve_picks_for_seismogram, args)

    def retrieve_picks_for_site(self, *args):
        return _omnipy.invoke(self, "retrieve_picks_for_site", _0_Fissures.IfPickMgr.PickDC._d_retrieve_picks_for_site, args)

    def retrieve_pick_group(self, *args):
        return _omnipy.invoke(self, "retrieve_pick_group", _0_Fissures.IfPickMgr.PickDC._d_retrieve_pick_group, args)

    def retrieve_pick_group_by_name(self, *args):
        return _omnipy.invoke(self, "retrieve_pick_group_by_name", _0_Fissures.IfPickMgr.PickDC._d_retrieve_pick_group_by_name, args)

    def get_pickgroups_for_dataset(self, *args):
        return _omnipy.invoke(self, "get_pickgroups_for_dataset", _0_Fissures.IfPickMgr.PickDC._d_get_pickgroups_for_dataset, args)

    __methods__ = ["_get_a_writeable", "retrieve_picks_for_seismogram", "retrieve_picks_for_site", "retrieve_pick_group", "retrieve_pick_group_by_name", "get_pickgroups_for_dataset"] + CORBA.Object.__methods__

omniORB.registerObjref(PickDC._NP_RepositoryId, _objref_PickDC)
_0_Fissures.IfPickMgr._objref_PickDC = _objref_PickDC
del PickDC, _objref_PickDC

# PickDC skeleton
__name__ = "Fissures__POA.IfPickMgr"
class PickDC (PortableServer.Servant):
    _NP_RepositoryId = _0_Fissures.IfPickMgr.PickDC._NP_RepositoryId


    _omni_op_d = {"_get_a_writeable": _0_Fissures.IfPickMgr.PickDC._d__get_a_writeable, "retrieve_picks_for_seismogram": _0_Fissures.IfPickMgr.PickDC._d_retrieve_picks_for_seismogram, "retrieve_picks_for_site": _0_Fissures.IfPickMgr.PickDC._d_retrieve_picks_for_site, "retrieve_pick_group": _0_Fissures.IfPickMgr.PickDC._d_retrieve_pick_group, "retrieve_pick_group_by_name": _0_Fissures.IfPickMgr.PickDC._d_retrieve_pick_group_by_name, "get_pickgroups_for_dataset": _0_Fissures.IfPickMgr.PickDC._d_get_pickgroups_for_dataset}

PickDC._omni_skeleton = PickDC
_0_Fissures__POA.IfPickMgr.PickDC = PickDC
omniORB.registerSkeleton(PickDC._NP_RepositoryId, PickDC)
del PickDC
__name__ = "Fissures.IfPickMgr"

# interface PickMgr
_0_Fissures.IfPickMgr._d_PickMgr = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfPickMgr/PickMgr:1.0", "PickMgr")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickMgr:1.0"] = _0_Fissures.IfPickMgr._d_PickMgr
_0_Fissures.IfPickMgr.PickMgr = omniORB.newEmptyClass()
class PickMgr (_0_Fissures.IfPickMgr.PickDC):
    _NP_RepositoryId = _0_Fissures.IfPickMgr._d_PickMgr[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfPickMgr.PickMgr = PickMgr
_0_Fissures.IfPickMgr._tc_PickMgr = omniORB.tcInternal.createTypeCode(_0_Fissures.IfPickMgr._d_PickMgr)
omniORB.registerType(PickMgr._NP_RepositoryId, _0_Fissures.IfPickMgr._d_PickMgr, _0_Fissures.IfPickMgr._tc_PickMgr)

# PickMgr operations and attributes
PickMgr._d_add_pick = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/SeismogramId:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/Pick:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException}, None, 1)
PickMgr._d_add_to_pick_group = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickGroupId:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickId:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (), {_0_Fissures.IfPickMgr.UnknownPick._NP_RepositoryId: _0_Fissures.IfPickMgr._d_UnknownPick, _0_Fissures.IfPickMgr.UnknownPickGroup._NP_RepositoryId: _0_Fissures.IfPickMgr._d_UnknownPickGroup})
PickMgr._d_update_pick = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/Pick:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException}, None, 1)
PickMgr._d_delete_pick = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickId:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException})
PickMgr._d_remove_pick_from_group = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickGroupId:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickId:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException})
PickMgr._d_remove_pick_group = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickGroupId:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException})
PickMgr._d_create_pick_group = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickGroupName:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickGroupId:1.0"], ), None)
PickMgr._d_make_pick_group = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickGroup:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickGroupId:1.0"], ), None, None, 1)
PickMgr._d_associate_pickgroup_to_dataset = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/NodeId:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfPickMgr/PickGroupId:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException})

# PickMgr object reference
class _objref_PickMgr (_0_Fissures.IfPickMgr._objref_PickDC):
    _NP_RepositoryId = PickMgr._NP_RepositoryId

    def __init__(self):
        _0_Fissures.IfPickMgr._objref_PickDC.__init__(self)

    def add_pick(self, *args):
        return _omnipy.invoke(self, "add_pick", _0_Fissures.IfPickMgr.PickMgr._d_add_pick, args)

    def add_to_pick_group(self, *args):
        return _omnipy.invoke(self, "add_to_pick_group", _0_Fissures.IfPickMgr.PickMgr._d_add_to_pick_group, args)

    def update_pick(self, *args):
        return _omnipy.invoke(self, "update_pick", _0_Fissures.IfPickMgr.PickMgr._d_update_pick, args)

    def delete_pick(self, *args):
        return _omnipy.invoke(self, "delete_pick", _0_Fissures.IfPickMgr.PickMgr._d_delete_pick, args)

    def remove_pick_from_group(self, *args):
        return _omnipy.invoke(self, "remove_pick_from_group", _0_Fissures.IfPickMgr.PickMgr._d_remove_pick_from_group, args)

    def remove_pick_group(self, *args):
        return _omnipy.invoke(self, "remove_pick_group", _0_Fissures.IfPickMgr.PickMgr._d_remove_pick_group, args)

    def create_pick_group(self, *args):
        return _omnipy.invoke(self, "create_pick_group", _0_Fissures.IfPickMgr.PickMgr._d_create_pick_group, args)

    def make_pick_group(self, *args):
        return _omnipy.invoke(self, "make_pick_group", _0_Fissures.IfPickMgr.PickMgr._d_make_pick_group, args)

    def associate_pickgroup_to_dataset(self, *args):
        return _omnipy.invoke(self, "associate_pickgroup_to_dataset", _0_Fissures.IfPickMgr.PickMgr._d_associate_pickgroup_to_dataset, args)

    __methods__ = ["add_pick", "add_to_pick_group", "update_pick", "delete_pick", "remove_pick_from_group", "remove_pick_group", "create_pick_group", "make_pick_group", "associate_pickgroup_to_dataset"] + _0_Fissures.IfPickMgr._objref_PickDC.__methods__

omniORB.registerObjref(PickMgr._NP_RepositoryId, _objref_PickMgr)
_0_Fissures.IfPickMgr._objref_PickMgr = _objref_PickMgr
del PickMgr, _objref_PickMgr

# PickMgr skeleton
__name__ = "Fissures__POA.IfPickMgr"
class PickMgr (_0_Fissures__POA.IfPickMgr.PickDC):
    _NP_RepositoryId = _0_Fissures.IfPickMgr.PickMgr._NP_RepositoryId


    _omni_op_d = {"add_pick": _0_Fissures.IfPickMgr.PickMgr._d_add_pick, "add_to_pick_group": _0_Fissures.IfPickMgr.PickMgr._d_add_to_pick_group, "update_pick": _0_Fissures.IfPickMgr.PickMgr._d_update_pick, "delete_pick": _0_Fissures.IfPickMgr.PickMgr._d_delete_pick, "remove_pick_from_group": _0_Fissures.IfPickMgr.PickMgr._d_remove_pick_from_group, "remove_pick_group": _0_Fissures.IfPickMgr.PickMgr._d_remove_pick_group, "create_pick_group": _0_Fissures.IfPickMgr.PickMgr._d_create_pick_group, "make_pick_group": _0_Fissures.IfPickMgr.PickMgr._d_make_pick_group, "associate_pickgroup_to_dataset": _0_Fissures.IfPickMgr.PickMgr._d_associate_pickgroup_to_dataset}
    _omni_op_d.update(_0_Fissures__POA.IfPickMgr.PickDC._omni_op_d)

PickMgr._omni_skeleton = PickMgr
_0_Fissures__POA.IfPickMgr.PickMgr = PickMgr
omniORB.registerSkeleton(PickMgr._NP_RepositoryId, PickMgr)
del PickMgr
__name__ = "Fissures.IfPickMgr"

#
# End of module "Fissures.IfPickMgr"
#
__name__ = "Fissures"


#
# End of module "Fissures"
#
__name__ = "IfPickMgr_idl"

_exported_modules = ( "Fissures", "Fissures.IfPickMgr")

# The end.
