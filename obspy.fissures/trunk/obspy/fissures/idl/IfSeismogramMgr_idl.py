# Python stubs generated by omniidl from IfSeismogramMgr.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "Fissures.idl"
import Fissures_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
# #include "IfTimeSeries.idl"
import IfTimeSeries_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfTimeSeries = omniORB.openModule("Fissures.IfTimeSeries")
_0_Fissures__POA.IfTimeSeries = omniORB.openModule("Fissures__POA.IfTimeSeries")
# #include "IfNetwork.idl"
import IfNetwork_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfNetwork = omniORB.openModule("Fissures.IfNetwork")
_0_Fissures__POA.IfNetwork = omniORB.openModule("Fissures__POA.IfNetwork")
# #include "IfParameterMgr.idl"
import IfParameterMgr_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfParameterMgr = omniORB.openModule("Fissures.IfParameterMgr")
_0_Fissures__POA.IfParameterMgr = omniORB.openModule("Fissures__POA.IfParameterMgr")
# #include "IfSeismogramDC.idl"
import IfSeismogramDC_idl
_0_Fissures = omniORB.openModule("Fissures")
_0_Fissures__POA = omniORB.openModule("Fissures__POA")
_0_Fissures.IfSeismogramDC = omniORB.openModule("Fissures.IfSeismogramDC")
_0_Fissures__POA.IfSeismogramDC = omniORB.openModule("Fissures__POA.IfSeismogramDC")

#
# Start of module "Fissures"
#
__name__ = "Fissures"
_0_Fissures = omniORB.openModule("Fissures", r"IfSeismogramMgr.idl")
_0_Fissures__POA = omniORB.openModule("Fissures__POA", r"IfSeismogramMgr.idl")


#
# Start of module "Fissures.IfSeismogramMgr"
#
__name__ = "Fissures.IfSeismogramMgr"
_0_Fissures.IfSeismogramMgr = omniORB.openModule("Fissures.IfSeismogramMgr", r"IfSeismogramMgr.idl")
_0_Fissures__POA.IfSeismogramMgr = omniORB.openModule("Fissures__POA.IfSeismogramMgr", r"IfSeismogramMgr.idl")

_0_Fissures.IfSeismogramMgr.VERSION = "1.0"

# typedef ... TimeSeriesAccess
class TimeSeriesAccess:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramMgr/TimeSeriesAccess:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramMgr.TimeSeriesAccess = TimeSeriesAccess
_0_Fissures.IfSeismogramMgr._d_TimeSeriesAccess  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfTimeSeries/TimeSeriesAccess:1.0"]
_0_Fissures.IfSeismogramMgr._ad_TimeSeriesAccess = (omniORB.tcInternal.tv_alias, TimeSeriesAccess._NP_RepositoryId, "TimeSeriesAccess", omniORB.typeMapping["IDL:iris.edu/Fissures/IfTimeSeries/TimeSeriesAccess:1.0"])
_0_Fissures.IfSeismogramMgr._tc_TimeSeriesAccess = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._ad_TimeSeriesAccess)
omniORB.registerType(TimeSeriesAccess._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._ad_TimeSeriesAccess, _0_Fissures.IfSeismogramMgr._tc_TimeSeriesAccess)
del TimeSeriesAccess

# typedef ... TimeSeriesAdmin
class TimeSeriesAdmin:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramMgr/TimeSeriesAdmin:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramMgr.TimeSeriesAdmin = TimeSeriesAdmin
_0_Fissures.IfSeismogramMgr._d_TimeSeriesAdmin  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfTimeSeries/TimeSeriesAdmin:1.0"]
_0_Fissures.IfSeismogramMgr._ad_TimeSeriesAdmin = (omniORB.tcInternal.tv_alias, TimeSeriesAdmin._NP_RepositoryId, "TimeSeriesAdmin", omniORB.typeMapping["IDL:iris.edu/Fissures/IfTimeSeries/TimeSeriesAdmin:1.0"])
_0_Fissures.IfSeismogramMgr._tc_TimeSeriesAdmin = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._ad_TimeSeriesAdmin)
omniORB.registerType(TimeSeriesAdmin._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._ad_TimeSeriesAdmin, _0_Fissures.IfSeismogramMgr._tc_TimeSeriesAdmin)
del TimeSeriesAdmin

# typedef ... TimeSeriesDataSel
class TimeSeriesDataSel (_0_Fissures.IfTimeSeries.TimeSeriesDataSel):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramMgr/TimeSeriesDataSel:1.0"

_0_Fissures.IfSeismogramMgr.TimeSeriesDataSel = TimeSeriesDataSel
_0_Fissures.IfSeismogramMgr._d_TimeSeriesDataSel  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfTimeSeries/TimeSeriesDataSel:1.0"]
_0_Fissures.IfSeismogramMgr._ad_TimeSeriesDataSel = (omniORB.tcInternal.tv_alias, TimeSeriesDataSel._NP_RepositoryId, "TimeSeriesDataSel", omniORB.typeMapping["IDL:iris.edu/Fissures/IfTimeSeries/TimeSeriesDataSel:1.0"])
_0_Fissures.IfSeismogramMgr._tc_TimeSeriesDataSel = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._ad_TimeSeriesDataSel)
omniORB.registerType(TimeSeriesDataSel._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._ad_TimeSeriesDataSel, _0_Fissures.IfSeismogramMgr._tc_TimeSeriesDataSel)
del TimeSeriesDataSel

# typedef ... LongSeq
class LongSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramMgr/LongSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramMgr.LongSeq = LongSeq
_0_Fissures.IfSeismogramMgr._d_LongSeq  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfTimeSeries/LongSeq:1.0"]
_0_Fissures.IfSeismogramMgr._ad_LongSeq = (omniORB.tcInternal.tv_alias, LongSeq._NP_RepositoryId, "LongSeq", omniORB.typeCodeMapping["IDL:iris.edu/Fissures/IfTimeSeries/LongSeq:1.0"]._d)
_0_Fissures.IfSeismogramMgr._tc_LongSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._ad_LongSeq)
omniORB.registerType(LongSeq._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._ad_LongSeq, _0_Fissures.IfSeismogramMgr._tc_LongSeq)
del LongSeq

# typedef ... ShortSeq
class ShortSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramMgr/ShortSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramMgr.ShortSeq = ShortSeq
_0_Fissures.IfSeismogramMgr._d_ShortSeq  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfTimeSeries/ShortSeq:1.0"]
_0_Fissures.IfSeismogramMgr._ad_ShortSeq = (omniORB.tcInternal.tv_alias, ShortSeq._NP_RepositoryId, "ShortSeq", omniORB.typeCodeMapping["IDL:iris.edu/Fissures/IfTimeSeries/ShortSeq:1.0"]._d)
_0_Fissures.IfSeismogramMgr._tc_ShortSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._ad_ShortSeq)
omniORB.registerType(ShortSeq._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._ad_ShortSeq, _0_Fissures.IfSeismogramMgr._tc_ShortSeq)
del ShortSeq

# typedef ... FloatSeq
class FloatSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramMgr/FloatSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramMgr.FloatSeq = FloatSeq
_0_Fissures.IfSeismogramMgr._d_FloatSeq  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfTimeSeries/FloatSeq:1.0"]
_0_Fissures.IfSeismogramMgr._ad_FloatSeq = (omniORB.tcInternal.tv_alias, FloatSeq._NP_RepositoryId, "FloatSeq", omniORB.typeCodeMapping["IDL:iris.edu/Fissures/IfTimeSeries/FloatSeq:1.0"]._d)
_0_Fissures.IfSeismogramMgr._tc_FloatSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._ad_FloatSeq)
omniORB.registerType(FloatSeq._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._ad_FloatSeq, _0_Fissures.IfSeismogramMgr._tc_FloatSeq)
del FloatSeq

# typedef ... DoubleSeq
class DoubleSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramMgr/DoubleSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramMgr.DoubleSeq = DoubleSeq
_0_Fissures.IfSeismogramMgr._d_DoubleSeq  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfTimeSeries/DoubleSeq:1.0"]
_0_Fissures.IfSeismogramMgr._ad_DoubleSeq = (omniORB.tcInternal.tv_alias, DoubleSeq._NP_RepositoryId, "DoubleSeq", omniORB.typeCodeMapping["IDL:iris.edu/Fissures/IfTimeSeries/DoubleSeq:1.0"]._d)
_0_Fissures.IfSeismogramMgr._tc_DoubleSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._ad_DoubleSeq)
omniORB.registerType(DoubleSeq._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._ad_DoubleSeq, _0_Fissures.IfSeismogramMgr._tc_DoubleSeq)
del DoubleSeq

# typedef ... EncodedData
class EncodedData (_0_Fissures.IfTimeSeries.EncodedData):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramMgr/EncodedData:1.0"

_0_Fissures.IfSeismogramMgr.EncodedData = EncodedData
_0_Fissures.IfSeismogramMgr._d_EncodedData  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfTimeSeries/EncodedData:1.0"]
_0_Fissures.IfSeismogramMgr._ad_EncodedData = (omniORB.tcInternal.tv_alias, EncodedData._NP_RepositoryId, "EncodedData", omniORB.typeMapping["IDL:iris.edu/Fissures/IfTimeSeries/EncodedData:1.0"])
_0_Fissures.IfSeismogramMgr._tc_EncodedData = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._ad_EncodedData)
omniORB.registerType(EncodedData._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._ad_EncodedData, _0_Fissures.IfSeismogramMgr._tc_EncodedData)
del EncodedData

# typedef ... EncodedDataSeq
class EncodedDataSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramMgr/EncodedDataSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramMgr.EncodedDataSeq = EncodedDataSeq
_0_Fissures.IfSeismogramMgr._d_EncodedDataSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/EncodedData:1.0"], 0)
_0_Fissures.IfSeismogramMgr._ad_EncodedDataSeq = (omniORB.tcInternal.tv_alias, EncodedDataSeq._NP_RepositoryId, "EncodedDataSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/EncodedData:1.0"], 0))
_0_Fissures.IfSeismogramMgr._tc_EncodedDataSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._ad_EncodedDataSeq)
omniORB.registerType(EncodedDataSeq._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._ad_EncodedDataSeq, _0_Fissures.IfSeismogramMgr._tc_EncodedDataSeq)
del EncodedDataSeq

# typedef ... MotionVectorAttr
class MotionVectorAttr:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramMgr/MotionVectorAttr:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramMgr.MotionVectorAttr = MotionVectorAttr
_0_Fissures.IfSeismogramMgr._d_MotionVectorAttr  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/MotionVectorAttr:1.0"]
_0_Fissures.IfSeismogramMgr._ad_MotionVectorAttr = (omniORB.tcInternal.tv_alias, MotionVectorAttr._NP_RepositoryId, "MotionVectorAttr", omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/MotionVectorAttr:1.0"])
_0_Fissures.IfSeismogramMgr._tc_MotionVectorAttr = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._ad_MotionVectorAttr)
omniORB.registerType(MotionVectorAttr._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._ad_MotionVectorAttr, _0_Fissures.IfSeismogramMgr._tc_MotionVectorAttr)
del MotionVectorAttr

# typedef ... ChannelIdSeq
class ChannelIdSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramMgr/ChannelIdSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramMgr.ChannelIdSeq = ChannelIdSeq
_0_Fissures.IfSeismogramMgr._d_ChannelIdSeq  = omniORB.typeMapping["IDL:iris.edu/Fissures/IfNetwork/ChannelIdSeq:1.0"]
_0_Fissures.IfSeismogramMgr._ad_ChannelIdSeq = (omniORB.tcInternal.tv_alias, ChannelIdSeq._NP_RepositoryId, "ChannelIdSeq", omniORB.typeCodeMapping["IDL:iris.edu/Fissures/IfNetwork/ChannelIdSeq:1.0"]._d)
_0_Fissures.IfSeismogramMgr._tc_ChannelIdSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._ad_ChannelIdSeq)
omniORB.registerType(ChannelIdSeq._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._ad_ChannelIdSeq, _0_Fissures.IfSeismogramMgr._tc_ChannelIdSeq)
del ChannelIdSeq

# interface SeismogramFactory;
_0_Fissures.IfSeismogramMgr._d_SeismogramFactory = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramFactory:1.0", "SeismogramFactory")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramFactory:1.0"] = _0_Fissures.IfSeismogramMgr._d_SeismogramFactory

# interface SeismogramFinder;
_0_Fissures.IfSeismogramMgr._d_SeismogramFinder = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramFinder:1.0", "SeismogramFinder")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramFinder:1.0"] = _0_Fissures.IfSeismogramMgr._d_SeismogramFinder

# interface SeismogramAccess;
_0_Fissures.IfSeismogramMgr._d_SeismogramAccess = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramAccess:1.0", "SeismogramAccess")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramAccess:1.0"] = _0_Fissures.IfSeismogramMgr._d_SeismogramAccess

# interface Seismogram;
_0_Fissures.IfSeismogramMgr._d_Seismogram = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfSeismogramMgr/Seismogram:1.0", "Seismogram")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/Seismogram:1.0"] = _0_Fissures.IfSeismogramMgr._d_Seismogram

# typedef ... SeismogramFactorySeq
class SeismogramFactorySeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramFactorySeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramMgr.SeismogramFactorySeq = SeismogramFactorySeq
_0_Fissures.IfSeismogramMgr._d_SeismogramFactorySeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramFactory:1.0"], 0)
_0_Fissures.IfSeismogramMgr._ad_SeismogramFactorySeq = (omniORB.tcInternal.tv_alias, SeismogramFactorySeq._NP_RepositoryId, "SeismogramFactorySeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramFactory:1.0"], 0))
_0_Fissures.IfSeismogramMgr._tc_SeismogramFactorySeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._ad_SeismogramFactorySeq)
omniORB.registerType(SeismogramFactorySeq._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._ad_SeismogramFactorySeq, _0_Fissures.IfSeismogramMgr._tc_SeismogramFactorySeq)
del SeismogramFactorySeq

# typedef ... SeismogramAccessSeq
class SeismogramAccessSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramAccessSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramMgr.SeismogramAccessSeq = SeismogramAccessSeq
_0_Fissures.IfSeismogramMgr._d_SeismogramAccessSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramAccess:1.0"], 0)
_0_Fissures.IfSeismogramMgr._ad_SeismogramAccessSeq = (omniORB.tcInternal.tv_alias, SeismogramAccessSeq._NP_RepositoryId, "SeismogramAccessSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramAccess:1.0"], 0))
_0_Fissures.IfSeismogramMgr._tc_SeismogramAccessSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._ad_SeismogramAccessSeq)
omniORB.registerType(SeismogramAccessSeq._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._ad_SeismogramAccessSeq, _0_Fissures.IfSeismogramMgr._tc_SeismogramAccessSeq)
del SeismogramAccessSeq

# typedef ... SeismogramSeq
class SeismogramSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramMgr.SeismogramSeq = SeismogramSeq
_0_Fissures.IfSeismogramMgr._d_SeismogramSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/Seismogram:1.0"], 0)
_0_Fissures.IfSeismogramMgr._ad_SeismogramSeq = (omniORB.tcInternal.tv_alias, SeismogramSeq._NP_RepositoryId, "SeismogramSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/Seismogram:1.0"], 0))
_0_Fissures.IfSeismogramMgr._tc_SeismogramSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._ad_SeismogramSeq)
omniORB.registerType(SeismogramSeq._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._ad_SeismogramSeq, _0_Fissures.IfSeismogramMgr._tc_SeismogramSeq)
del SeismogramSeq

# typedef ... MirrorId
class MirrorId:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramMgr/MirrorId:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramMgr.MirrorId = MirrorId
_0_Fissures.IfSeismogramMgr._d_MirrorId  = (omniORB.tcInternal.tv_string,0)
_0_Fissures.IfSeismogramMgr._ad_MirrorId = (omniORB.tcInternal.tv_alias, MirrorId._NP_RepositoryId, "MirrorId", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfSeismogramMgr._tc_MirrorId = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._ad_MirrorId)
omniORB.registerType(MirrorId._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._ad_MirrorId, _0_Fissures.IfSeismogramMgr._tc_MirrorId)
del MirrorId

# struct MirrorFilter
_0_Fissures.IfSeismogramMgr.MirrorFilter = omniORB.newEmptyClass()
class MirrorFilter (omniORB.StructBase):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramMgr/MirrorFilter:1.0"

    def __init__(self, network_name, station_name, site_id, channel_code):
        self.network_name = network_name
        self.station_name = station_name
        self.site_id = site_id
        self.channel_code = channel_code

_0_Fissures.IfSeismogramMgr.MirrorFilter = MirrorFilter
_0_Fissures.IfSeismogramMgr._d_MirrorFilter  = (omniORB.tcInternal.tv_struct, MirrorFilter, MirrorFilter._NP_RepositoryId, "MirrorFilter", "network_name", (omniORB.tcInternal.tv_string,0), "station_name", (omniORB.tcInternal.tv_string,0), "site_id", (omniORB.tcInternal.tv_string,0), "channel_code", (omniORB.tcInternal.tv_string,0))
_0_Fissures.IfSeismogramMgr._tc_MirrorFilter = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._d_MirrorFilter)
omniORB.registerType(MirrorFilter._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._d_MirrorFilter, _0_Fissures.IfSeismogramMgr._tc_MirrorFilter)
del MirrorFilter

# typedef ... MirrorFilterSeq
class MirrorFilterSeq:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramMgr/MirrorFilterSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramMgr.MirrorFilterSeq = MirrorFilterSeq
_0_Fissures.IfSeismogramMgr._d_MirrorFilterSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/MirrorFilter:1.0"], 0)
_0_Fissures.IfSeismogramMgr._ad_MirrorFilterSeq = (omniORB.tcInternal.tv_alias, MirrorFilterSeq._NP_RepositoryId, "MirrorFilterSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/MirrorFilter:1.0"], 0))
_0_Fissures.IfSeismogramMgr._tc_MirrorFilterSeq = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._ad_MirrorFilterSeq)
omniORB.registerType(MirrorFilterSeq._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._ad_MirrorFilterSeq, _0_Fissures.IfSeismogramMgr._tc_MirrorFilterSeq)
del MirrorFilterSeq

# typedef ... ErrorCode
class ErrorCode:
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramMgr/ErrorCode:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Fissures.IfSeismogramMgr.ErrorCode = ErrorCode
_0_Fissures.IfSeismogramMgr._d_ErrorCode  = omniORB.typeMapping["IDL:iris.edu/Fissures/ErrorCode:1.0"]
_0_Fissures.IfSeismogramMgr._ad_ErrorCode = (omniORB.tcInternal.tv_alias, ErrorCode._NP_RepositoryId, "ErrorCode", omniORB.typeCodeMapping["IDL:iris.edu/Fissures/ErrorCode:1.0"]._d)
_0_Fissures.IfSeismogramMgr._tc_ErrorCode = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._ad_ErrorCode)
omniORB.registerType(ErrorCode._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._ad_ErrorCode, _0_Fissures.IfSeismogramMgr._tc_ErrorCode)
del ErrorCode
_0_Fissures.IfSeismogramMgr.NOT_FOUND = 2
_0_Fissures.IfSeismogramMgr.ILLEGAL_ATTRIBUTE = 3
_0_Fissures.IfSeismogramMgr.WRONG_DATA_TYPE = 4

# valuetype RemoteMotionVector
_0_Fissures.IfSeismogramMgr._d_RemoteMotionVector = (omniORB.tcInternal.tv__indirect, ["IDL:iris.edu/Fissures/IfSeismogramMgr/RemoteMotionVector:1.0"])
omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/RemoteMotionVector:1.0"] = _0_Fissures.IfSeismogramMgr._d_RemoteMotionVector
_0_Fissures.IfSeismogramMgr.RemoteMotionVector = omniORB.newEmptyClass()

class RemoteMotionVector (_0_Fissures.IfSeismogramDC.MotionVectorAttr):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramMgr/RemoteMotionVector:1.0"

    def __init__(self, *args, **kwargs):
        if args:
            if len(args) != 11:
                raise TypeError("RemoteMotionVector() takes 11 arguments "
                                "(%d given)" % len(args))
            self.id = args[0]
            self.properties = args[1]
            self.begin_time = args[2]
            self.num_points = args[3]
            self.sampling_info = args[4]
            self.y_unit = args[5]
            self.channel_group = args[6]
            self.parm_ids = args[7]
            self.time_corrections = args[8]
            self.sample_rate_history = args[9]
            self.seismograms = args[10]
        if kwargs:
            self.__dict__.update(kwargs)

_0_Fissures.IfSeismogramMgr.RemoteMotionVector = RemoteMotionVector
_0_Fissures.IfSeismogramMgr._d_RemoteMotionVector  = (omniORB.tcInternal.tv_value, RemoteMotionVector, RemoteMotionVector._NP_RepositoryId, "RemoteMotionVector", _0_CORBA.VM_NONE, None, _0_Fissures.IfSeismogramDC._d_MotionVectorAttr, "seismograms", omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramSeq:1.0"], _0_CORBA.PUBLIC_MEMBER)
_0_Fissures.IfSeismogramMgr._tc_RemoteMotionVector = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._d_RemoteMotionVector)
omniORB.registerType(RemoteMotionVector._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._d_RemoteMotionVector, _0_Fissures.IfSeismogramMgr._tc_RemoteMotionVector)
del RemoteMotionVector


# exception NotMirroring
_0_Fissures.IfSeismogramMgr.NotMirroring = omniORB.newEmptyClass()
class NotMirroring (CORBA.UserException):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramMgr/NotMirroring:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_Fissures.IfSeismogramMgr.NotMirroring = NotMirroring
_0_Fissures.IfSeismogramMgr._d_NotMirroring  = (omniORB.tcInternal.tv_except, NotMirroring, NotMirroring._NP_RepositoryId, "NotMirroring")
_0_Fissures.IfSeismogramMgr._tc_NotMirroring = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._d_NotMirroring)
omniORB.registerType(NotMirroring._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._d_NotMirroring, _0_Fissures.IfSeismogramMgr._tc_NotMirroring)
del NotMirroring

# exception UnknownChannel
_0_Fissures.IfSeismogramMgr.UnknownChannel = omniORB.newEmptyClass()
class UnknownChannel (CORBA.UserException):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramMgr/UnknownChannel:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_Fissures.IfSeismogramMgr.UnknownChannel = UnknownChannel
_0_Fissures.IfSeismogramMgr._d_UnknownChannel  = (omniORB.tcInternal.tv_except, UnknownChannel, UnknownChannel._NP_RepositoryId, "UnknownChannel")
_0_Fissures.IfSeismogramMgr._tc_UnknownChannel = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._d_UnknownChannel)
omniORB.registerType(UnknownChannel._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._d_UnknownChannel, _0_Fissures.IfSeismogramMgr._tc_UnknownChannel)
del UnknownChannel

# exception UnknownMirrorId
_0_Fissures.IfSeismogramMgr.UnknownMirrorId = omniORB.newEmptyClass()
class UnknownMirrorId (CORBA.UserException):
    _NP_RepositoryId = "IDL:iris.edu/Fissures/IfSeismogramMgr/UnknownMirrorId:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_Fissures.IfSeismogramMgr.UnknownMirrorId = UnknownMirrorId
_0_Fissures.IfSeismogramMgr._d_UnknownMirrorId  = (omniORB.tcInternal.tv_except, UnknownMirrorId, UnknownMirrorId._NP_RepositoryId, "UnknownMirrorId")
_0_Fissures.IfSeismogramMgr._tc_UnknownMirrorId = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._d_UnknownMirrorId)
omniORB.registerType(UnknownMirrorId._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._d_UnknownMirrorId, _0_Fissures.IfSeismogramMgr._tc_UnknownMirrorId)
del UnknownMirrorId

# interface SeismogramComponent
_0_Fissures.IfSeismogramMgr._d_SeismogramComponent = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramComponent:1.0", "SeismogramComponent")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramComponent:1.0"] = _0_Fissures.IfSeismogramMgr._d_SeismogramComponent
_0_Fissures.IfSeismogramMgr.SeismogramComponent = omniORB.newEmptyClass()
class SeismogramComponent :
    _NP_RepositoryId = _0_Fissures.IfSeismogramMgr._d_SeismogramComponent[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfSeismogramMgr.SeismogramComponent = SeismogramComponent
_0_Fissures.IfSeismogramMgr._tc_SeismogramComponent = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._d_SeismogramComponent)
omniORB.registerType(SeismogramComponent._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._d_SeismogramComponent, _0_Fissures.IfSeismogramMgr._tc_SeismogramComponent)

# SeismogramComponent operations and attributes
SeismogramComponent._d__get_a_finder = ((),(omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramFinder:1.0"],),None)
SeismogramComponent._d__get_a_factory = ((),(omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramFactory:1.0"],),None)

# SeismogramComponent object reference
class _objref_SeismogramComponent (CORBA.Object):
    _NP_RepositoryId = SeismogramComponent._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def _get_a_finder(self, *args):
        return _omnipy.invoke(self, "_get_a_finder", _0_Fissures.IfSeismogramMgr.SeismogramComponent._d__get_a_finder, args)

    def _get_a_factory(self, *args):
        return _omnipy.invoke(self, "_get_a_factory", _0_Fissures.IfSeismogramMgr.SeismogramComponent._d__get_a_factory, args)

    __methods__ = ["_get_a_finder", "_get_a_factory"] + CORBA.Object.__methods__

omniORB.registerObjref(SeismogramComponent._NP_RepositoryId, _objref_SeismogramComponent)
_0_Fissures.IfSeismogramMgr._objref_SeismogramComponent = _objref_SeismogramComponent
del SeismogramComponent, _objref_SeismogramComponent

# SeismogramComponent skeleton
__name__ = "Fissures__POA.IfSeismogramMgr"
class SeismogramComponent (PortableServer.Servant):
    _NP_RepositoryId = _0_Fissures.IfSeismogramMgr.SeismogramComponent._NP_RepositoryId


    _omni_op_d = {"_get_a_finder": _0_Fissures.IfSeismogramMgr.SeismogramComponent._d__get_a_finder, "_get_a_factory": _0_Fissures.IfSeismogramMgr.SeismogramComponent._d__get_a_factory}

SeismogramComponent._omni_skeleton = SeismogramComponent
_0_Fissures__POA.IfSeismogramMgr.SeismogramComponent = SeismogramComponent
omniORB.registerSkeleton(SeismogramComponent._NP_RepositoryId, SeismogramComponent)
del SeismogramComponent
__name__ = "Fissures.IfSeismogramMgr"

# interface SeismogramFinder
_0_Fissures.IfSeismogramMgr._d_SeismogramFinder = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramFinder:1.0", "SeismogramFinder")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramFinder:1.0"] = _0_Fissures.IfSeismogramMgr._d_SeismogramFinder
_0_Fissures.IfSeismogramMgr.SeismogramFinder = omniORB.newEmptyClass()
class SeismogramFinder (_0_Fissures.IfSeismogramMgr.SeismogramComponent):
    _NP_RepositoryId = _0_Fissures.IfSeismogramMgr._d_SeismogramFinder[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfSeismogramMgr.SeismogramFinder = SeismogramFinder
_0_Fissures.IfSeismogramMgr._tc_SeismogramFinder = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._d_SeismogramFinder)
omniORB.registerType(SeismogramFinder._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._d_SeismogramFinder, _0_Fissures.IfSeismogramMgr._tc_SeismogramFinder)

# SeismogramFinder operations and attributes
SeismogramFinder._d_find_seismograms = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/RequestFilterSeq:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramAccessSeq:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException})
SeismogramFinder._d_find_group = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/GroupRequestSeq:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/RemoteMotionVector:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException}, None, 1)

# SeismogramFinder object reference
class _objref_SeismogramFinder (_0_Fissures.IfSeismogramMgr._objref_SeismogramComponent):
    _NP_RepositoryId = SeismogramFinder._NP_RepositoryId

    def __init__(self):
        _0_Fissures.IfSeismogramMgr._objref_SeismogramComponent.__init__(self)

    def find_seismograms(self, *args):
        return _omnipy.invoke(self, "find_seismograms", _0_Fissures.IfSeismogramMgr.SeismogramFinder._d_find_seismograms, args)

    def find_group(self, *args):
        return _omnipy.invoke(self, "find_group", _0_Fissures.IfSeismogramMgr.SeismogramFinder._d_find_group, args)

    __methods__ = ["find_seismograms", "find_group"] + _0_Fissures.IfSeismogramMgr._objref_SeismogramComponent.__methods__

omniORB.registerObjref(SeismogramFinder._NP_RepositoryId, _objref_SeismogramFinder)
_0_Fissures.IfSeismogramMgr._objref_SeismogramFinder = _objref_SeismogramFinder
del SeismogramFinder, _objref_SeismogramFinder

# SeismogramFinder skeleton
__name__ = "Fissures__POA.IfSeismogramMgr"
class SeismogramFinder (_0_Fissures__POA.IfSeismogramMgr.SeismogramComponent):
    _NP_RepositoryId = _0_Fissures.IfSeismogramMgr.SeismogramFinder._NP_RepositoryId


    _omni_op_d = {"find_seismograms": _0_Fissures.IfSeismogramMgr.SeismogramFinder._d_find_seismograms, "find_group": _0_Fissures.IfSeismogramMgr.SeismogramFinder._d_find_group}
    _omni_op_d.update(_0_Fissures__POA.IfSeismogramMgr.SeismogramComponent._omni_op_d)

SeismogramFinder._omni_skeleton = SeismogramFinder
_0_Fissures__POA.IfSeismogramMgr.SeismogramFinder = SeismogramFinder
omniORB.registerSkeleton(SeismogramFinder._NP_RepositoryId, SeismogramFinder)
del SeismogramFinder
__name__ = "Fissures.IfSeismogramMgr"

# interface SeismogramFactory
_0_Fissures.IfSeismogramMgr._d_SeismogramFactory = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramFactory:1.0", "SeismogramFactory")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramFactory:1.0"] = _0_Fissures.IfSeismogramMgr._d_SeismogramFactory
_0_Fissures.IfSeismogramMgr.SeismogramFactory = omniORB.newEmptyClass()
class SeismogramFactory :
    _NP_RepositoryId = _0_Fissures.IfSeismogramMgr._d_SeismogramFactory[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfSeismogramMgr.SeismogramFactory = SeismogramFactory
_0_Fissures.IfSeismogramMgr._tc_SeismogramFactory = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._d_SeismogramFactory)
omniORB.registerType(SeismogramFactory._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._d_SeismogramFactory, _0_Fissures.IfSeismogramMgr._tc_SeismogramFactory)

# SeismogramFactory operations and attributes
SeismogramFactory._d_active_seismogram_count = ((), (omniORB.tcInternal.tv_long, ), None)
SeismogramFactory._d_create = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/SeismogramAttr:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/Seismogram:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException}, None, 1)
SeismogramFactory._d_create_from_value = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/LocalSeismogram:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/Seismogram:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException}, None, 1)
SeismogramFactory._d_create_from_values = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/LocalMotionVector:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramSeq:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException}, None, 1)
SeismogramFactory._d_create_from_ref = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/Seismogram:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/Seismogram:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException})

# SeismogramFactory object reference
class _objref_SeismogramFactory (CORBA.Object):
    _NP_RepositoryId = SeismogramFactory._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def active_seismogram_count(self, *args):
        return _omnipy.invoke(self, "active_seismogram_count", _0_Fissures.IfSeismogramMgr.SeismogramFactory._d_active_seismogram_count, args)

    def create(self, *args):
        return _omnipy.invoke(self, "create", _0_Fissures.IfSeismogramMgr.SeismogramFactory._d_create, args)

    def create_from_value(self, *args):
        return _omnipy.invoke(self, "create_from_value", _0_Fissures.IfSeismogramMgr.SeismogramFactory._d_create_from_value, args)

    def create_from_values(self, *args):
        return _omnipy.invoke(self, "create_from_values", _0_Fissures.IfSeismogramMgr.SeismogramFactory._d_create_from_values, args)

    def create_from_ref(self, *args):
        return _omnipy.invoke(self, "create_from_ref", _0_Fissures.IfSeismogramMgr.SeismogramFactory._d_create_from_ref, args)

    __methods__ = ["active_seismogram_count", "create", "create_from_value", "create_from_values", "create_from_ref"] + CORBA.Object.__methods__

omniORB.registerObjref(SeismogramFactory._NP_RepositoryId, _objref_SeismogramFactory)
_0_Fissures.IfSeismogramMgr._objref_SeismogramFactory = _objref_SeismogramFactory
del SeismogramFactory, _objref_SeismogramFactory

# SeismogramFactory skeleton
__name__ = "Fissures__POA.IfSeismogramMgr"
class SeismogramFactory (PortableServer.Servant):
    _NP_RepositoryId = _0_Fissures.IfSeismogramMgr.SeismogramFactory._NP_RepositoryId


    _omni_op_d = {"active_seismogram_count": _0_Fissures.IfSeismogramMgr.SeismogramFactory._d_active_seismogram_count, "create": _0_Fissures.IfSeismogramMgr.SeismogramFactory._d_create, "create_from_value": _0_Fissures.IfSeismogramMgr.SeismogramFactory._d_create_from_value, "create_from_values": _0_Fissures.IfSeismogramMgr.SeismogramFactory._d_create_from_values, "create_from_ref": _0_Fissures.IfSeismogramMgr.SeismogramFactory._d_create_from_ref}

SeismogramFactory._omni_skeleton = SeismogramFactory
_0_Fissures__POA.IfSeismogramMgr.SeismogramFactory = SeismogramFactory
omniORB.registerSkeleton(SeismogramFactory._NP_RepositoryId, SeismogramFactory)
del SeismogramFactory
__name__ = "Fissures.IfSeismogramMgr"

# interface SeismogramAccess
_0_Fissures.IfSeismogramMgr._d_SeismogramAccess = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramAccess:1.0", "SeismogramAccess")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramAccess:1.0"] = _0_Fissures.IfSeismogramMgr._d_SeismogramAccess
_0_Fissures.IfSeismogramMgr.SeismogramAccess = omniORB.newEmptyClass()
class SeismogramAccess (_0_Fissures.IfSeismogramMgr.SeismogramComponent, _0_Fissures.IfTimeSeries.TimeSeriesAccess):
    _NP_RepositoryId = _0_Fissures.IfSeismogramMgr._d_SeismogramAccess[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfSeismogramMgr.SeismogramAccess = SeismogramAccess
_0_Fissures.IfSeismogramMgr._tc_SeismogramAccess = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._d_SeismogramAccess)
omniORB.registerType(SeismogramAccess._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._d_SeismogramAccess, _0_Fissures.IfSeismogramMgr._tc_SeismogramAccess)

# SeismogramAccess operations and attributes
SeismogramAccess._d__get_a_writeable = ((),(omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/Seismogram:1.0"],),None)
SeismogramAccess._d__get_parm_svc = ((),(omniORB.typeMapping["IDL:iris.edu/Fissures/IfParameterMgr/ParameterComponent:1.0"],),None)
SeismogramAccess._d_get_attributes = ((), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/SeismogramAttr:1.0"], ), None, None, 1)
SeismogramAccess._d_get_range_as_longs = ((omniORB.typeMapping["IDL:iris.edu/Fissures/TimeInterval:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/LongSeq:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException}, None, 1)
SeismogramAccess._d_get_range_as_shorts = ((omniORB.typeMapping["IDL:iris.edu/Fissures/TimeInterval:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/ShortSeq:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException}, None, 1)
SeismogramAccess._d_get_range_as_floats = ((omniORB.typeMapping["IDL:iris.edu/Fissures/TimeInterval:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/FloatSeq:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException}, None, 1)
SeismogramAccess._d_get_range_as_doubles = ((omniORB.typeMapping["IDL:iris.edu/Fissures/TimeInterval:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/DoubleSeq:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException}, None, 1)
SeismogramAccess._d_get_range_as_encoded = ((omniORB.typeMapping["IDL:iris.edu/Fissures/TimeInterval:1.0"], ), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/EncodedDataSeq:1.0"], ), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException}, None, 1)

# SeismogramAccess object reference
class _objref_SeismogramAccess (_0_Fissures.IfSeismogramMgr._objref_SeismogramComponent, _0_Fissures.IfTimeSeries._objref_TimeSeriesAccess):
    _NP_RepositoryId = SeismogramAccess._NP_RepositoryId

    def __init__(self):
        _0_Fissures.IfSeismogramMgr._objref_SeismogramComponent.__init__(self)
        _0_Fissures.IfTimeSeries._objref_TimeSeriesAccess.__init__(self)

    def _get_a_writeable(self, *args):
        return _omnipy.invoke(self, "_get_a_writeable", _0_Fissures.IfSeismogramMgr.SeismogramAccess._d__get_a_writeable, args)

    def _get_parm_svc(self, *args):
        return _omnipy.invoke(self, "_get_parm_svc", _0_Fissures.IfSeismogramMgr.SeismogramAccess._d__get_parm_svc, args)

    def get_attributes(self, *args):
        return _omnipy.invoke(self, "get_attributes", _0_Fissures.IfSeismogramMgr.SeismogramAccess._d_get_attributes, args)

    def get_range_as_longs(self, *args):
        return _omnipy.invoke(self, "get_range_as_longs", _0_Fissures.IfSeismogramMgr.SeismogramAccess._d_get_range_as_longs, args)

    def get_range_as_shorts(self, *args):
        return _omnipy.invoke(self, "get_range_as_shorts", _0_Fissures.IfSeismogramMgr.SeismogramAccess._d_get_range_as_shorts, args)

    def get_range_as_floats(self, *args):
        return _omnipy.invoke(self, "get_range_as_floats", _0_Fissures.IfSeismogramMgr.SeismogramAccess._d_get_range_as_floats, args)

    def get_range_as_doubles(self, *args):
        return _omnipy.invoke(self, "get_range_as_doubles", _0_Fissures.IfSeismogramMgr.SeismogramAccess._d_get_range_as_doubles, args)

    def get_range_as_encoded(self, *args):
        return _omnipy.invoke(self, "get_range_as_encoded", _0_Fissures.IfSeismogramMgr.SeismogramAccess._d_get_range_as_encoded, args)

    __methods__ = ["_get_a_writeable", "_get_parm_svc", "get_attributes", "get_range_as_longs", "get_range_as_shorts", "get_range_as_floats", "get_range_as_doubles", "get_range_as_encoded"] + _0_Fissures.IfSeismogramMgr._objref_SeismogramComponent.__methods__ + _0_Fissures.IfTimeSeries._objref_TimeSeriesAccess.__methods__

omniORB.registerObjref(SeismogramAccess._NP_RepositoryId, _objref_SeismogramAccess)
_0_Fissures.IfSeismogramMgr._objref_SeismogramAccess = _objref_SeismogramAccess
del SeismogramAccess, _objref_SeismogramAccess

# SeismogramAccess skeleton
__name__ = "Fissures__POA.IfSeismogramMgr"
class SeismogramAccess (_0_Fissures__POA.IfSeismogramMgr.SeismogramComponent, _0_Fissures__POA.IfTimeSeries.TimeSeriesAccess):
    _NP_RepositoryId = _0_Fissures.IfSeismogramMgr.SeismogramAccess._NP_RepositoryId


    _omni_op_d = {"_get_a_writeable": _0_Fissures.IfSeismogramMgr.SeismogramAccess._d__get_a_writeable, "_get_parm_svc": _0_Fissures.IfSeismogramMgr.SeismogramAccess._d__get_parm_svc, "get_attributes": _0_Fissures.IfSeismogramMgr.SeismogramAccess._d_get_attributes, "get_range_as_longs": _0_Fissures.IfSeismogramMgr.SeismogramAccess._d_get_range_as_longs, "get_range_as_shorts": _0_Fissures.IfSeismogramMgr.SeismogramAccess._d_get_range_as_shorts, "get_range_as_floats": _0_Fissures.IfSeismogramMgr.SeismogramAccess._d_get_range_as_floats, "get_range_as_doubles": _0_Fissures.IfSeismogramMgr.SeismogramAccess._d_get_range_as_doubles, "get_range_as_encoded": _0_Fissures.IfSeismogramMgr.SeismogramAccess._d_get_range_as_encoded}
    _omni_op_d.update(_0_Fissures__POA.IfSeismogramMgr.SeismogramComponent._omni_op_d)
    _omni_op_d.update(_0_Fissures__POA.IfTimeSeries.TimeSeriesAccess._omni_op_d)

SeismogramAccess._omni_skeleton = SeismogramAccess
_0_Fissures__POA.IfSeismogramMgr.SeismogramAccess = SeismogramAccess
omniORB.registerSkeleton(SeismogramAccess._NP_RepositoryId, SeismogramAccess)
del SeismogramAccess
__name__ = "Fissures.IfSeismogramMgr"

# interface Seismogram
_0_Fissures.IfSeismogramMgr._d_Seismogram = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfSeismogramMgr/Seismogram:1.0", "Seismogram")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/Seismogram:1.0"] = _0_Fissures.IfSeismogramMgr._d_Seismogram
_0_Fissures.IfSeismogramMgr.Seismogram = omniORB.newEmptyClass()
class Seismogram (_0_Fissures.IfSeismogramMgr.SeismogramAccess, _0_Fissures.IfTimeSeries.TimeSeriesAdmin):
    _NP_RepositoryId = _0_Fissures.IfSeismogramMgr._d_Seismogram[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfSeismogramMgr.Seismogram = Seismogram
_0_Fissures.IfSeismogramMgr._tc_Seismogram = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._d_Seismogram)
omniORB.registerType(Seismogram._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._d_Seismogram, _0_Fissures.IfSeismogramMgr._tc_Seismogram)

# Seismogram operations and attributes
Seismogram._d_process_time_corrections = ((omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"], ), (), {_0_Fissures.NotImplemented._NP_RepositoryId: _0_Fissures._d_NotImplemented})
Seismogram._d_set_attributes = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramDC/SeismogramAttr:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/AuditInfoOpt:1.0"]), (), {_0_Fissures.FissuresException._NP_RepositoryId: _0_Fissures._d_FissuresException}, None, 1)
Seismogram._d_destroy = ((), (), None)

# Seismogram object reference
class _objref_Seismogram (_0_Fissures.IfSeismogramMgr._objref_SeismogramAccess, _0_Fissures.IfTimeSeries._objref_TimeSeriesAdmin):
    _NP_RepositoryId = Seismogram._NP_RepositoryId

    def __init__(self):
        _0_Fissures.IfSeismogramMgr._objref_SeismogramAccess.__init__(self)
        _0_Fissures.IfTimeSeries._objref_TimeSeriesAdmin.__init__(self)

    def process_time_corrections(self, *args):
        return _omnipy.invoke(self, "process_time_corrections", _0_Fissures.IfSeismogramMgr.Seismogram._d_process_time_corrections, args)

    def set_attributes(self, *args):
        return _omnipy.invoke(self, "set_attributes", _0_Fissures.IfSeismogramMgr.Seismogram._d_set_attributes, args)

    def destroy(self, *args):
        return _omnipy.invoke(self, "destroy", _0_Fissures.IfSeismogramMgr.Seismogram._d_destroy, args)

    __methods__ = ["process_time_corrections", "set_attributes", "destroy"] + _0_Fissures.IfSeismogramMgr._objref_SeismogramAccess.__methods__ + _0_Fissures.IfTimeSeries._objref_TimeSeriesAdmin.__methods__

omniORB.registerObjref(Seismogram._NP_RepositoryId, _objref_Seismogram)
_0_Fissures.IfSeismogramMgr._objref_Seismogram = _objref_Seismogram
del Seismogram, _objref_Seismogram

# Seismogram skeleton
__name__ = "Fissures__POA.IfSeismogramMgr"
class Seismogram (_0_Fissures__POA.IfSeismogramMgr.SeismogramAccess, _0_Fissures__POA.IfTimeSeries.TimeSeriesAdmin):
    _NP_RepositoryId = _0_Fissures.IfSeismogramMgr.Seismogram._NP_RepositoryId


    _omni_op_d = {"process_time_corrections": _0_Fissures.IfSeismogramMgr.Seismogram._d_process_time_corrections, "set_attributes": _0_Fissures.IfSeismogramMgr.Seismogram._d_set_attributes, "destroy": _0_Fissures.IfSeismogramMgr.Seismogram._d_destroy}
    _omni_op_d.update(_0_Fissures__POA.IfSeismogramMgr.SeismogramAccess._omni_op_d)
    _omni_op_d.update(_0_Fissures__POA.IfTimeSeries.TimeSeriesAdmin._omni_op_d)

Seismogram._omni_skeleton = Seismogram
_0_Fissures__POA.IfSeismogramMgr.Seismogram = Seismogram
omniORB.registerSkeleton(Seismogram._NP_RepositoryId, Seismogram)
del Seismogram
__name__ = "Fissures.IfSeismogramMgr"

# interface ChannelMirrorAdmin
_0_Fissures.IfSeismogramMgr._d_ChannelMirrorAdmin = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfSeismogramMgr/ChannelMirrorAdmin:1.0", "ChannelMirrorAdmin")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/ChannelMirrorAdmin:1.0"] = _0_Fissures.IfSeismogramMgr._d_ChannelMirrorAdmin
_0_Fissures.IfSeismogramMgr.ChannelMirrorAdmin = omniORB.newEmptyClass()
class ChannelMirrorAdmin :
    _NP_RepositoryId = _0_Fissures.IfSeismogramMgr._d_ChannelMirrorAdmin[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfSeismogramMgr.ChannelMirrorAdmin = ChannelMirrorAdmin
_0_Fissures.IfSeismogramMgr._tc_ChannelMirrorAdmin = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._d_ChannelMirrorAdmin)
omniORB.registerType(ChannelMirrorAdmin._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._d_ChannelMirrorAdmin, _0_Fissures.IfSeismogramMgr._tc_ChannelMirrorAdmin)

# ChannelMirrorAdmin operations and attributes
ChannelMirrorAdmin._d_active_seismogram_mirrors = ((), (omniORB.tcInternal.tv_long, ), None)
ChannelMirrorAdmin._d_get_mirrored_seismograms = ((), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramSeq:1.0"], ), None)
ChannelMirrorAdmin._d_get_factory_mirrors = ((), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramFactorySeq:1.0"], ), None)
ChannelMirrorAdmin._d_stop_mirrors = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramFactorySeq:1.0"], ), (), None)
ChannelMirrorAdmin._d_stop_mirroring = ((), (), None)
ChannelMirrorAdmin._d_resume_mirroring = ((), (), None)
ChannelMirrorAdmin._d_is_mirroring = ((), (omniORB.tcInternal.tv_boolean, ), None)

# ChannelMirrorAdmin object reference
class _objref_ChannelMirrorAdmin (CORBA.Object):
    _NP_RepositoryId = ChannelMirrorAdmin._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def active_seismogram_mirrors(self, *args):
        return _omnipy.invoke(self, "active_seismogram_mirrors", _0_Fissures.IfSeismogramMgr.ChannelMirrorAdmin._d_active_seismogram_mirrors, args)

    def get_mirrored_seismograms(self, *args):
        return _omnipy.invoke(self, "get_mirrored_seismograms", _0_Fissures.IfSeismogramMgr.ChannelMirrorAdmin._d_get_mirrored_seismograms, args)

    def get_factory_mirrors(self, *args):
        return _omnipy.invoke(self, "get_factory_mirrors", _0_Fissures.IfSeismogramMgr.ChannelMirrorAdmin._d_get_factory_mirrors, args)

    def stop_mirrors(self, *args):
        return _omnipy.invoke(self, "stop_mirrors", _0_Fissures.IfSeismogramMgr.ChannelMirrorAdmin._d_stop_mirrors, args)

    def stop_mirroring(self, *args):
        return _omnipy.invoke(self, "stop_mirroring", _0_Fissures.IfSeismogramMgr.ChannelMirrorAdmin._d_stop_mirroring, args)

    def resume_mirroring(self, *args):
        return _omnipy.invoke(self, "resume_mirroring", _0_Fissures.IfSeismogramMgr.ChannelMirrorAdmin._d_resume_mirroring, args)

    def is_mirroring(self, *args):
        return _omnipy.invoke(self, "is_mirroring", _0_Fissures.IfSeismogramMgr.ChannelMirrorAdmin._d_is_mirroring, args)

    __methods__ = ["active_seismogram_mirrors", "get_mirrored_seismograms", "get_factory_mirrors", "stop_mirrors", "stop_mirroring", "resume_mirroring", "is_mirroring"] + CORBA.Object.__methods__

omniORB.registerObjref(ChannelMirrorAdmin._NP_RepositoryId, _objref_ChannelMirrorAdmin)
_0_Fissures.IfSeismogramMgr._objref_ChannelMirrorAdmin = _objref_ChannelMirrorAdmin
del ChannelMirrorAdmin, _objref_ChannelMirrorAdmin

# ChannelMirrorAdmin skeleton
__name__ = "Fissures__POA.IfSeismogramMgr"
class ChannelMirrorAdmin (PortableServer.Servant):
    _NP_RepositoryId = _0_Fissures.IfSeismogramMgr.ChannelMirrorAdmin._NP_RepositoryId


    _omni_op_d = {"active_seismogram_mirrors": _0_Fissures.IfSeismogramMgr.ChannelMirrorAdmin._d_active_seismogram_mirrors, "get_mirrored_seismograms": _0_Fissures.IfSeismogramMgr.ChannelMirrorAdmin._d_get_mirrored_seismograms, "get_factory_mirrors": _0_Fissures.IfSeismogramMgr.ChannelMirrorAdmin._d_get_factory_mirrors, "stop_mirrors": _0_Fissures.IfSeismogramMgr.ChannelMirrorAdmin._d_stop_mirrors, "stop_mirroring": _0_Fissures.IfSeismogramMgr.ChannelMirrorAdmin._d_stop_mirroring, "resume_mirroring": _0_Fissures.IfSeismogramMgr.ChannelMirrorAdmin._d_resume_mirroring, "is_mirroring": _0_Fissures.IfSeismogramMgr.ChannelMirrorAdmin._d_is_mirroring}

ChannelMirrorAdmin._omni_skeleton = ChannelMirrorAdmin
_0_Fissures__POA.IfSeismogramMgr.ChannelMirrorAdmin = ChannelMirrorAdmin
omniORB.registerSkeleton(ChannelMirrorAdmin._NP_RepositoryId, ChannelMirrorAdmin)
del ChannelMirrorAdmin
__name__ = "Fissures.IfSeismogramMgr"

# interface MirrorFactory
_0_Fissures.IfSeismogramMgr._d_MirrorFactory = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfSeismogramMgr/MirrorFactory:1.0", "MirrorFactory")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/MirrorFactory:1.0"] = _0_Fissures.IfSeismogramMgr._d_MirrorFactory
_0_Fissures.IfSeismogramMgr.MirrorFactory = omniORB.newEmptyClass()
class MirrorFactory :
    _NP_RepositoryId = _0_Fissures.IfSeismogramMgr._d_MirrorFactory[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfSeismogramMgr.MirrorFactory = MirrorFactory
_0_Fissures.IfSeismogramMgr._tc_MirrorFactory = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._d_MirrorFactory)
omniORB.registerType(MirrorFactory._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._d_MirrorFactory, _0_Fissures.IfSeismogramMgr._tc_MirrorFactory)

# MirrorFactory operations and attributes
MirrorFactory._d__get_a_factory = ((),(omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/SeismogramFactory:1.0"],),None)
MirrorFactory._d_mirroring_stopped = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/MirrorId:1.0"], omniORB.tcInternal.tv_boolean), (), None)

# MirrorFactory object reference
class _objref_MirrorFactory (CORBA.Object):
    _NP_RepositoryId = MirrorFactory._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def _get_a_factory(self, *args):
        return _omnipy.invoke(self, "_get_a_factory", _0_Fissures.IfSeismogramMgr.MirrorFactory._d__get_a_factory, args)

    def mirroring_stopped(self, *args):
        return _omnipy.invoke(self, "mirroring_stopped", _0_Fissures.IfSeismogramMgr.MirrorFactory._d_mirroring_stopped, args)

    __methods__ = ["_get_a_factory", "mirroring_stopped"] + CORBA.Object.__methods__

omniORB.registerObjref(MirrorFactory._NP_RepositoryId, _objref_MirrorFactory)
_0_Fissures.IfSeismogramMgr._objref_MirrorFactory = _objref_MirrorFactory
del MirrorFactory, _objref_MirrorFactory

# MirrorFactory skeleton
__name__ = "Fissures__POA.IfSeismogramMgr"
class MirrorFactory (PortableServer.Servant):
    _NP_RepositoryId = _0_Fissures.IfSeismogramMgr.MirrorFactory._NP_RepositoryId


    _omni_op_d = {"_get_a_factory": _0_Fissures.IfSeismogramMgr.MirrorFactory._d__get_a_factory, "mirroring_stopped": _0_Fissures.IfSeismogramMgr.MirrorFactory._d_mirroring_stopped}

MirrorFactory._omni_skeleton = MirrorFactory
_0_Fissures__POA.IfSeismogramMgr.MirrorFactory = MirrorFactory
omniORB.registerSkeleton(MirrorFactory._NP_RepositoryId, MirrorFactory)
del MirrorFactory
__name__ = "Fissures.IfSeismogramMgr"

# interface ChannelMirrorRegistry
_0_Fissures.IfSeismogramMgr._d_ChannelMirrorRegistry = (omniORB.tcInternal.tv_objref, "IDL:iris.edu/Fissures/IfSeismogramMgr/ChannelMirrorRegistry:1.0", "ChannelMirrorRegistry")
omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/ChannelMirrorRegistry:1.0"] = _0_Fissures.IfSeismogramMgr._d_ChannelMirrorRegistry
_0_Fissures.IfSeismogramMgr.ChannelMirrorRegistry = omniORB.newEmptyClass()
class ChannelMirrorRegistry :
    _NP_RepositoryId = _0_Fissures.IfSeismogramMgr._d_ChannelMirrorRegistry[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Fissures.IfSeismogramMgr.ChannelMirrorRegistry = ChannelMirrorRegistry
_0_Fissures.IfSeismogramMgr._tc_ChannelMirrorRegistry = omniORB.tcInternal.createTypeCode(_0_Fissures.IfSeismogramMgr._d_ChannelMirrorRegistry)
omniORB.registerType(ChannelMirrorRegistry._NP_RepositoryId, _0_Fissures.IfSeismogramMgr._d_ChannelMirrorRegistry, _0_Fissures.IfSeismogramMgr._tc_ChannelMirrorRegistry)

# ChannelMirrorRegistry operations and attributes
ChannelMirrorRegistry._d_register = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/MirrorFactory:1.0"], omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/ChannelIdSeq:1.0"]), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/MirrorId:1.0"], ), {_0_Fissures.IfSeismogramMgr.UnknownChannel._NP_RepositoryId: _0_Fissures.IfSeismogramMgr._d_UnknownChannel, _0_Fissures.IfSeismogramMgr.NotMirroring._NP_RepositoryId: _0_Fissures.IfSeismogramMgr._d_NotMirroring})
ChannelMirrorRegistry._d_unregister = ((omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/MirrorId:1.0"], ), (), {_0_Fissures.IfSeismogramMgr.UnknownMirrorId._NP_RepositoryId: _0_Fissures.IfSeismogramMgr._d_UnknownMirrorId})
ChannelMirrorRegistry._d_get_mirrorable_channels = ((), (omniORB.typeMapping["IDL:iris.edu/Fissures/IfSeismogramMgr/ChannelIdSeq:1.0"], ), None)

# ChannelMirrorRegistry object reference
class _objref_ChannelMirrorRegistry (CORBA.Object):
    _NP_RepositoryId = ChannelMirrorRegistry._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def register(self, *args):
        return _omnipy.invoke(self, "register", _0_Fissures.IfSeismogramMgr.ChannelMirrorRegistry._d_register, args)

    def unregister(self, *args):
        return _omnipy.invoke(self, "unregister", _0_Fissures.IfSeismogramMgr.ChannelMirrorRegistry._d_unregister, args)

    def get_mirrorable_channels(self, *args):
        return _omnipy.invoke(self, "get_mirrorable_channels", _0_Fissures.IfSeismogramMgr.ChannelMirrorRegistry._d_get_mirrorable_channels, args)

    __methods__ = ["register", "unregister", "get_mirrorable_channels"] + CORBA.Object.__methods__

omniORB.registerObjref(ChannelMirrorRegistry._NP_RepositoryId, _objref_ChannelMirrorRegistry)
_0_Fissures.IfSeismogramMgr._objref_ChannelMirrorRegistry = _objref_ChannelMirrorRegistry
del ChannelMirrorRegistry, _objref_ChannelMirrorRegistry

# ChannelMirrorRegistry skeleton
__name__ = "Fissures__POA.IfSeismogramMgr"
class ChannelMirrorRegistry (PortableServer.Servant):
    _NP_RepositoryId = _0_Fissures.IfSeismogramMgr.ChannelMirrorRegistry._NP_RepositoryId


    _omni_op_d = {"register": _0_Fissures.IfSeismogramMgr.ChannelMirrorRegistry._d_register, "unregister": _0_Fissures.IfSeismogramMgr.ChannelMirrorRegistry._d_unregister, "get_mirrorable_channels": _0_Fissures.IfSeismogramMgr.ChannelMirrorRegistry._d_get_mirrorable_channels}

ChannelMirrorRegistry._omni_skeleton = ChannelMirrorRegistry
_0_Fissures__POA.IfSeismogramMgr.ChannelMirrorRegistry = ChannelMirrorRegistry
omniORB.registerSkeleton(ChannelMirrorRegistry._NP_RepositoryId, ChannelMirrorRegistry)
del ChannelMirrorRegistry
__name__ = "Fissures.IfSeismogramMgr"

#
# End of module "Fissures.IfSeismogramMgr"
#
__name__ = "Fissures"


#
# End of module "Fissures"
#
__name__ = "IfSeismogramMgr_idl"

_exported_modules = ( "Fissures", "Fissures.IfSeismogramMgr")

# The end.
